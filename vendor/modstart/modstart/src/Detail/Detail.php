<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Detail; use Illuminate\Contracts\Support\Renderable; use Illuminate\Database\Eloquent\Model; use ModStart\Core\Dao\DynamicModel; use ModStart\Core\Exception\BizException; use ModStart\Core\Util\IdUtil; use ModStart\Detail\Type\DetailEngine; use ModStart\Field\AbstractField; use ModStart\Field\Type\FieldRenderMode; use ModStart\Form\Concern\HasCascadeFields; use ModStart\Form\Form; use ModStart\Repository\Filter\HasRepositoryFilter; use ModStart\Repository\Filter\HasScopeFilter; use ModStart\Repository\Repository; use ModStart\Support\Concern\HasBuilder; use ModStart\Support\Concern\HasFields; use ModStart\Support\Concern\HasFluentAttribute; use ModStart\Support\Manager\FieldManager; class Detail implements Renderable { use HasFields, HasBuilder, HasFluentAttribute, HasCascadeFields, HasScopeFilter, HasRepositoryFilter; private $id; private $repository; private $view = 'modstart::core.detail.index'; private $fluentAttributes = array('engine', 'title', 'itemId', 'item', 'formClass'); private $engine = 'basic'; private $title; private $itemId = null; private $item; private $formClass = ''; public function __construct($Cxh0W, \Closure $GOTEy = null) { goto tbbMt; Wew01: $this->setupFields(); goto Ou76u; hCKUi: $this->builder($GOTEy); goto mY8U0; en40L: $this->repository = Repository::instance($Cxh0W); goto Wew01; Q6ydt: $this->setupRepositoryFilter(); goto hCKUi; tbbMt: $this->id = IdUtil::generate('Grid'); goto en40L; Ou76u: $this->fieldDefaultRenderMode(FieldRenderMode::DETAIL); goto Q6ydt; mY8U0: } public static function make($Wa8N4, \Closure $GOTEy = null) { if (is_object($Wa8N4) || class_exists($Wa8N4) && is_subclass_of($Wa8N4, Model::class)) { return new Detail($Wa8N4, $GOTEy); } return new Detail(DynamicModel::make($Wa8N4), $GOTEy); } public function asTree($PkGEp = 'id', $HuEsB = 'pid', $HwF8D = 'sort', $OyJTz = 'title') { goto eKfpn; YDYZL: $this->repository->setTreePidColumn($HuEsB); goto UEsyW; UEsyW: $this->repository->setSortColumn($HwF8D); goto sAxD5; eKfpn: $this->repository->setKeyName($PkGEp); goto YDYZL; sAxD5: $this->repository->setTreeTitleColumn($OyJTz); goto lpgIs; lpgIs: $this->engine = DetailEngine::TREE; goto HcM9W; HcM9W: return $this; goto ZzF2Q; ZzF2Q: } public function asTreeMass($l0KTA = 0, $PkGEp = 'id', $HuEsB = 'pid', $HwF8D = 'sort', $OyJTz = 'title') { goto lpc5e; lpc5e: $this->repository->setKeyName($PkGEp); goto zrv7q; vgkiI: $this->repository->setSortColumn($HwF8D); goto btFZD; btFZD: $this->repository->setTreeTitleColumn($OyJTz); goto bClK7; y7lo5: return $this; goto xd3xK; zrv7q: $this->repository->setTreePidColumn($HuEsB); goto vgkiI; bClK7: $this->engine = DetailEngine::TREE_MASS; goto y7lo5; xd3xK: } public function repository() { return $this->repository; } private function build() { $this->runBuilder(); } public function show($CeOJi) { goto ePyF5; V3RGw: return $this; goto gQISa; pEXKq: $this->item($this->repository()->show($this)); goto V35MU; ptU57: $this->fillFields(); goto V3RGw; sP8X5: $this->build(); goto ptU57; ePyF5: $this->itemId($CeOJi); goto pEXKq; V35MU: BizException::throwsIfEmpty(L('Record Not Exists'), $this->item); goto sP8X5; gQISa: } public function render() { goto Ya2T6; hPo_w: return view($this->view, $nx179)->render(); goto WWFzi; yYPSQ: $nx179 = array_merge($this->fluentAttributeVariables(), $nx179); goto hPo_w; agMZc: $nx179['fields'] = $this->showableFields(); goto yYPSQ; Ya2T6: $nx179 = array(); goto agMZc; WWFzi: } public function __call($lrQvV, $wnXyT) { goto wP9CJ; tsAzw: if ($this->isFluentAttribute($lrQvV)) { return $this->fluentAttribute($lrQvV, $wnXyT); } goto YnplT; YnplT: return FieldManager::call($this, $lrQvV, $wnXyT); goto pzeqJ; wP9CJ: switch ($lrQvV) { case 'enablePagination': case 'defaultOrder': case 'canAdd': case 'canEdit': case 'canDelete': case 'canSort': case 'canShow': case 'canExport': case 'canImport': case 'canCopy': case 'canBatchDelete': case 'treeMaxLevel': case 'hookSaving': case 'hookSaved': case 'hookChanged': case 'hookDeleting': case 'hookDeleted': case 'hookItemOperateRendering': case 'addBlankPage': case 'editBlankPage': case 'disableCUD': case 'addDialogSize': case 'editDialogSize': case 'dialogSizeSmall': case 'gridFilter': case 'canMultiSelectItem': case 'gridOperateAppend': case 'bodyAppend': case 'operateFixed': case 'defaultPageSize': case 'pageSizes': case 'canBatchSelect': case 'batchOperatePrepend': case 'gridToolbar': case 'pageJumpEnable': case 'textEdit': case 'gridTableTopView': case 'gridBeforeRequestScriptView': case 'gridRequestScript': case 'sortAddPosition': case 'titleAdd': case 'titleEdit': case 'useSimple': case 'gridRowCols': return $this; } goto tsAzw; pzeqJ: } public function __toString() { try { return $this->render(); } catch (\Exception $l8i0J) { return $l8i0J->getMessage(); } } }