<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Core\Util; use Illuminate\Support\Str; class EncodeUtil { public static function expiredDataForever($vt6fH, $cANPj) { return self::expiredData($vt6fH, $cANPj, 0); } public static function expiredData($vt6fH, $cANPj, $OT7TB = 3600) { goto RFmo6; OuvYm: $JmS9q = dechex($OT7TB); goto bWELf; THE7U: $kKcR8[] = $vihQ0; goto EztLJ; EztLJ: $kKcR8[] = $JmS9q; goto eslWO; y_oKA: $kKcR8[] = $sfZrv; goto QlGBO; bWELf: $UC0zA = substr(md5($cANPj . $sfZrv . $OAg9i . $vihQ0 . $JmS9q), 0, 6); goto yLCQ0; QlGBO: $kKcR8[] = $OAg9i; goto THE7U; soPe2: $OAg9i = strtolower(Str::random(6)); goto GdeZa; yLCQ0: $kKcR8 = array(); goto y_oKA; GdeZa: $vihQ0 = dechex(time()); goto OuvYm; YPBUS: return join('_', $kKcR8); goto vXRwA; eslWO: $kKcR8[] = $UC0zA; goto YPBUS; RFmo6: $sfZrv = bin2hex($vt6fH); goto soPe2; vXRwA: } public static function expiredDataDecode($vt6fH, $cANPj) { goto y9RBM; lEBVZ: return hex2bin($sfZrv); goto epmZt; wyE22: $UC0zA = $RfXiF[4]; goto NJnbY; rYcbT: if ($UC0zA != $PORiU) { return null; } goto KeDVV; y9RBM: $RfXiF = explode('_', $vt6fH); goto Fyl0t; Xl9lk: $OAg9i = $RfXiF[1]; goto TgtN5; aBgzM: $JmS9q = $RfXiF[3]; goto wyE22; Fyl0t: if (count($RfXiF) != 5) { return null; } goto v5uvR; TgtN5: $vihQ0 = $RfXiF[2]; goto aBgzM; v5uvR: $sfZrv = $RfXiF[0]; goto Xl9lk; NJnbY: $PORiU = substr(md5($cANPj . $sfZrv . $OAg9i . $vihQ0 . $JmS9q), 0, 6); goto rYcbT; f3Ul5: if ($OT7TB > 0) { $UomWP = hexdec($vihQ0); if (time() > $UomWP + $OT7TB) { return null; } } goto lEBVZ; KeDVV: $OT7TB = hexdec($JmS9q); goto f3Ul5; epmZt: } public static function md5WithSalt($mDyAE, $H0dQH) { return md5(md5($mDyAE) . md5($H0dQH)); } public static function detectCharset($N19iJ, $EcVW0 = array('gbk', 'utf-8')) { $iluly = strtolower(mb_detect_encoding($N19iJ, $EcVW0)); switch ($iluly) { case 'cp936': return 'gbk'; case 'utf-8': return 'utf-8'; default: return $iluly; } } public static function toUTF8($N19iJ, $PBfow = array('gbk', 'utf-8')) { $iluly = mb_detect_encoding($N19iJ, $PBfow); return iconv($iluly, 'UTF-8', $N19iJ); } }