<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Core\Util; use Illuminate\Database\Eloquent\Model; use Illuminate\Support\Collection; use ModStart\Core\Dao\ModelUtil; class TreeUtil { static $CHILD_KEY = '_child'; public static function setChildKey($cANPj) { self::$CHILD_KEY = $cANPj; } public static function itemLevelPrefix($mzw8d) { return str_repeat('├', $mzw8d); } public static function modelToTree($Wa8N4, $sif2k = array(), $BVP5X = 'id', $OAg8S = 'pid', $qehNI = 'sort', $kNTjB = array()) { goto oN7M5; yyco1: $EApxo = array(); goto FxuA5; oN7M5: $lU1V2 = ModelUtil::all($Wa8N4, $kNTjB); goto yyco1; FxuA5: foreach ($lU1V2 as &$Wa8N4) { goto iHNIn; iHNIn: $ywRGS = array(); goto rIjFP; rIjFP: $ywRGS[$BVP5X] = $Wa8N4[$BVP5X]; goto Udl_E; ovJQV: foreach ($sif2k as $dKmL2 => $yFWLi) { if (is_numeric($dKmL2)) { $ywRGS[$yFWLi] = $Wa8N4[$yFWLi]; } else { $ywRGS[$dKmL2] = $Wa8N4[$yFWLi]; } } goto rA3lw; Udl_E: $ywRGS[$OAg8S] = $Wa8N4[$OAg8S]; goto Hzhrc; Hzhrc: $ywRGS[$qehNI] = $Wa8N4[$qehNI]; goto ovJQV; rA3lw: $EApxo[] = $ywRGS; goto wBsae; wBsae: } goto u5PRs; u5PRs: return self::nodesToTree($EApxo, 0, $BVP5X, $OAg8S, $qehNI); goto TArVh; TArVh: } public static function modelToTreeByParentId($tloGv, $Wa8N4, $sif2k = array(), $BVP5X = 'id', $OAg8S = 'pid', $qehNI = 'sort') { goto vvNsh; XFp5u: do { $qVRdv = array(); foreach ($s3Gqv as &$AkyhD) { $qVRdv[] = $AkyhD[$BVP5X]; $lU1V2[] = $AkyhD; } if (empty($qVRdv)) { $s3Gqv = null; } else { $s3Gqv = ModelUtil::model($Wa8N4)->whereIn($OAg8S, $qVRdv)->get()->toArray(); } } while (!empty($s3Gqv)); goto m3EF8; AkZ9v: $AkyhD = ModelUtil::get($Wa8N4, array($BVP5X => $tloGv)); goto EFtYq; Trrc5: return self::nodesToTree($EApxo, $xAW1i, $BVP5X, $OAg8S, $qehNI); goto PluCy; vvNsh: $lU1V2 = array(); goto AkZ9v; xVxXq: $xAW1i = $AkyhD[$OAg8S]; goto UqsEO; m3EF8: $EApxo = array(); goto sx5ST; UqsEO: $lU1V2[] = $AkyhD; goto bJp1u; EFtYq: if (empty($AkyhD)) { return array(); } goto xVxXq; sx5ST: foreach ($lU1V2 as &$Wa8N4) { goto qQmOz; nRREe: $EApxo[] = $ywRGS; goto Nhrmh; EykrV: foreach ($sif2k as $dKmL2 => $yFWLi) { $ywRGS[$dKmL2] = $Wa8N4[$yFWLi]; } goto nRREe; qQmOz: $ywRGS = array(); goto Deitg; I134X: $ywRGS[$qehNI] = $Wa8N4[$qehNI]; goto EykrV; Deitg: $ywRGS[$BVP5X] = $Wa8N4[$BVP5X]; goto E35ZD; E35ZD: $ywRGS[$OAg8S] = $Wa8N4[$OAg8S]; goto I134X; Nhrmh: } goto Trrc5; bJp1u: $s3Gqv = ModelUtil::all($Wa8N4, array($OAg8S => $tloGv)); goto XFp5u; PluCy: } public static function modelNodeDeleteAble($Wa8N4, $CeOJi, $Liw_V = 'pid', $kNTjB = array()) { return !ModelUtil::exists($Wa8N4, array_merge($kNTjB, array($Liw_V => $CeOJi))); } public static function modelNodeChangeAble($Wa8N4, $CeOJi, $TLxrX, $zsWi3, $GYMeL = 'id', $Liw_V = 'pid', $kNTjB = array()) { goto SRHBO; KWlYj: $lmMn7 = $zsWi3; goto hPys2; SRHBO: if ($TLxrX == $zsWi3) { return true; } goto KWlYj; d1A33: return true; goto bl_Vb; hPys2: while ($AkyhD = ModelUtil::get($Wa8N4, array_merge($kNTjB, array($GYMeL => $lmMn7)))) { if ($AkyhD[$GYMeL] == $CeOJi) { return false; } $lmMn7 = $AkyhD[$Liw_V]; } goto d1A33; bl_Vb: } public static function nodesToTree(&$EApxo, $tloGv = 0, $GYMeL = 'id', $Liw_V = 'pid', $qoMM9 = 'sort', $CAFaZ = 'asc') { goto Qg9Ob; oBQwm: foreach ($c0PBf as $DUr2V) { if (isset($c0PBf[$DUr2V[$Liw_V]])) { $c0PBf[$DUr2V[$Liw_V]][self::$CHILD_KEY][] =& $c0PBf[$DUr2V[$GYMeL]]; } else { $owLu9[] =& $c0PBf[$DUr2V[$GYMeL]]; } } goto JnLYu; JnLYu: return array_values(array_filter($owLu9, function ($VL0g3) use($Liw_V, $tloGv) { return self::_pidEqual($VL0g3[$Liw_V], $tloGv); })); goto jFBOg; wJ99G: $c0PBf = array(); goto rB0zK; Qg9Ob: if ($qoMM9 && $CAFaZ) { $EApxo = ArrayUtil::sortByKey($EApxo, $qoMM9, $CAFaZ); } goto wJ99G; onc2M: $owLu9 = array(); goto oBQwm; rB0zK: foreach ($EApxo as $yFWLi) { $c0PBf[$yFWLi[$GYMeL]] = $yFWLi; } goto onc2M; jFBOg: } public static function treeMap(&$owLu9, $k_TMY) { foreach ($owLu9 as &$ywRGS) { call_user_func_array($k_TMY, array(&$ywRGS)); if (isset($ywRGS[self::$CHILD_KEY])) { self::treeMap($ywRGS[self::$CHILD_KEY], $k_TMY); } } } public static function treeToListWithIndent(&$owLu9, $BVP5X = 'id', $dO2C7 = 'title', $mzw8d = 0, $yer69 = array()) { goto gHp0T; aElF5: foreach ($owLu9 as &$d6C3Y) { goto YH4eK; YH4eK: $DUr2V = array('id' => $d6C3Y[$BVP5X], 'title' => self::itemLevelPrefix($mzw8d) . htmlspecialchars($d6C3Y[$dO2C7])); goto YdfXg; zkSVR: $iVFbz[] = $DUr2V; goto zDYDl; zDYDl: if (!empty($d6C3Y[self::$CHILD_KEY])) { $iVFbz = array_merge($iVFbz, self::treeToListWithIndent($d6C3Y[self::$CHILD_KEY], $BVP5X, $dO2C7, $mzw8d + 1, $yer69)); } goto yCXb_; YdfXg: if (!empty($yer69)) { foreach ($yer69 as $dKmL2) { $DUr2V[$dKmL2] = $d6C3Y[$dKmL2]; } } goto zkSVR; yCXb_: } goto G1B77; gHp0T: $iVFbz = array(); goto aElF5; G1B77: return $iVFbz; goto bd9FO; bd9FO: } public static function treeToListWithLevel(&$owLu9, $BVP5X = 'id', $dO2C7 = 'title', $OAg8S = 'pid', $mzw8d = 0, $sif2k = array()) { goto Y60ys; afwyi: foreach ($owLu9 as &$d6C3Y) { goto sSddm; FK4Pb: $iVFbz[] = $mH3Yd; goto YazQA; YazQA: if (!empty($d6C3Y[self::$CHILD_KEY])) { $iVFbz = array_merge($iVFbz, self::treeToListWithLevel($d6C3Y[self::$CHILD_KEY], $BVP5X, $dO2C7, $OAg8S, $mzw8d + 1, $sif2k)); } goto BosfV; h3Am9: if (!empty($sif2k)) { foreach ($sif2k as $dKmL2 => $yFWLi) { $mH3Yd[$dKmL2] = $d6C3Y[$yFWLi]; } } goto FK4Pb; sSddm: $mH3Yd = array('id' => $d6C3Y[$BVP5X], 'title' => $d6C3Y[$dO2C7], 'level' => $mzw8d, 'pid' => $d6C3Y[$OAg8S]); goto h3Am9; BosfV: } goto lNZxi; Y60ys: $iVFbz = array(); goto afwyi; lNZxi: return $iVFbz; goto LelJT; LelJT: } public static function treeToTitleIdMap(&$owLu9, $BVP5X = 'id', $dO2C7 = 'title', $OAg8S = 'pid', $SdLqb = '-', $OFAbu = array()) { goto CV92j; CV92j: $bx4aO = array(); goto uonJP; jNDy0: return $bx4aO; goto awGom; uonJP: foreach ($owLu9 as &$d6C3Y) { $bx4aO[join($SdLqb, array_merge($OFAbu, array($d6C3Y[$dO2C7])))] = $d6C3Y[$BVP5X]; if (!empty($d6C3Y[self::$CHILD_KEY])) { $bx4aO = array_merge($bx4aO, self::treeToTitleIdMap($d6C3Y[self::$CHILD_KEY], $BVP5X, $dO2C7, $OAg8S, $SdLqb, array_merge($OFAbu, array($d6C3Y[$dO2C7])))); } } goto jNDy0; awGom: } public static function nodesChildrenIds(&$EApxo, $CeOJi, $GYMeL = 'id', $Liw_V = 'pid') { goto ZS78N; q_MgM: foreach ($EApxo as &$JBDIU) { if ($JBDIU[$Liw_V] == $CeOJi) { goto Ys4ub; Ys4ub: $iUHLt[] = $JBDIU[$GYMeL]; goto eplyZ; fB2gt: if (!empty($ol2fp)) { $iUHLt = array_merge($iUHLt, $ol2fp); } goto tnOB3; eplyZ: $ol2fp = self::nodesChildrenIds($EApxo, $JBDIU[$GYMeL], $GYMeL, $Liw_V); goto fB2gt; tnOB3: } } goto XkNsh; ZS78N: $iUHLt = array(); goto q_MgM; XkNsh: return $iUHLt; goto MWFCA; MWFCA: } public static function treeChildrenIds($owLu9, $GYMeL = 'id', $Liw_V = 'pid') { goto lCMDd; TFDrF: return $iUHLt; goto l9g6S; XuStM: foreach ($owLu9 as $DUr2V) { $iUHLt[] = $DUr2V[$GYMeL]; if (!empty($DUr2V[self::$CHILD_KEY])) { $iUHLt = array_merge($iUHLt, self::treeChildrenIds($DUr2V[self::$CHILD_KEY], $GYMeL, $Liw_V)); } } goto TFDrF; lCMDd: $iUHLt = array(); goto XuStM; l9g6S: } public static function treeNodeChildrenIds(&$owLu9, $CeOJi, $GYMeL = 'id', $Liw_V = 'pid') { foreach ($owLu9 as $DUr2V) { if ($DUr2V[$GYMeL] == $CeOJi) { goto Q3aIo; Q3aIo: $iUHLt[] = $CeOJi; goto ReFJW; ndPAm: return $iUHLt; goto nzBcz; ReFJW: if (!empty($DUr2V[self::$CHILD_KEY])) { $iUHLt = array_merge($iUHLt, self::treeChildrenIds($DUr2V[self::$CHILD_KEY], $GYMeL, $Liw_V)); } goto ndPAm; nzBcz: } if (!empty($DUr2V[self::$CHILD_KEY])) { $iUHLt = self::treeNodeChildrenIds($DUr2V[self::$CHILD_KEY], $CeOJi, $GYMeL, $Liw_V); if (!empty($iUHLt)) { return $iUHLt; } } } return array(); } public static function treeChain(&$owLu9, $CeOJi, $tD7fo = 'id', $fP3LE = 'pid', $SgaOP = array(), $mzw8d = 0) { foreach ($owLu9 as $DUr2V) { goto nzGxH; pXLnn: if (!empty($DUr2V[self::$CHILD_KEY])) { goto NljmT; qQSvr: array_pop($SgaOP); goto CKi3a; AkDvp: if (!empty($AxBu3)) { return $AxBu3; } goto qQSvr; xyvIr: $AxBu3 = self::treeChain($DUr2V[self::$CHILD_KEY], $CeOJi, $tD7fo, $fP3LE, $SgaOP, $mzw8d + 1); goto AkDvp; NljmT: $SgaOP[] = ArrayUtil::removeKeys($DUr2V, array(self::$CHILD_KEY)); goto xyvIr; CKi3a: } goto L8MSv; nzGxH: if (!$DUr2V[$fP3LE]) { $SgaOP = array(); } goto ptbwj; ptbwj: if ($DUr2V[$tD7fo] == $CeOJi) { $SgaOP[] = $DUr2V; return $SgaOP; } goto pXLnn; L8MSv: } return array(); } public static function nodesChain(&$EApxo, $CeOJi, $tD7fo = 'id', $fP3LE = 'pid') { goto BVgFa; VM2Ms: $d5BqU = 0; goto PA6gL; PA6gL: $oZkmx = true; goto q91sr; BVgFa: $SgaOP = array(); goto VM2Ms; q91sr: while ($oZkmx && $d5BqU++ < 999) { $oZkmx = false; foreach ($EApxo as $JBDIU) { if ($JBDIU[$tD7fo] == $CeOJi) { goto HMJ35; HMJ35: $oZkmx = true; goto HJBLI; JubW8: break; goto jt52E; LofG7: $SgaOP[] = $JBDIU; goto JubW8; HJBLI: $CeOJi = $JBDIU[$fP3LE]; goto LofG7; jt52E: } } } goto ZlFJd; ZlFJd: return array_reverse($SgaOP); goto m1NDB; m1NDB: } public static function nodesChainWithItems(&$EApxo, $CeOJi, $GYMeL = 'id', $Liw_V = 'pid', $trsu0 = 'title', $ntAWd = '_items') { goto l1oEx; l1oEx: $XDb7w = self::nodesChain($EApxo, $CeOJi); goto AK2Nk; Exk6c: foreach ($XDb7w as $dKmL2 => $yFWLi) { $XDb7w[$dKmL2][$ntAWd] = array_values(array_filter($EApxo, function ($VL0g3) use($yFWLi, $Liw_V) { return $VL0g3[$Liw_V] == $yFWLi[$Liw_V]; })); } goto cHJph; AK2Nk: if (empty($XDb7w)) { $XDb7w[] = array($GYMeL => -1, $Liw_V => 0, $trsu0 => 'ROOT'); } goto Exk6c; cHJph: $GlO0b = array_values(array_filter($EApxo, function ($VL0g3) use($CeOJi, $Liw_V) { return $VL0g3[$Liw_V] == $CeOJi; })); goto Vf2Ga; Vf2Ga: if (!empty($GlO0b) && $CeOJi > 0) { $XDb7w[] = array($GYMeL => -1, $Liw_V => $CeOJi, $trsu0 => 'NEXT', $ntAWd => $GlO0b); } goto xtZ0W; xtZ0W: return $XDb7w; goto qkG8i; qkG8i: } public static function itemsMergeLevel($c0PBf, $GYMeL = 'id', $Liw_V = 'pid', $qoMM9 = 'sort', $tloGv = 0) { return self::_itemsMergeLevel($c0PBf, $GYMeL, $Liw_V, $qoMM9, $tloGv); } private static function _pidEqual($zDKEY, $dbQbM) { return $zDKEY === $dbQbM || $zDKEY === $dbQbM . ''; } private static function _itemsMergeLevel($c0PBf, $GYMeL = 'id', $Liw_V = 'pid', $qoMM9 = 'sort', $tloGv = 0, $mzw8d = 1, $oXxUL = null) { goto LHTpv; VHxJT: return $oXxUL; goto JiU9p; Htd66: $c0PBf->each(function ($DUr2V) use($GYMeL, $Liw_V, $qoMM9, $tloGv, $mzw8d, $c0PBf, $oXxUL) { if ($DUr2V instanceof Model) { if (!isset($DUr2V->_level)) { if (self::_pidEqual($DUr2V->{$Liw_V}, $tloGv)) { goto yqc0v; HFkgM: $oXxUL->push($DUr2V); goto nI7bV; nI7bV: if ($mzw8d < 99) { self::_itemsMergeLevel($c0PBf, $GYMeL, $Liw_V, $qoMM9, $DUr2V->{$GYMeL}, $mzw8d + 1, $oXxUL); } goto rlquZ; yqc0v: $DUr2V->_level = $mzw8d; goto HFkgM; rlquZ: } } } else { if (!property_exists($DUr2V, '_level')) { if (self::_pidEqual($DUr2V->{$Liw_V}, $tloGv)) { goto WC01U; WC01U: $DUr2V->_level = $mzw8d; goto yg07f; yg07f: $oXxUL->push($DUr2V); goto OkARo; OkARo: if ($mzw8d < 99) { self::_itemsMergeLevel($c0PBf, $GYMeL, $Liw_V, $qoMM9, $DUr2V->{$GYMeL}, $mzw8d + 1, $oXxUL); } goto N428D; N428D: } } } }); goto VHxJT; ALvON: if (null === $oXxUL) { $oXxUL = collect(); } goto Htd66; peOoh: if ($mzw8d == 1) { $c0PBf = $c0PBf->sortBy($qoMM9)->values(); } goto ALvON; LHTpv: if (!$c0PBf instanceof Collection) { $c0PBf = collect($c0PBf); } goto peOoh; JiU9p: } public static function modelItemAddAble(Model $Wa8N4, $tloGv, $GYMeL = 'id') { return $Wa8N4->newQuery()->where(array($GYMeL => $tloGv))->exists(); } public static function modelItemDeleteAble(Model $Wa8N4, $CeOJi, $Liw_V = 'pid') { return !$Wa8N4->newQuery()->where(array($Liw_V => $CeOJi))->exists(); } public static function modelItemChangeAble(Model $Wa8N4, $CeOJi, $TLxrX, $zsWi3, $GYMeL = 'id', $Liw_V = 'pid') { goto uZp23; iMZxG: $zlw0F = array($GYMeL, $Liw_V); goto P7D5J; P7D5J: $lmMn7 = $zsWi3; goto qYHxS; uZp23: if ($TLxrX == $zsWi3) { return true; } goto iMZxG; bhIds: return true; goto L8y8m; qYHxS: while ($AkyhD = $Wa8N4->newQuery()->where(array($GYMeL => $lmMn7))->first($zlw0F)) { if ($AkyhD->{$GYMeL} == $CeOJi) { return false; } $lmMn7 = $AkyhD->{$Liw_V}; } goto bhIds; L8y8m: } }