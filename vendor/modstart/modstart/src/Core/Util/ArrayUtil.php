<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Core\Util; use Illuminate\Support\Str; class ArrayUtil { public static function sequenceEqual($RsZNH, $tDMIR) { goto Qiueb; Qiueb: sort($RsZNH); goto e3Bk3; BgtWC: return SerializeUtil::jsonEncode($RsZNH) == SerializeUtil::jsonEncode($tDMIR); goto WVDFp; e3Bk3: sort($tDMIR); goto BgtWC; WVDFp: } public static function equal($RsZNH, $tDMIR, $NP7Bb = null, $OoBYk = false) { goto uKegZ; uKegZ: if (null === $NP7Bb) { $NP7Bb = array_merge(array_keys($RsZNH), array_keys($tDMIR)); } goto Ym0C5; wljNt: return true; goto cFegp; Ym0C5: foreach ($NP7Bb as $dKmL2) { goto aR2wT; gCoWf: if ($OoBYk) { if ($RsZNH[$dKmL2] !== $tDMIR[$dKmL2]) { return false; } } else { if ($RsZNH[$dKmL2] != $tDMIR[$dKmL2]) { return false; } } goto l_xjh; aR2wT: if (!array_key_exists($dKmL2, $RsZNH)) { return false; } goto NFc1q; NFc1q: if (!array_key_exists($dKmL2, $tDMIR)) { return false; } goto gCoWf; l_xjh: } goto wljNt; cFegp: } public static function flatItemsByKey(&$nQYo_, $cANPj) { goto Aj8rh; Aj8rh: $jq2n1 = array(); goto Zj_OI; UPVSX: return $jq2n1; goto F_Mqr; Zj_OI: foreach ($nQYo_ as $DUr2V) { $jq2n1[] = $DUr2V[$cANPj]; } goto UPVSX; F_Mqr: } public static function keepKeys($jdXuk, $NP7Bb) { goto QvWvw; QvWvw: if (empty($jdXuk)) { return $jdXuk; } goto UDfGP; qolEX: if (empty($NP7Bb) || empty($jdXuk)) { return $iRu1U; } goto fxwCj; UDfGP: if (is_string($NP7Bb)) { $NP7Bb = array($NP7Bb); } goto a87ME; fxwCj: foreach ($jdXuk as $dKmL2 => $yFWLi) { if (in_array($dKmL2, $NP7Bb)) { $iRu1U[$dKmL2] = $yFWLi; } } goto i21FH; a87ME: $iRu1U = array(); goto qolEX; i21FH: return $iRu1U; goto SQqKg; SQqKg: } public static function keepItemsKeys(&$nQYo_, $NP7Bb) { goto bFaSw; bFaSw: $iRu1U = array(); goto ZBlet; Znxfv: foreach ($nQYo_ as $yFWLi) { goto m8stG; m8stG: $DUr2V = array(); goto YfXit; P_vOl: $iRu1U[] = $DUr2V; goto U2rlJ; YfXit: foreach ($yFWLi as $lpLIs => $G3PnY) { if (in_array($lpLIs, $NP7Bb)) { $DUr2V[$lpLIs] = $G3PnY; } } goto P_vOl; U2rlJ: } goto Dmmx1; Dmmx1: return $iRu1U; goto MwzU8; ZBlet: if (empty($NP7Bb)) { return $iRu1U; } goto Znxfv; MwzU8: } public static function removeKeys($jdXuk, $NP7Bb) { goto iuXPj; eMkkB: $iRu1U = array(); goto X3Uwu; drCiM: return $iRu1U; goto e6hV8; X3Uwu: foreach ($jdXuk as $dKmL2 => $yFWLi) { if (!in_array($dKmL2, $NP7Bb)) { $iRu1U[$dKmL2] = $yFWLi; } } goto drCiM; iuXPj: if (empty($NP7Bb) || empty($jdXuk)) { return $jdXuk; } goto eMkkB; e6hV8: } public static function remove($gw25s, $jdXuk) { return array_filter($gw25s, function ($VL0g3) use($jdXuk) { return $VL0g3 != $jdXuk; }); } public static function add($gw25s, $jdXuk, $oTzVO = true) { goto NSpk_; b6o2I: return $gw25s; goto n_yJi; NSpk_: $gw25s = array_merge($gw25s, array($jdXuk)); goto jBs3l; jBs3l: if ($oTzVO) { $gw25s = array_unique($gw25s); } goto b6o2I; n_yJi: } public static function removeAll($nQYo_, $p07r1) { return array_values(array_filter($nQYo_, function ($VL0g3) use($p07r1) { return !in_array($VL0g3, $p07r1); })); } public static function hasAny($nQYo_, $NXf4c) { foreach ($NXf4c as $DUr2V) { if (in_array($DUr2V, $nQYo_)) { return true; } } return false; } public static function renameItemsKey(&$nQYo_, $FfTCm) { foreach ($nQYo_ as $dKmL2 => $yFWLi) { foreach ($FfTCm as $HLpQn => $Ok3Cz) { $nQYo_[$dKmL2][$Ok3Cz] = $nQYo_[$dKmL2][$HLpQn]; unset($nQYo_[$dKmL2][$HLpQn]); } } } public static function random($nQYo_) { if (empty($nQYo_)) { return null; } return $nQYo_[array_rand($nQYo_)]; } public static function trimItems($nQYo_) { goto qOTkE; jO5tO: foreach ($nQYo_ as $dKmL2 => $yFWLi) { if (is_array($yFWLi)) { $iRu1U[$dKmL2] = self::trimItems($yFWLi); } else { $iRu1U[$dKmL2] = trim($yFWLi); } } goto cj_av; cj_av: return $iRu1U; goto tword; qOTkE: $iRu1U = array(); goto jO5tO; tword: } public static function isAllEmpty($nQYo_) { goto wRVAD; deoZY: return true; goto uciiQ; wRVAD: if (empty($nQYo_) || !is_array($nQYo_)) { return true; } goto P7qHR; P7qHR: foreach ($nQYo_ as $yFWLi) { if (is_string($yFWLi)) { $yFWLi = trim($yFWLi); } if (!empty($yFWLi)) { return false; } } goto deoZY; uciiQ: } public static function sortByKey($nQYo_, $cANPj = 'sort', $YbS73 = 'asc') { usort($nQYo_, function ($SBMxa, $AtZdt) use($cANPj, $YbS73) { if ($SBMxa[$cANPj] == $AtZdt[$cANPj]) { return 0; } $nMi2c = $SBMxa[$cANPj] > $AtZdt[$cANPj] ? 1 : -1; return $YbS73 == 'asc' ? $nMi2c : -$nMi2c; }); return $nQYo_; } public static function sortNumber($nQYo_) { sort($nQYo_, SORT_NUMERIC); return $nQYo_; } public static function keep(&$nQYo_, $j7D2N = 10) { goto dRVi4; VabIL: foreach ($nQYo_ as $dKmL2 => $yFWLi) { goto xcB6M; xcB6M: $AxBu3[$dKmL2] = $yFWLi; goto rFDzh; rFDzh: $tqe7A++; goto DBeoi; DBeoi: if ($tqe7A >= $j7D2N) { return $AxBu3; } goto znnSf; znnSf: } goto JYIOm; dRVi4: $AxBu3 = array(); goto qVwPn; JYIOm: return $AxBu3; goto khRg_; qVwPn: $tqe7A = 0; goto VabIL; khRg_: } public static function diff(array $DOGQC, array $nsLfV) { goto tLTQt; tLTQt: $De765 = array(); goto Yifmt; ti298: return array($pxMM_, $De765); goto BeIbk; lzeOJ: foreach ($nsLfV as $VL0g3) { if (!in_array($VL0g3, $DOGQC)) { $pxMM_[] = $VL0g3; } } goto bb3Dc; Yifmt: $pxMM_ = array(); goto lzeOJ; bb3Dc: foreach ($DOGQC as $VL0g3) { if (!in_array($VL0g3, $nsLfV)) { $De765[] = $VL0g3; } } goto ti298; BeIbk: } public static function isChanged(array $HLpQn, array $Ok3Cz, array $NP7Bb) { foreach ($NP7Bb as $cANPj) { goto GjrkX; s7cmo: if ($HLpQn[$cANPj] != $Ok3Cz[$cANPj]) { return true; } goto DFRXE; Am0pF: if (!isset($HLpQn[$cANPj])) { return true; } goto ky7B_; GjrkX: if (!isset($HLpQn[$cANPj]) && !isset($Ok3Cz[$cANPj])) { continue; } goto Am0pF; ky7B_: if (!isset($Ok3Cz[$cANPj])) { return true; } goto s7cmo; DFRXE: } return false; } public static function diffWithKeys(array $HLpQn, array $Ok3Cz) { goto G_ljV; zZQQr: $JXyBV = array(); goto nKTYz; G_ljV: $De765 = array(); goto qa9Mz; MV2ZJ: $y7Ytg = array_keys($Ok3Cz); goto HjcKv; nKTYz: $ONX6I = array_keys($HLpQn); goto MV2ZJ; HjcKv: foreach ($Ok3Cz as $dKmL2 => $yFWLi) { if (in_array($dKmL2, $ONX6I)) { if ($yFWLi != $HLpQn[$dKmL2]) { $JXyBV[$dKmL2] = $yFWLi; } } else { $pxMM_[$dKmL2] = $yFWLi; } } goto b5iaO; b5iaO: foreach ($HLpQn as $dKmL2 => $yFWLi) { if (!in_array($dKmL2, $y7Ytg)) { $De765[$dKmL2] = $yFWLi; } } goto FXNQf; FXNQf: return array($pxMM_, $JXyBV, $De765); goto rUVWf; qa9Mz: $pxMM_ = array(); goto zZQQr; rUVWf: } private static function serializeForLogProcess($kKcR8, $w6J1a) { if (is_string($kKcR8)) { return Str::limit($kKcR8, 100); } else { if (is_array($kKcR8)) { foreach ($kKcR8 as $dKmL2 => $yFWLi) { if (in_array($dKmL2, $w6J1a, true)) { $kKcR8[$dKmL2] = '******'; continue; } $kKcR8[$dKmL2] = self::serializeForLogProcess($yFWLi, $w6J1a); } } } return $kKcR8; } public static function serializeForLog($eBWrF, $w6J1a = array('password', 'passwordRepeat')) { if (!empty($eBWrF)) { if (is_array($eBWrF)) { foreach ($eBWrF as $qsK6T => $kKcR8) { if (in_array($qsK6T, $w6J1a, true)) { $eBWrF[$qsK6T] = '******'; continue; } $eBWrF[$qsK6T] = self::serializeForLogProcess($kKcR8, $w6J1a); } } } return SerializeUtil::jsonEncode($eBWrF); } public static function update(&$qSgMY, $L9MUd) { foreach ($L9MUd as $dKmL2 => $yFWLi) { $qSgMY[$dKmL2] = $yFWLi; } } }