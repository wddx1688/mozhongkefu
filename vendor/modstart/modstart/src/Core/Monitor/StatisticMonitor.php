<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Core\Monitor; use Illuminate\Http\Request; use Illuminate\Http\Response; use Illuminate\Support\Facades\Event; use Illuminate\Support\Facades\Log; use Illuminate\Support\Facades\Route; use ModStart\Core\Util\SerializeUtil; class StatisticMonitor { protected static $timeMap = array(); protected static $client = null; private static $inited = false; private static $reportAddress = null; public static function isEnable() { goto kC9kc; kC9kc: if (!defined('LARAVEL_START')) { return false; } goto uDtPo; uDtPo: if (!self::$inited) { self::$reportAddress = config('modstart.statisticServer', null); self::$inited = true; } goto h5MJr; h5MJr: return !empty(self::$reportAddress); goto FkEkT; FkEkT: } public static function init() { goto CLzk6; CLzk6: if (!self::isEnable()) { return; } goto b_TX1; b_TX1: $a_pKA = 'kernel.handled'; goto Nt9Qp; l_rKM: Event::listen($a_pKA, function ($WZWEZ = null, $xtWCf = null) use($a_pKA) { $mHrWb = $WZWEZ; if ($a_pKA == 'kernel.handled') { } else { $mHrWb = $WZWEZ->request; $xtWCf = $WZWEZ->response; } $FU6n6 = round((microtime(true) - LARAVEL_START) * 1000, 2); $ikc2A = $mHrWb->url(); $lrQvV = $mHrWb->method(); $bpf5d = Route::currentRouteAction(); $diycn = \ModStart\Core\Input\Request::domain(); self::tick($diycn, "{$lrQvV}." . $bpf5d, $FU6n6); }); goto DTpcb; Nt9Qp: if (class_exists('Illuminate\\Foundation\\Http\\Events\\RequestHandled')) { $a_pKA = 'Illuminate\\Foundation\\Http\\Events\\RequestHandled'; } goto l_rKM; DTpcb: } public static function tickStart($C1S_N, $lIcLr) { if (!self::isEnable()) { return; } return self::$timeMap[$C1S_N][$lIcLr] = microtime(true); } public static function tickEnd($C1S_N, $lIcLr, $YCOqf = true, $SIPLh = 0, $BDbmq = null) { goto F0sku; nld5i: if (isset(self::$timeMap[$C1S_N][$lIcLr]) && self::$timeMap[$C1S_N][$lIcLr] > 0) { $sRt5N = self::$timeMap[$C1S_N][$lIcLr]; self::$timeMap[$C1S_N][$lIcLr] = 0; } else { $sRt5N = microtime(true); } goto m5uWX; m5uWX: self::send($C1S_N, $lIcLr, round((microtime(true) - $sRt5N) * 1000, 2), $YCOqf, $SIPLh, $BDbmq); goto Q7bOW; F0sku: if (!self::isEnable()) { return; } goto nld5i; Q7bOW: } public static function tick($C1S_N, $lIcLr, $CCTPN, $YCOqf = true, $SIPLh = 0, $BDbmq = null) { if (!self::isEnable()) { return; } self::send($C1S_N, $lIcLr, round($CCTPN, 2), $YCOqf, $SIPLh, $BDbmq); } private static function send($C1S_N, $lIcLr, $dNPIh, $YCOqf, $SIPLh, $BDbmq) { try { $TCbra = self::encode($C1S_N, $lIcLr, $dNPIh, $YCOqf, $SIPLh, $BDbmq); if (extension_loaded('swoole')) { goto r1XBD; bI1iZ: self::$client = null; goto ZlAwo; r1XBD: if (!self::$client || !self::$client->isConnected()) { goto EtKh4; bLpCU: list($i4tKa, $wQ7nu) = explode(':', self::$reportAddress); goto BVjDa; EtKh4: self::$client = new \swoole_client(SWOOLE_UDP); goto bLpCU; BVjDa: self::$client->connect($i4tKa, $wQ7nu); goto h1iyo; h1iyo: } goto lHdU3; lHdU3: self::$client->send($TCbra); goto E1Wuf; E1Wuf: self::$client->close(); goto bI1iZ; ZlAwo: } else { goto X8Ym_; Dd2sJ: if (!$FWIEg) { return; } goto uRLcD; uRLcD: stream_set_timeout($FWIEg, $r2jZv); goto ou28x; ou28x: stream_socket_sendto($FWIEg, $TCbra); goto DAHw_; oEx78: $FWIEg = stream_socket_client('udp://' . self::$reportAddress, $MVYJs, $LSWzk, $r2jZv); goto Dd2sJ; X8Ym_: $r2jZv = null; goto oEx78; DAHw_: } } catch (\Exception $l8i0J) { Log::error('MS.StatisticMonitor.Error -> ' . $l8i0J->getMessage()); } } private static function encode($C1S_N, $lIcLr, $dNPIh, $YCOqf, $SIPLh = 0, $BDbmq = '') { goto Xans6; L3a9D: return $pzyOY; goto j2dL5; dyzE5: $vt6fH = SerializeUtil::jsonEncode($nx179); goto O31uf; O31uf: $pzyOY = pack('N', strlen($vt6fH)) . $vt6fH; goto L3a9D; Xans6: $nx179 = array('module' => $C1S_N, 'group' => $lIcLr, 'cost' => $dNPIh, 'success' => $YCOqf, 'time' => time(), 'code' => $SIPLh, 'msg' => $BDbmq); goto dyzE5; j2dL5: } }