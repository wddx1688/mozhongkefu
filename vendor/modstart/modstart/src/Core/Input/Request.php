<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Core\Input; use Illuminate\Support\Facades\Input; use Illuminate\Support\Facades\Route; use Illuminate\Support\Str; class Request { public static function path() { return ltrim(\Illuminate\Support\Facades\Request::path(), '/'); } public static function basePath() { goto sm7pC; L6xjG: $hCl98 = \Illuminate\Support\Facades\Request::path(); goto GvDc5; SGidN: if (null !== $hCl98) { return $hCl98; } goto L6xjG; sm7pC: static $hCl98 = null; goto SGidN; GvDc5: if (empty($hCl98)) { $hCl98 = '/'; } else { if (!Str::startsWith($hCl98, '/')) { $hCl98 = '/' . $hCl98; } } goto zLhKO; zLhKO: return $hCl98; goto LQRX0; LQRX0: } public static function basePathWithQueries() { goto mbmAN; WhEOV: return $ikc2A; goto uIWnu; mbmAN: $ikc2A = self::basePath(); goto iF_MM; iF_MM: if ($TB87R = \Illuminate\Support\Facades\Request::getQueryString()) { $ikc2A .= '?' . $TB87R; } goto WhEOV; uIWnu: } public static function currentPageUrl() { goto cdLw2; swaLo: return self::fixUrlSubdir($vqlrZ); goto e0SF4; cdLw2: if (\Illuminate\Support\Facades\Request::ajax()) { $vqlrZ = \Illuminate\Support\Facades\Request::server('HTTP_REFERER'); } else { $vqlrZ = \Illuminate\Support\Facades\Request::fullUrl(); } goto nPqrP; nPqrP: $vqlrZ = self::fixFullUrlForceSchema($vqlrZ); goto swaLo; e0SF4: } public static function redirectUrl() { goto x51Jl; x51Jl: $vqlrZ = Input::get('redirect'); goto d6xhR; uG7qB: return $vqlrZ; goto OcRI1; d6xhR: if (empty($vqlrZ)) { $vqlrZ = self::currentPageUrl(); } goto uG7qB; OcRI1: } private static function fixFullUrlForceSchema($ikc2A) { if ($MxHiE = config('modstart.forceSchema')) { if (!starts_with($ikc2A, $MxHiE)) { $ikc2A = preg_replace('/^(http|https)/', $MxHiE, $ikc2A); } } return $ikc2A; } public static function currentPageUrlWithOutQueries() { goto mqZOh; e91br: return self::fixUrlSubdir($ikc2A); goto tZLW9; O1TIL: $ikc2A = self::fixFullUrlForceSchema($ikc2A); goto e91br; mqZOh: $ikc2A = \Illuminate\Support\Facades\Request::url(); goto O1TIL; tZLW9: } private static function fixUrlSubdir($ikc2A) { goto UC1YR; wuGEc: if ($HQwyy) { return str_replace(self::domainUrl(), rtrim($HQwyy, '/'), $ikc2A); } goto OUJFU; OUJFU: return $ikc2A; goto bHG_x; UC1YR: $HQwyy = config('modstart.subdirUrl'); goto wuGEc; bHG_x: } public static function mergeQueries($OxCOL = array()) { goto iHjfE; ZWO_4: foreach ($nLpJG as $dKmL2 => $yFWLi) { goto dpbdq; JFuoS: if (is_array($yFWLi)) { if (!isset($yFWLi[0])) { continue; } if (preg_match('/^\\{\\w+\\}$/', $yFWLi[0])) { $yFWLi = $yFWLi[0]; } else { $yFWLi = urlencode($yFWLi[0]); } } else { $yFWLi = urlencode($yFWLi); } goto bKyJA; dpbdq: if (null === $yFWLi || '' === $yFWLi) { continue; } goto JFuoS; bKyJA: $gohhz[] = urlencode($dKmL2) . '=' . $yFWLi; goto ZWSTh; ZWSTh: } goto MtOcg; eX6eU: $gohhz = array(); goto ZWO_4; co2qN: foreach ($OxCOL as $dKmL2 => $yFWLi) { $nLpJG[$dKmL2] = $yFWLi; } goto eX6eU; MtOcg: return join('&', $gohhz); goto iUgIv; iHjfE: $nLpJG = !empty($_GET) && is_array($_GET) ? $_GET : array(); goto co2qN; iUgIv: } public static function domain() { return \Illuminate\Support\Facades\Request::server('HTTP_HOST'); } public static function isSecurity() { if ($MxHiE = config('modstart.forceSchema')) { return $MxHiE == 'https'; } return \Illuminate\Support\Facades\Request::secure(); } public static function schema() { goto GNN0d; RuDtq: if (null === $dYuDi) { goto nz1fq; nz1fq: $MxHiE = config('modstart.forceSchema', null); goto LplAf; qH1K2: if (\Illuminate\Support\Facades\Request::secure()) { $dYuDi = 'https'; } else { $dYuDi = 'http'; } goto oKwN0; LplAf: if ($MxHiE) { return $MxHiE; } goto qH1K2; oKwN0: } goto DRVD9; GNN0d: static $dYuDi = null; goto RuDtq; DRVD9: return $dYuDi; goto OWbxZ; OWbxZ: } public static function domainUrl($O1Scu = false) { goto k_eGR; irNC6: return $ikc2A; goto dQEVK; k_eGR: $ikc2A = self::schema() . '://' . self::domain(); goto DrXmB; DrXmB: if ($O1Scu) { return self::fixUrlSubdir($ikc2A); } goto irNC6; dQEVK: } public static function isGet() { return \Illuminate\Support\Facades\Request::isMethod('get'); } public static function isPost() { return \Illuminate\Support\Facades\Request::isMethod('post'); } public static function isAjax() { return \Illuminate\Support\Facades\Request::ajax() || self::headerGet('is-ajax'); } public static function treatAsAjax() { self::headerSet('is-ajax', '1'); } public static function isJsonp() { if (self::isGet() && ($k_TMY = Input::get('callback')) && preg_match('/^jQuery\\w+$/', $k_TMY)) { return true; } return false; } public static function instance() { return \Illuminate\Support\Facades\Request::instance(); } public static function getControllerAction() { goto BVAXZ; WKmSl: if (isset($brqCS[0])) { $PTT52 = $brqCS[0]; } else { $PTT52 = null; } goto GUeE3; sgtBO: if (!Str::startsWith($PTT52, '\\')) { $PTT52 = '\\' . $PTT52; } goto pa466; kT5EC: if (empty($PTT52)) { return array(null, null); } goto sgtBO; UvoGb: $brqCS = explode('@', $bpf5d); goto WKmSl; BVAXZ: $bpf5d = Route::currentRouteAction(); goto UvoGb; GUeE3: if (isset($brqCS[1])) { $CDUjL = $brqCS[1]; } else { $CDUjL = null; } goto kT5EC; pa466: return array($PTT52, $CDUjL); goto qhF2D; qhF2D: } public static function headerGet($cANPj, $bX2xJ = null) { return self::instance()->header($cANPj, $bX2xJ); } public static function headerSet($cANPj, $VuXfH) { self::instance()->headers->set($cANPj, $VuXfH); } public static function headerReferer() { return self::headerGet('referer'); } public static function headers() { return self::instance()->headers->all(); } public static function ip() { goto VEl7u; FvInV: foreach ($NP7Bb as $cANPj) { if ($yFWLi = self::server($cANPj)) { return $yFWLi; } } goto yz0Dk; VEl7u: $NP7Bb = array('HTTP_X_REAL_IP', 'HTTP_X_FORWARDED_FOR'); goto FvInV; yz0Dk: return self::instance()->ip(); goto fwKtf; fwKtf: } public static function server($HQ4FM) { return self::instance()->server($HQ4FM); } public static function servers() { return self::instance()->server->all(); } }