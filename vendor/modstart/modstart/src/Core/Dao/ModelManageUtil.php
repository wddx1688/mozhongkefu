<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Core\Dao; use Carbon\Carbon; use Illuminate\Support\Facades\Cache; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Schema; use Illuminate\Support\Str; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\Response; use ModStart\Core\Util\StrUtil; class ModelManageUtil { public static function tablePrefix($miYey = 'mysql') { return config('database.connections.' . $miYey . '.prefix'); } public static function table($R3agm, $miYey = 'mysql') { return self::tablePrefix($miYey) . $R3agm; } public static function fixDatetime0000($R3agm, $dBa7F) { goto uf61O; vUqbx: foreach ($dBa7F as $DUr2V) { ModelManageUtil::statement("UPDATE {$R3agm} SET `{$DUr2V}`='{$S30rF}' WHERE `{$DUr2V}`='1970-01-01 00:00:00'"); } goto S3VSK; l4QWl: $R3agm = ModelManageUtil::table($R3agm); goto vUqbx; NkeOS: $S30rF = Carbon::now(); goto l4QWl; uf61O: if (!is_array($dBa7F)) { $dBa7F = array($dBa7F); } goto NkeOS; S3VSK: } public static function tableComment($R3agm, $z2TsI, $miYey = 'mysql') { $R3agm = self::table($R3agm, $miYey); self::statement("ALTER TABLE `{$R3agm}` COMMENT = '{$z2TsI}'", $miYey); } public static function tablesComment($m_kmE, $miYey = 'mysql') { foreach ($m_kmE as $R3agm => $z2TsI) { self::tableComment($R3agm, $z2TsI, $miYey); } } public static function listTables($miYey = 'mysql') { goto YuzJJ; SXV4D: $fXsiN = array(); goto WtVeX; WtVeX: $GgHCU = self::tablePrefix($miYey); goto EMMBf; YuzJJ: $AxBu3 = self::query('SHOW TABLES', $miYey); goto SXV4D; EMMBf: foreach ($AxBu3 as $jq2n1) { goto XhuC2; alw3I: $fXsiN[] = $R3agm; goto W7fD8; wTHV8: $R3agm = $tcwC2[0]; goto XQe2Z; XQe2Z: if (!empty($GgHCU)) { if (!starts_with($R3agm, $GgHCU)) { continue; } $R3agm = substr($R3agm, strlen($GgHCU)); } goto alw3I; XhuC2: $tcwC2 = array_values($jq2n1); goto wTHV8; W7fD8: } goto tThOx; tThOx: return $fXsiN; goto oorQL; oorQL: } public static function hasTable($R3agm) { return Schema::hasTable($R3agm); } public static function dropTable($R3agm) { return Schema::dropIfExists($R3agm); } public static function renameTable($t6h0L, $MGyOu) { Schema::rename($t6h0L, $MGyOu); } public static function listTableColumns($R3agm) { if (!self::hasTable($R3agm)) { return array(); } return Schema::getColumnListing($R3agm); } public static function hasTableColumn($R3agm, $NS5_3) { $zlw0F = self::listTableColumns($R3agm); return in_array($NS5_3, $zlw0F); } public static function listIds($R3agm, $kNTjB = array(), $d5BqU = 100, $kpkZ6 = 'id') { $nQYo_ = ModelUtil::model($R3agm)->where($kNTjB)->limit($d5BqU)->get(array($kpkZ6)); return ArrayUtil::fetchSpecifiedKeyToArray($nQYo_, $kpkZ6); } public static function statement($N4nxN, $miYey = 'mysql') { DB::connection($miYey)->statement($N4nxN); } public static function truncate($R3agm, $miYey = 'mysql') { $R3agm = self::table($R3agm, $miYey); self::statement("TRUNCATE TABLE `{$R3agm}`", $miYey); } public static function query($N4nxN, $miYey = 'mysql') { goto PvehS; PvehS: $AxBu3 = DB::connection($miYey)->select(DB::raw($N4nxN)); goto OUOBA; ZiUsF: return $AxBu3; goto orqEI; OUOBA: if (is_array($AxBu3)) { foreach ($AxBu3 as $dKmL2 => $jq2n1) { if ($jq2n1 instanceof \stdClass) { $AxBu3[$dKmL2] = (array) $jq2n1; } } } else { if ($AxBu3 instanceof \stdClass) { $AxBu3 = (array) $AxBu3; } } goto ZiUsF; orqEI: } public static function moveToConn($R3agm, $miYey, $d5BqU = 100, $kpkZ6 = 'id') { goto Rwgjz; QZD0e: try { goto dcm1K; jnojt: ModelUtil::deleteIn($R3agm, $iUHLt, $kpkZ6); goto F_kKN; dcm1K: DModelUtil::insertAll($miYey, $R3agm, $nQYo_, false); goto jnojt; F_kKN: return count($nQYo_); goto GBpbL; GBpbL: } catch (\Exception $l8i0J) { goto QcYIk; F79Bf: return $uRKNI; goto FPmOT; jUkEe: foreach ($nQYo_ as $jdXuk) { try { goto qXlDg; Nl7cz: ModelUtil::delete($R3agm, array($kpkZ6 => $jdXuk[$kpkZ6])); goto B53rc; B53rc: $uRKNI++; goto UfmHj; qXlDg: DModelUtil::insertAll($miYey, $R3agm, array($jdXuk), false); goto Nl7cz; UfmHj: } catch (\Exception $l8i0J) { if (Str::contains($l8i0J->getMessage(), 'Duplicate entry')) { try { goto v8VNn; Vhh9t: DModelUtil::insertAll($miYey, $R3agm, array($jdXuk), false); goto sKyHc; v8VNn: DModelUtil::delete($miYey, $R3agm, array($kpkZ6 => $jdXuk[$kpkZ6])); goto Vhh9t; UJM9V: $uRKNI++; goto Q84im; sKyHc: ModelUtil::delete($R3agm, array($kpkZ6 => $jdXuk[$kpkZ6])); goto UJM9V; Q84im: } catch (\Exception $l8i0J) { } } } } goto F79Bf; QcYIk: if (!Str::contains($l8i0J->getMessage(), 'Duplicate entry')) { return 0; } goto HiCt4; HiCt4: $uRKNI = 0; goto jUkEe; FPmOT: } goto Fp79w; Rwgjz: $iUHLt = ModelManageUtil::listIds($R3agm, array(), $d5BqU, $kpkZ6); goto g0mKc; g0mKc: if (empty($iUHLt)) { return 0; } goto tK_yx; tK_yx: $nQYo_ = ModelUtil::allIn($R3agm, $kpkZ6, $iUHLt); goto Y4f9I; Y4f9I: if (empty($nQYo_)) { return 0; } goto QZD0e; Fp79w: } public static function migrate($R3agm, \Closure $WlN07, $baCt2 = 'mysql') { $WlN07($R3agm, Schema::connection($baCt2)); } public static function ddlFieldTypeIsCorrect($B0X6d) { goto fmnqx; fmnqx: if (preg_match('/^INT$/', $B0X6d)) { return true; } goto yrZKn; mTtjx: return false; goto ni3tg; SZeLE: if (preg_match('/^DATE$/', $B0X6d)) { return true; } goto p30z5; yrZKn: if (preg_match('/^DECIMAL\\(\\d+,\\d+\\)$/', $B0X6d)) { return true; } goto SZeLE; p30z5: if (preg_match('/^DATETIME$/', $B0X6d)) { return true; } goto umxtH; vJC2U: if (preg_match('/^VARCHAR\\(\\d+\\)$/', $B0X6d)) { return true; } goto Fpax2; Fpax2: if (preg_match('/^TEXT$/', $B0X6d)) { return true; } goto mTtjx; umxtH: if (preg_match('/^TIME/', $B0X6d)) { return true; } goto vJC2U; ni3tg: } public static function ddlFieldAdd($R3agm, $BC2Wv, $B0X6d) { goto E1OKo; j0hKH: $N4nxN = "ALTER TABLE `{$R3agm}` ADD `{$BC2Wv}` {$B0X6d} DEFAULT NULL"; goto wmFRf; e3wtV: if (!preg_match('/^[a-zA-Z][a-zA-Z0-9_]*$/', $BC2Wv)) { throw new \Exception('DDL fieldName error'); } goto tLuML; tLuML: if (!self::ddlFieldTypeIsCorrect($B0X6d)) { throw new \Exception('DDL fieldType error : ' . $B0X6d); } goto A3jVf; A3jVf: $R3agm = self::table($R3agm); goto j0hKH; E1OKo: if (!preg_match('/^[a-zA-Z][a-zA-Z0-9_]*$/', $R3agm)) { throw new \Exception('DDL table error'); } goto e3wtV; wmFRf: self::statement($N4nxN); goto Xbchz; Xbchz: } public static function ddlFieldChange($R3agm, $xtLi7, $BC2Wv, $B0X6d) { goto vgYLO; YF4eM: $R3agm = self::table($R3agm); goto PsWeU; vgYLO: if (!preg_match('/^[a-zA-Z][a-zA-Z0-9_]*$/', $R3agm)) { throw new \Exception('DDL table error'); } goto qRmtJ; qRmtJ: if (!preg_match('/^[a-zA-Z][a-zA-Z0-9_]*$/', $xtLi7)) { throw new \Exception('DDL fieldNameOld error'); } goto yxheh; kmqB6: self::statement($N4nxN); goto dH2W1; yxheh: if (!preg_match('/^[a-zA-Z][a-zA-Z0-9_]*$/', $BC2Wv)) { throw new \Exception('DDL fieldName error'); } goto JBvii; JBvii: if (!self::ddlFieldTypeIsCorrect($B0X6d)) { throw new \Exception('DDL fieldType error : ' . $B0X6d); } goto YF4eM; PsWeU: $N4nxN = "ALTER TABLE `{$R3agm}` CHANGE `{$xtLi7}` `{$BC2Wv}` {$B0X6d} DEFAULT NULL"; goto kmqB6; dH2W1: } public static function ddlFieldModify($R3agm, $BC2Wv, $B0X6d) { goto Z45pI; oHU5o: $N4nxN = "ALTER TABLE `{$R3agm}` MODIFY `{$BC2Wv}` {$B0X6d} DEFAULT NULL"; goto UAWlh; Z45pI: if (!preg_match('/^[a-zA-Z][a-zA-Z0-9_]*$/', $R3agm)) { throw new \Exception('DDL table error'); } goto mKRM6; Uf1G_: $R3agm = self::table($R3agm); goto oHU5o; mKRM6: if (!preg_match('/^[a-zA-Z][a-zA-Z0-9_]*$/', $BC2Wv)) { throw new \Exception('DDL fieldName error'); } goto ZuNEC; UAWlh: self::statement($N4nxN); goto SRvED; ZuNEC: if (!self::ddlFieldTypeIsCorrect($B0X6d)) { throw new \Exception('DDL fieldType error : ' . $B0X6d); } goto Uf1G_; SRvED: } public static function ddlFieldDrop($R3agm, $BC2Wv) { goto lwa98; LxtVl: self::statement($N4nxN); goto ln4mX; ueInO: if (!preg_match('/^[a-zA-Z][a-zA-Z0-9_]*$/', $BC2Wv)) { throw new \Exception('DDL fieldName error'); } goto RPLdv; s2B5v: $N4nxN = "ALTER TABLE `{$R3agm}` DROP `{$BC2Wv}`"; goto LxtVl; lwa98: if (!preg_match('/^[a-zA-Z][a-zA-Z0-9_]*$/', $R3agm)) { throw new \Exception('DDL table error'); } goto ueInO; RPLdv: $R3agm = self::table($R3agm); goto s2B5v; ln4mX: } public static function tableStructure($R3agm, $miYey = 'mysql') { goto tiYkO; eFhME: $jq2n1 = str_replace("`{$oVNwa}`", "`__table_prefix__{$R3agm}`", $jq2n1); goto Nqs3N; kp7Pc: BizException::throwsIfEmpty('ShowTableStructureError', $jq2n1); goto eFhME; Nqs3N: return $jq2n1; goto r28YS; WJB_Z: $jq2n1 = isset($jq2n1[0]['Create Table']) ? $jq2n1[0]['Create Table'] : ''; goto kp7Pc; YrUe4: $jq2n1 = self::query("SHOW CREATE TABLE `{$oVNwa}`", $miYey); goto WJB_Z; tiYkO: $oVNwa = self::table($R3agm, $miYey); goto YrUe4; r28YS: } public static function fields($R3agm, $miYey = 'mysql') { return Cache::remember('ModelManageUtil:fields:' . $R3agm, 60, function () use($R3agm, $miYey) { $oVNwa = self::table($R3agm, $miYey); $jq2n1 = self::query("SHOW COLUMNS FROM `{$oVNwa}`", $miYey); $nQYo_ = array(); foreach ($jq2n1 as $d6C3Y) { $nQYo_[] = array('field' => $d6C3Y['Field'], 'type' => strtoupper($d6C3Y['Type']), 'null' => $d6C3Y['Null'], 'key' => $d6C3Y['Key'], 'default' => $d6C3Y['Default'], 'extra' => $d6C3Y['Extra']); } return $nQYo_; }); } public static function field($R3agm, $dBa7F, $miYey = 'mysql') { foreach (self::fields($R3agm, $miYey) as $DUr2V) { if ($DUr2V['field'] == $dBa7F) { return $DUr2V; } } return null; } public static function fieldValueCheckOrFail($ueQYS, $VuXfH, $R3agm, $dBa7F, $miYey = 'mysql') { $nMi2c = self::fieldValueCheck($VuXfH, $R3agm, $dBa7F, $miYey); if (Response::isError($nMi2c)) { BizException::throws($ueQYS . $nMi2c['msg']); } } public static function fieldValueCheck($VuXfH, $R3agm, $dBa7F, $miYey = 'mysql') { goto B1nr1; VU35m: if (empty($vhE98)) { return Response::generateError('字段不存在'); } goto P9s0C; B1nr1: $vhE98 = self::field($R3agm, $dBa7F, $miYey); goto VU35m; P9s0C: if ('TEXT' == $vhE98['type']) { if (strlen($VuXfH) > 65535) { return Response::generateError('长度不能超过 65535'); } } else { if (preg_match('/^VARCHAR\\((\\d+)\\)$/', $vhE98['type'], $AkyhD)) { if (StrUtil::mbLength($VuXfH) > $AkyhD[1]) { return Response::generateError("长度不能超过 {$AkyhD[1]}"); } } } goto yqTDj; yqTDj: return Response::generateSuccess(); goto WcGDo; WcGDo: } public static function databaseStructure($miYey = 'mysql', $dvamF = array(), $qkGPu = array()) { goto b1pyp; eIewY: foreach ($fXsiN as $DUr2V) { goto GIE34; w6LGc: $zlw0F = self::query('SHOW FULL FIELDS FROM `' . $oyMBi['table']['name'] . '`;', $miYey); goto v4p6I; GIE34: $mEYer = $DUr2V['Name']; goto JScNB; JScNB: $oyMBi = array(); goto ojrN7; jGMy6: foreach ($zlw0F as $NS5_3) { goto RbNdb; RbNdb: $br4ul = array('name' => $NS5_3['Field'], 'type' => strtoupper($NS5_3['Type']), 'comment' => $NS5_3['Comment']); goto pD8gr; v3eeE: $oyMBi['columns'][] = $br4ul; goto nFhtw; pD8gr: if (empty($br4ul['comment'])) { $bx4aO = array('id' => 'ID', 'created_at' => L('Created At'), 'updated_at' => L('Updated At')); $br4ul['comment'] = isset($qkGPu[$br4ul['name']]) ? $qkGPu[$br4ul['name']] : ''; } goto v3eeE; nFhtw: } goto L90j1; v4p6I: $oyMBi['columns'] = array(); goto jGMy6; xxRsd: if (empty($oyMBi['table']['comment'])) { if (isset($dvamF[$mEYer])) { $oyMBi['table']['comment'] = $dvamF[$mEYer]; } } goto w6LGc; ojrN7: $oyMBi['table'] = array('name' => $mEYer, 'comment' => $DUr2V['Comment']); goto xxRsd; L90j1: $jq2n1[] = $oyMBi; goto JEWFw; JEWFw: } goto goStJ; b63sh: $jq2n1 = array(); goto eIewY; QTS6U: $fXsiN = self::query('SHOW TABLE STATUS;', $miYey); goto b63sh; b1pyp: $qkGPu = array_merge(array('id' => 'ID', 'created_at' => L('Created At'), 'updated_at' => L('Updated At')), $qkGPu); goto QTS6U; goStJ: return $jq2n1; goto aVTIw; aVTIw: } public static function databaseStructureMarkdown($miYey = 'mysql') { goto gmKv5; gmKv5: $jq2n1 = self::databaseStructure($miYey); goto QDnqD; cMqaJ: foreach ($jq2n1 as $d6C3Y) { goto knFBR; GlPQ8: $MacoO[] = ''; goto S6MaX; S6MaX: $MacoO[] = ''; goto WG6t3; N7u3k: foreach ($d6C3Y['columns'] as $br4ul) { $MacoO[] = '| ' . join(' | ', array($br4ul['name'], $br4ul['type'], $br4ul['comment'] ? $br4ul['comment'] : '-')) . ' |'; } goto JRqVc; knFBR: $MacoO[] = "## {$d6C3Y['table']['name']} {$d6C3Y['table']['comment']}"; goto GlPQ8; GEisf: $MacoO[] = ''; goto lNeel; JRqVc: $MacoO[] = ''; goto GEisf; WG6t3: $MacoO[] = '| ' . join(' | ', array('字段', '类型', '说明')) . ' |'; goto G103u; G103u: $MacoO[] = '| ' . join(' | ', array('---', '---', '---')) . ' |'; goto N7u3k; lNeel: } goto XL8t_; QDnqD: $MacoO = array(); goto cMqaJ; XL8t_: return join('
', $MacoO); goto vTkdy; vTkdy: } }