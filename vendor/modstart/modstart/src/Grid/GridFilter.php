<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Grid; use Illuminate\Database\Eloquent\Builder; use Illuminate\Support\Collection; use ModStart\Grid\Filter\AbstractFilter; use ModStart\Grid\Filter\Eq; use ModStart\Grid\Filter\Field\AbstractFilterField; use ModStart\Grid\Filter\Has; use ModStart\Grid\Filter\Like; use ModStart\Grid\Filter\Likes; use ModStart\Grid\Filter\Range; use ReflectionClass; class GridFilter { protected $model; protected $filters = array(); protected $supports = array('eq', 'like', 'likes', 'range', 'has'); private $field; private $search; private $scopes; public function __construct(Model $Wa8N4 = null) { goto jSINs; PG0xS: $this->fixedScopes = collect(); goto bpPfa; jSINs: $this->model = $Wa8N4; goto PG0xS; bpPfa: $this->scopes = collect(); goto aJyNV; aJyNV: } public function setSearch(array $dLG7_) { $this->search = $dLG7_; return $this; } public function scope() { goto zbNRF; zbNRF: $nfGqX = new GridFilterScope($this); goto KrzZO; s00i3: return $nfGqX; goto H0h98; KrzZO: $this->scopes->push($nfGqX); goto s00i3; H0h98: } public function addFilter(AbstractFilter $AKg7l) { $AKg7l->setTableFilter($this); return $this->filters[] = $AKg7l; } public function clearFilter() { $this->filters = array(); } public function deleteFilterByColumn($NS5_3) { $this->filters = array_filter($this->filters, function ($AKg7l) use($NS5_3) { return $AKg7l->column() != $NS5_3; }); } public function filters() { return $this->filters; } public function hasAutoHideFilters() { foreach ($this->filters as $AKg7l) { if ($AKg7l->autoHide()) { return true; } } return false; } public function getConditions() { goto svizU; yY3HX: $dLG7_ = $this->search; goto dQp4x; dQp4x: if (!empty($dLG7_)) { foreach ($dLG7_ as $OWADy) { if (!is_array($OWADy)) { continue; } foreach ($OWADy as $pvL8o => $t3uGA) { foreach ($this->filters() as $AKg7l) { if ($pvL8o === $AKg7l->column() && isset($t3uGA[$AKg7l->name()])) { $naNXB = $AKg7l->condition($t3uGA); if (!empty($naNXB)) { $NP7Bb = array_keys($naNXB); if (count($NP7Bb) > 1 || count($NP7Bb) == 1 && $NP7Bb[0] === 0) { $twGc7 = array_merge($twGc7, $naNXB); } else { $twGc7[] = $naNXB; } } } } } } } goto wY46I; svizU: $twGc7 = array(); goto yY3HX; wY46I: return array_filter($twGc7); goto M0Vpb; M0Vpb: } public function executeQueryConditions($IpOIw) { goto AVIqZ; AVIqZ: $twGc7 = array_merge($this->getScopeConditions(), $this->getConditions()); goto S1czF; izoiW: return $IpOIw; goto oHx_T; S1czF: foreach ($twGc7 as $naNXB) { $IpOIw = call_user_func_array(array($IpOIw, key($naNXB)), current($naNXB)); } goto izoiW; oHx_T: } public function executeQuery() { goto fCf_G; Hvkar: return $this->model->addConditions($twGc7)->getConditionQuery(); goto q47Ag; fCf_G: $twGc7 = array_merge($this->getScopeConditions(), $this->getConditions()); goto gk8Oy; gk8Oy: $this->model->clearQuery(); goto Hvkar; q47Ag: } public function execute() { goto C7htJ; l4EpC: return $this->model->addConditions($twGc7)->buildData(); goto ZIDqL; C7htJ: $twGc7 = array_merge($this->getScopeConditions(), $this->getConditions()); goto Ko8Ef; Ko8Ef: $this->model->clearQuery(); goto l4EpC; ZIDqL: } private function getScopeConditions() { return array(); } public function getSearch() { return $this->search; } public function __call($lrQvV, $wnXyT) { if (in_array($lrQvV, $this->supports)) { goto CQmu7; A9AGD: if ($this->model) { $AKg7l->grid($this->model->grid()); } goto aIz1S; knXim: $bHRgd = new ReflectionClass($bQxSo); goto PFHhn; aIz1S: return $this->addFilter($AKg7l); goto SmR6Y; PFHhn: $AKg7l = $bHRgd->newInstanceArgs($wnXyT); goto A9AGD; CQmu7: $bQxSo = '\\ModStart\\Grid\\Filter\\' . ucfirst($lrQvV); goto knXim; SmR6Y: } } }