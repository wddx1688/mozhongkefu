<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Field; use Illuminate\Support\Facades\View; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Util\RenderUtil; use ModStart\Core\Util\SerializeUtil; use ModStart\Core\Util\StrUtil; use ModStart\Field\Type\DynamicFieldsType; class DynamicFields extends AbstractField { protected $width = 300; protected $listable = false; protected function setup() { $this->addVariables(array('enabledFieldTypes' => null)); } public function unserializeValue($VuXfH, AbstractField $dBa7F) { goto ACjVN; ZCTfA: $VuXfH = @json_decode($VuXfH, true); goto nQAir; aZg3Q: foreach ($VuXfH as $qsK6T => $yFWLi) { foreach (array('switch1' => false, 'switch2' => false, 'text1' => '', 'text2' => '') as $dKmL2 => $uM1yj) { if (!isset($yFWLi['data'][$dKmL2])) { $VuXfH[$qsK6T]['data'][$dKmL2] = $uM1yj; } } } goto gjuOm; ACjVN: if (null === $VuXfH) { return $VuXfH; } goto ZCTfA; nQAir: if (empty($VuXfH)) { $VuXfH = array(); } goto aZg3Q; gjuOm: return $VuXfH; goto UmAp9; UmAp9: } public function enabledFieldTypes($oicmF) { $this->addVariables(array('enabledFieldTypes' => $oicmF)); return $this; } public function serializeValue($VuXfH, $Wa8N4) { return SerializeUtil::jsonEncode($VuXfH); } public function prepareInput($VuXfH, $Wa8N4) { goto lX8fQ; DwkGl: return $VuXfH; goto z0oHZ; fNWas: $lzAFD = array(); goto UBT6u; B4qa_: if (empty($VuXfH)) { $VuXfH = array(); } goto fNWas; UBT6u: foreach ($VuXfH as $qsK6T => $yFWLi) { goto U0veV; K_ebw: BizException::throwsIf("{$OFAbu} 标题不能为空", empty($yFWLi['title'])); goto AV4qj; r3TPU: BizException::throwsIf("{$OFAbu} 标识重复", isset($lzAFD[$yFWLi['name']])); goto ngkMV; ZkpIQ: if (isset($yFWLi['title'])) { $VuXfH[$qsK6T]['title'] = trim(StrUtil::filterSpecialChars($yFWLi['title'])); } goto s76z3; ngkMV: $lzAFD[$yFWLi['name']] = true; goto mPFl2; KWDiq: BizException::throwsIf("{$OFAbu} 标识格式不正确", !preg_match('/^[a-zA-Z][a-zA-Z0-9_]*$/', $yFWLi['name'])); goto r3TPU; Y6Rgl: if (isset($yFWLi['name'])) { $VuXfH[$qsK6T]['name'] = trim(StrUtil::filterSpecialChars($yFWLi['name'])); } goto ZkpIQ; s76z3: $OFAbu = "{$this->label} 第{$NYBwN}个字段"; goto K_ebw; AV4qj: BizException::throwsIf("{$OFAbu} 标识不能为空", empty($yFWLi['name'])); goto KWDiq; U0veV: $NYBwN = $qsK6T + 1; goto Y6Rgl; mPFl2: } goto DwkGl; lX8fQ: $VuXfH = @json_decode($VuXfH, true); goto B4qa_; z0oHZ: } public static function getEmptyValueObject($Px5Cq) { goto uaT89; u35o7: return $VuXfH; goto MH6To; BK4L0: foreach ($Px5Cq as $vhE98) { goto Qs9rU; N0pT4: $VuXfH[$vhE98['name']] = $yFWLi; goto wARaK; Qs9rU: $yFWLi = null; goto IP4Uo; IP4Uo: switch ($vhE98['type']) { case DynamicFieldsType::TYPE_CHECKBOX: case DynamicFieldsType::TYPE_FILES: $yFWLi = array(); break; } goto N0pT4; wARaK: } goto u35o7; uaT89: $VuXfH = array(); goto BK4L0; MH6To: } public static function getDefaultValueObject($Px5Cq) { goto DgxJc; DgxJc: $VuXfH = array(); goto uAAhV; ipiJu: return $VuXfH; goto WemS9; uAAhV: foreach ($Px5Cq as $vhE98) { switch ($vhE98['type']) { case DynamicFieldsType::TYPE_SELECT: case DynamicFieldsType::TYPE_RADIO: goto mH7Qi; PbRiX: break; goto nydef; mH7Qi: $vhE98['defaultValue'] = null; goto k0OHs; k0OHs: foreach ($vhE98['data']['options'] as $VL0g3) { if (!empty($VL0g3['active'])) { $vhE98['defaultValue'] = $VL0g3['title']; break; } } goto PbRiX; nydef: case DynamicFieldsType::TYPE_CHECKBOX: goto r1xwU; h0FdT: foreach ($vhE98['data']['options'] as $VL0g3) { if (!empty($VL0g3['active'])) { $vhE98['defaultValue'][] = $VL0g3['title']; } } goto W9zwd; r1xwU: $vhE98['defaultValue'] = array(); goto h0FdT; W9zwd: break; goto RSQUU; RSQUU: case DynamicFieldsType::TYPE_FILES: $vhE98['defaultValue'] = array(); break; } $VuXfH[$vhE98['name']] = $vhE98['defaultValue']; } goto ipiJu; WemS9: } public static function renderAllFormFieldVue($Px5Cq, $kKcR8 = array()) { return View::make('modstart::core.field.dynamicFields.formFieldVue', array('fields' => $Px5Cq, 'param' => $kKcR8))->render(); } public static function renderAllFormVue($Px5Cq, $kKcR8 = array()) { goto kt0M_; BQJEl: if (!empty($kKcR8['values'])) { $Pp_f6 = array_merge($Pp_f6, self::fetchValueObject($Px5Cq, $kKcR8['values'])); } goto fsbd3; kt0M_: BizException::throwsIf('param[name] must required', !isset($kKcR8['name'])); goto DNpbl; DNpbl: $Pp_f6 = self::getDefaultValueObject($Px5Cq); goto BQJEl; fsbd3: return RenderUtil::view('modstart::core.field.dynamicFields.formVue', array('fields' => $Px5Cq, 'fieldsData' => $Pp_f6, 'param' => $kKcR8)); goto lMC4g; lMC4g: } public static function fetchValueObject($Px5Cq, $tcwC2, $kKcR8 = array()) { goto gvk6y; UNSQ5: foreach ($Px5Cq as $vhE98) { switch ($vhE98['type']) { case DynamicFieldsType::TYPE_CHECKBOX: case DynamicFieldsType::TYPE_FILES: goto YUJEh; eluTS: if (empty($x0Oma[$vhE98['name']])) { $x0Oma[$vhE98['name']] = array(); } goto FFK3e; FFK3e: break; goto z4gSI; YUJEh: if (isset($x0Oma[$vhE98['name']])) { $x0Oma[$vhE98['name']] = @json_decode($x0Oma[$vhE98['name']], true); } goto eluTS; z4gSI: } } goto cwub4; FQrio: if (!empty($tcwC2)) { foreach ($tcwC2 as $VuXfH) { $x0Oma[$VuXfH['name']] = $VuXfH['value']; } } goto UNSQ5; gvk6y: $x0Oma = array(); goto FQrio; cwub4: return $x0Oma; goto vVKRS; vVKRS: } public static function fetchedValueToString($dBa7F, $VuXfH, $kKcR8 = array()) { switch ($dBa7F['type']) { case DynamicFieldsType::TYPE_TEXT: case DynamicFieldsType::TYPE_TEXTAREA: case DynamicFieldsType::TYPE_NUMBER: case DynamicFieldsType::TYPE_SWITCH: case DynamicFieldsType::TYPE_RADIO: case DynamicFieldsType::TYPE_SELECT: case DynamicFieldsType::TYPE_FILE: return $VuXfH; case DynamicFieldsType::TYPE_CHECKBOX: case DynamicFieldsType::TYPE_FILES: return join(',', $VuXfH); default: BizException::throws($kKcR8['tipPrefix'] . "不支持的字段类型: {$dBa7F['type']}"); } return null; } public static function renderAllDetailTableTr($Px5Cq, $x0Oma, $kKcR8 = array()) { return View::make('modstart::core.field.dynamicFields.detailTableTr', array('fields' => $Px5Cq, 'valueObject' => $x0Oma, 'param' => $kKcR8))->render(); } public static function renderAllDetailTable($Px5Cq, $x0Oma, $kKcR8 = array()) { return View::make('modstart::core.field.dynamicFields.detailTable', array('fields' => $Px5Cq, 'valueObject' => $x0Oma, 'param' => $kKcR8))->render(); } public static function fetchInputOrFail($Px5Cq, InputPackage $gY_Ck, $kKcR8 = array()) { goto fkS5S; fkS5S: if (!isset($kKcR8['tipPrefix'])) { $kKcR8['tipPrefix'] = ''; } goto QFfpo; QFfpo: $nx179 = array(); goto sNBX6; sNBX6: foreach ($Px5Cq as $vhE98) { switch ($vhE98['type']) { case DynamicFieldsType::TYPE_TEXT: case DynamicFieldsType::TYPE_TEXTAREA: case DynamicFieldsType::TYPE_NUMBER: case DynamicFieldsType::TYPE_SWITCH: case DynamicFieldsType::TYPE_RADIO: case DynamicFieldsType::TYPE_SELECT: $nx179[$vhE98['name']] = $gY_Ck->getTrimString($vhE98['name']); break; case DynamicFieldsType::TYPE_CHECKBOX: $nx179[$vhE98['name']] = $gY_Ck->getTrimStringArray($vhE98['name']); break; case DynamicFieldsType::TYPE_FILE: $nx179[$vhE98['name']] = $gY_Ck->getDataUploadedPath($vhE98['name']); break; case DynamicFieldsType::TYPE_FILES: $nx179[$vhE98['name']] = $gY_Ck->getDataUploadedPathArray($vhE98['name']); break; default: BizException::throws($kKcR8['tipPrefix'] . "不支持的字段类型: {$vhE98['type']}"); } if (!empty($vhE98['isRequired'])) { BizException::throwsIfEmpty($kKcR8['tipPrefix'] . $vhE98['title'] . '为空', $nx179[$vhE98['name']]); } } goto fRM2I; fRM2I: return $nx179; goto cqYgD; cqYgD: } }