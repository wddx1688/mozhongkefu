<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Field; use ModStart\Core\Exception\BizException; use ModStart\Core\Util\SerializeUtil; class ComplexFieldsList extends AbstractField { protected $value = array(); protected $width = 300; protected $listable = false; protected function setup() { $this->addVariables(array('fields' => array(), 'valueItem' => new \stdClass(), 'iconServer' => modstart_admin_url('widget/icon'), 'iconGroups' => array('iconfont', 'font-awesome'), 'linkServer' => modstart_admin_url('widget/link_select'), '_hasIcon' => false)); } private function getValueItem() { goto wTIf1; OrU7O: $qaWru = array(); goto tNUpx; FaKwk: if (empty($qaWru)) { $qaWru = new \stdClass(); } goto GHan4; GHan4: return $qaWru; goto JIBf_; wTIf1: $Px5Cq = $this->getVariable('fields'); goto OrU7O; tNUpx: foreach ($Px5Cq as $vhE98) { $qaWru[$vhE98['name']] = isset($vhE98['defaultValue']) ? $vhE98['defaultValue'] : null; } goto FaKwk; JIBf_: } public function iconServer($HCA_O) { $this->addVariables(array('iconServer' => $HCA_O)); return $this; } public function iconGroups($Hz_Wa) { $this->addVariables(array('iconGroups' => $Hz_Wa)); return $this; } public function linkServer($HCA_O) { $this->addVariables(array('linkServer' => $HCA_O)); return $this; } public function fields($VuXfH) { goto YafI7; YafI7: $this->addVariables(array('fields' => $VuXfH)); goto iDRcx; FmZsO: $lzAFD = array(); goto evno6; Noznq: return $this; goto atwHv; evno6: foreach ($VuXfH as $vhE98) { goto hPW2F; Wi2UH: $lzAFD[$vhE98['name']] = true; goto x_RiF; x_RiF: if ($vhE98['type'] == 'icon') { $this->addVariables(array('_hasIcon' => true)); } goto RVRqg; hPW2F: BizException::throwsIf('ComplexFieldsList.字段名重复 - ' . $vhE98['name'], isset($lzAFD[$vhE98['name']])); goto Wi2UH; RVRqg: } goto Noznq; iDRcx: $this->addVariables(array('valueItem' => $this->getValueItem())); goto FmZsO; atwHv: } public function unserializeValue($VuXfH, AbstractField $dBa7F) { goto H0Udh; zEb7y: if (empty($VuXfH)) { $VuXfH = array(); } goto L3rrS; H0Udh: $VuXfH = @json_decode($VuXfH, true); goto zEb7y; L3rrS: return $VuXfH; goto Jk2AY; Jk2AY: } public function serializeValue($VuXfH, $Wa8N4) { return SerializeUtil::jsonEncode($VuXfH); } public function prepareInput($VuXfH, $Wa8N4) { goto n3Eed; Plb_2: return $VuXfH; goto lKu8M; n3Eed: $VuXfH = @json_decode($VuXfH, true); goto h041R; h041R: if (empty($VuXfH)) { $VuXfH = array(); } goto Plb_2; lKu8M: } }