<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Admin\Auth; use Carbon\Carbon; use Illuminate\Support\Facades\Schema; use Illuminate\Support\Facades\Session; use Illuminate\Support\Str; use ModStart\Admin\Event\AdminUserLoginAttemptEvent; use ModStart\Admin\Event\AdminUserLoginFailedEvent; use ModStart\Admin\Type\AdminLogType; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Input\Request; use ModStart\Core\Input\Response; use ModStart\Core\Util\AgentUtil; use ModStart\Core\Util\SerializeUtil; use ModStart\Core\Util\StrUtil; class Admin { const ADMIN_USER_ID_SESSION_KEY = '_adminUserId'; public static function isLogin() { return self::id() > 0; } public static function isFounder() { $CeOJi = self::id(); return $CeOJi > 0 && AdminPermission::isFounder($CeOJi); } public static function isNotLogin() { return !self::isLogin(); } public static function id() { return intval(Session::get(self::ADMIN_USER_ID_SESSION_KEY, null)); } public static function get($vO92J) { return ModelUtil::get('admin_user', array('id' => $vO92J)); } public static function getByUsername($QKAda) { return ModelUtil::get('admin_user', array('username' => $QKAda)); } public static function passwordEncrypt($mDyAE, $H0dQH) { return md5(md5($mDyAE) . md5($H0dQH)); } public static function add($QKAda, $mDyAE, $otBhy = false) { goto CPAGl; y7i7j: if (!$otBhy) { $nx179['passwordSalt'] = $H0dQH; $nx179['password'] = self::passwordEncrypt($mDyAE, $H0dQH); } goto fp6JK; Ntla1: $nx179 = array(); goto NVvIQ; NVvIQ: $nx179['username'] = $QKAda; goto y7i7j; CPAGl: $H0dQH = Str::random(16); goto Ntla1; fp6JK: return ModelUtil::insert('admin_user', $nx179); goto AZ5Dj; AZ5Dj: } public static function loginByPhone($QfTuE) { goto HQnNF; wrSYs: ModelUtil::update('admin_user', $OZBy5['id'], array('lastLoginIp' => StrUtil::mbLimit(Request::ip(), 20), 'lastLoginTime' => Carbon::now())); goto I60yO; HQnNF: $OZBy5 = ModelUtil::get('admin_user', array('phone' => $QfTuE)); goto d3EoD; I60yO: return Response::generateSuccessData($OZBy5); goto dLId0; d3EoD: if (empty($OZBy5)) { AdminUserLoginFailedEvent::fire(0, null, Request::ip(), AgentUtil::getUserAgent()); return Response::generate(-1, L('User Not Exists')); } goto rGcqg; rGcqg: AdminUserLoginAttemptEvent::fire($OZBy5['id'], Request::ip(), AgentUtil::getUserAgent()); goto wrSYs; dLId0: } public static function login($QKAda, $mDyAE) { goto lC71m; lC71m: $OZBy5 = ModelUtil::get('admin_user', array('username' => $QKAda)); goto XTvu9; BMKYY: ModelUtil::update('admin_user', $OZBy5['id'], array('lastLoginIp' => StrUtil::mbLimit(Request::ip(), 20), 'lastLoginTime' => Carbon::now())); goto U_5cz; TVcXM: if ($OZBy5['password'] != self::passwordEncrypt($mDyAE, $OZBy5['passwordSalt'])) { AdminUserLoginFailedEvent::fire($OZBy5['id'], $QKAda, Request::ip(), AgentUtil::getUserAgent()); return Response::generate(-2, L('Password Incorrect')); } goto BMKYY; U_5cz: return Response::generateSuccessData($OZBy5); goto c422z; XTvu9: if (empty($OZBy5)) { AdminUserLoginFailedEvent::fire(0, $QKAda, Request::ip(), AgentUtil::getUserAgent()); return Response::generate(-1, L('User Not Exists')); } goto mJqbm; mJqbm: AdminUserLoginAttemptEvent::fire($OZBy5['id'], Request::ip(), AgentUtil::getUserAgent()); goto TVcXM; c422z: } public static function ruleChanged($vO92J, $oUbK1) { ModelUtil::update('admin_user', array('id' => $vO92J), array('ruleChanged' => boolval($oUbK1))); } public static function listRolesByUserId($vO92J) { goto jSNe0; GaiRT: $kTK8g = ModelUtil::all('admin_user_role', array('userId' => $vO92J), array('roleId')); goto bCD8l; Nikdr: if (empty($OZBy5)) { return Response::generate(-1, L('User Not Exists')); } goto GaiRT; EmLkm: return Response::generate(0, null, $kTK8g); goto MyEli; bCD8l: ModelUtil::join($kTK8g, 'roleId', 'role', 'admin_role', 'id'); goto Uz7yi; jSNe0: $OZBy5 = ModelUtil::get('admin_user', $vO92J); goto Nikdr; Uz7yi: foreach ($kTK8g as $dKmL2 => $uzIt1) { $kTK8g[$dKmL2]['name'] = $uzIt1['role']['name']; } goto XuYhS; XuYhS: ModelUtil::joinAll($kTK8g, 'roleId', 'rules', 'admin_role_rule', 'roleId'); goto EmLkm; MyEli: } public static function changePassword($CeOJi, $HLpQn, $Ok3Cz, $V3lZn = false) { goto bqrSn; dqtwZ: $H0dQH = Str::random(16); goto h2qSm; oX965: if ($OZBy5['password'] != self::passwordEncrypt($HLpQn, $OZBy5['passwordSalt'])) { if (!$V3lZn) { return Response::generate(-1, L('Old Password Incorrect')); } } goto dqtwZ; bqrSn: $OZBy5 = ModelUtil::get('admin_user', array('id' => $CeOJi)); goto UFoQm; h2qSm: $nx179 = array(); goto TEGi0; tZNIS: return Response::generate(0, 'ok'); goto cITbr; UFoQm: if (empty($OZBy5)) { return Response::generate(-1, L('Admin user not exists')); } goto oX965; uMXKp: $nx179['passwordSalt'] = $H0dQH; goto hOX4L; XnI2g: ModelUtil::update('admin_user', array('id' => $OZBy5['id']), $nx179); goto tZNIS; TEGi0: $nx179['password'] = self::passwordEncrypt($Ok3Cz, $H0dQH); goto uMXKp; hOX4L: $nx179['lastChangePwdTime'] = Carbon::now(); goto XnI2g; cITbr: } public static function addInfoLog($vO92J, $Mwn80, $N19iJ = array()) { goto t92DY; t92DY: static $pVCto = null; goto K9TsW; K9TsW: if (null === $pVCto) { $pVCto = Schema::hasTable('admin_log'); } goto EnxUf; EnxUf: if (!$pVCto) { return; } goto Xsn17; B5SmQ: if (!empty($N19iJ)) { ModelUtil::insert('admin_log_data', array('id' => $xVcqE['id'], 'content' => SerializeUtil::jsonEncode($N19iJ))); } goto FG830; Xsn17: $xVcqE = ModelUtil::insert('admin_log', array('adminUserId' => $vO92J, 'type' => AdminLogType::INFO, 'summary' => $Mwn80)); goto B5SmQ; FG830: } public static function addErrorLog($vO92J, $Mwn80, $N19iJ = array()) { goto t8YaW; KY0mD: if (!$pVCto) { return; } goto w9nNd; Fo4eq: if (!empty($N19iJ)) { ModelUtil::insert('admin_log_data', array('id' => $xVcqE['id'], 'content' => SerializeUtil::jsonEncode($N19iJ))); } goto ltQ6D; k1B6U: if (null === $pVCto) { $pVCto = Schema::hasTable('admin_log'); } goto KY0mD; t8YaW: static $pVCto = null; goto k1B6U; w9nNd: $xVcqE = ModelUtil::insert('admin_log', array('adminUserId' => $vO92J, 'type' => AdminLogType::ERROR, 'summary' => $Mwn80)); goto Fo4eq; ltQ6D: } public static function addInfoLogIfChanged($vO92J, $Mwn80, $HLpQn, $Ok3Cz) { goto n3whT; i9B9d: self::addInfoLog($vO92J, $Mwn80, $K5EtC); goto Y26FY; r8bkp: foreach ($HLpQn as $dKmL2 => $MYRuV) { if (!array_key_exists($dKmL2, $Ok3Cz)) { $K5EtC['Delete:' . $dKmL2 . ':Old'] = $MYRuV; continue; } if ($Ok3Cz[$dKmL2] != $MYRuV) { $K5EtC['Change:' . $dKmL2 . ':Old'] = $MYRuV; continue; } } goto A1aNj; pTzOL: if (empty($HLpQn) && empty($Ok3Cz)) { return; } goto r8bkp; A1aNj: foreach ($Ok3Cz as $dKmL2 => $Vo6y1) { if (!array_key_exists($dKmL2, $HLpQn)) { $K5EtC['Add:' . $dKmL2 . ':New'] = $Vo6y1; continue; } } goto cGWad; n3whT: $K5EtC = array(); goto pTzOL; cGWad: if (empty($K5EtC)) { return; } goto i9B9d; Y26FY: } }