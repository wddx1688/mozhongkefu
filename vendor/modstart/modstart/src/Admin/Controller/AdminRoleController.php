<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Admin\Controller; use Illuminate\Routing\Controller; use Illuminate\Support\Collection; use ModStart\Admin\Auth\AdminPermission; use ModStart\Admin\Concern\HasAdminCRUD; use ModStart\Admin\Model\AdminRole; use ModStart\Admin\Model\AdminRoleRule; use ModStart\Admin\Model\AdminUser; use ModStart\Admin\Provider\AdminRoleConfigProvider; use ModStart\Core\Util\ArrayUtil; use ModStart\Core\Util\ConvertUtil; use ModStart\Core\Util\CRUDUtil; use ModStart\Core\Util\RenderUtil; use ModStart\Detail\Detail; use ModStart\Field\AbstractField; use ModStart\Form\Form; use ModStart\Form\Type\FormMode; use ModStart\Grid\Grid; use ModStart\Grid\GridFilter; class AdminRoleController extends Controller { use HasAdminCRUD; protected function grid() { goto PQUYA; a4RCn: return $h7Rk_; goto PGCXd; PQUYA: $h7Rk_ = new Grid(AdminRole::class, function (Grid $h7Rk_) { $h7Rk_->display('id', L('ID'))->sortable(true)->width(80); $h7Rk_->text('name', L('Role Name'))->width(200); $h7Rk_->tree('rules', L('Role Permission'))->columnNameChildren('children')->columnNameId('rule')->spread(false)->tree(AdminPermission::menuAll(null, true))->hookValueUnserialize(function ($VuXfH, AbstractField $dBa7F) { return $VuXfH->pluck('rule'); }); if (!AdminRoleConfigProvider::isEmpty()) { $h7Rk_->display('config', '配置')->hookRendering(function (AbstractField $dBa7F, $DUr2V, $kOFY1) { return RenderUtil::view('modstart::admin.role.configGrid', array('item' => $DUr2V)); }); } $h7Rk_->textarea('remark', L('Remark')); $h7Rk_->gridFilter(function (GridFilter $AKg7l) { $AKg7l->eq('id', L('ID')); $AKg7l->like('name', L('Name')); }); }); goto mh4zQ; gEs5o: $h7Rk_->title(L('Admin Role')); goto a4RCn; mh4zQ: if (AdminPermission::isNotPermit('AdminRoleManage')) { $h7Rk_->canAdd(false)->canEdit(false)->canDelete(false); } goto gEs5o; PGCXd: } protected function form() { goto VgCGi; MsFc5: return $c9K5c; goto C72V_; x1dnq: $c9K5c->title(L('Admin Role')); goto MsFc5; XhPXg: if (AdminPermission::isNotPermit('AdminRoleManage')) { $c9K5c->canAdd(false)->canEdit(false)->canDelete(false); } goto x1dnq; VgCGi: $c9K5c = new Form(AdminRole::class, function (Form $c9K5c) { $c9K5c->display('id', L('ID'))->editable(true); $c9K5c->text('name', L('Role Name'))->required()->rules('unique:admin_role,name,' . CRUDUtil::id()); $c9K5c->tree('rules', L('Role Permission'))->rules('required')->columnNameChildren('children')->columnNameId('rule')->tree(AdminPermission::menuAll(null, true))->hookValueUnserialize(function ($VuXfH, AbstractField $dBa7F) { return collect($VuXfH)->pluck('rule'); })->hookValueSerialize(function ($VuXfH, AbstractField $dBa7F) { return collect(json_decode($VuXfH, true))->map(function ($DUr2V) { return array('rule' => $DUr2V); }); }); if (!AdminRoleConfigProvider::isEmpty()) { $c9K5c->display('config', '配置')->hookRendering(function (AbstractField $dBa7F, $DUr2V, $kOFY1) { return RenderUtil::view('modstart::admin.role.configForm', array('item' => $DUr2V)); })->formShowOnly(true); } $c9K5c->textarea('remark', L('Remark')); $c9K5c->display('created_at', L('Created At'))->formShowOnly(true); $c9K5c->display('updated_at', L('Updated At')); $c9K5c->hookSaving(function (Form $c9K5c) { if (FormMode::EDIT == $c9K5c->mode()) { goto jCmdg; K52wN: list($pxMM_, $De765) = ArrayUtil::diff($zieKe, $dePLw); goto Bz4w1; Bz4w1: $pxMM_ = collect($pxMM_)->map(function ($d6C3Y) { return array('rule' => $d6C3Y); }); goto doa72; doa72: $c9K5c->dataEditing(array_merge($c9K5c->dataEditing(), array('rules' => $pxMM_))); goto XVknk; H_0Gg: $zieKe = collect($c9K5c->item()->rules)->map(function ($VL0g3) { return $VL0g3['rule']; })->toArray(); goto K52wN; GnnSS: $dePLw = ConvertUtil::toArray($f3uGj['rules']); goto H_0Gg; Q1BBX: $BIW8_ = $c9K5c->item()->users->pluck('id')->toArray(); goto VuQe2; VuQe2: if (!empty($BIW8_)) { AdminUser::whereIn('id', $BIW8_)->update(array('ruleChanged' => true)); } goto cQeaD; jCmdg: $f3uGj = $c9K5c->dataSubmitted(); goto GnnSS; XVknk: if (!empty($De765)) { AdminRoleRule::where(array('roleId' => $c9K5c->itemId()))->whereIn('rule', $De765)->delete(); } goto Q1BBX; cQeaD: } }); $c9K5c->hookSaved(function (Form $c9K5c) { $DUr2V = $c9K5c->item(); foreach (AdminRoleConfigProvider::listAll() as $xqqfG) { $xqqfG->saved($DUr2V); } }); $c9K5c->hookDeleted(function (Form $c9K5c) { $c9K5c->item()->each(function ($DUr2V) { foreach (AdminRoleConfigProvider::listAll() as $xqqfG) { $xqqfG->deleted($DUr2V); } }); }); }); goto XhPXg; C72V_: } protected function detail() { goto iWOjP; yfHRF: $LT01t->title(L('Admin Role')); goto Btivy; Btivy: return $LT01t; goto bLG4u; iWOjP: $LT01t = new Detail(AdminRole::class, function (Detail $LT01t) { $LT01t->display('id', L('ID')); $LT01t->text('name', L('Role Name')); $LT01t->tree('rules', L('Role Permission'))->columnNameId('rule')->columnNameChildren('children')->tree(AdminPermission::menuAll(null, true))->hookValueUnserialize(function ($VuXfH, AbstractField $dBa7F) { return $VuXfH->map(function ($d6C3Y) { return $d6C3Y['rule']; })->toArray(); }); if (!AdminRoleConfigProvider::isEmpty()) { $LT01t->display('config', '配置')->hookRendering(function (AbstractField $dBa7F, $DUr2V, $kOFY1) { return RenderUtil::view('modstart::admin.role.configDetail', array('item' => $DUr2V)); }); } $LT01t->display('remark', L('Remark')); $LT01t->display('created_at', L('Created At')); $LT01t->display('updated_at', L('Updated At')); }); goto yfHRF; bLG4u: } }