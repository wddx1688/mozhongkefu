<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Admin\Middleware; use Closure; use Illuminate\Support\Facades\Input; use Illuminate\Support\Facades\Route; use Illuminate\Support\Facades\Session; use Illuminate\Support\Facades\View; use Illuminate\Support\Str; use ModStart\Admin\Auth\Admin; use ModStart\Admin\Auth\AdminPermission; use ModStart\App\Core\AccessGate; use ModStart\App\Core\CurrentApp; use ModStart\Core\Input\Request; use ModStart\Core\Input\Response; class AuthMiddleware { private static $gates = array(); public static function addGate($iCXib) { self::$gates[] = $iCXib; } protected $authIgnores = array('\\ModStart\\Admin\\Controller\\AuthController', '\\ModStart\\Admin\\Controller\\UtilController'); public function handle($mHrWb, Closure $g0nKp) { goto I36QY; JwmwO: View::share(array('_adminUser' => $OZBy5, '_adminUserId' => $vO92J, '_controllerMethod' => $w7oK5, '_isTab' => $LHEcI, '_isTabQuery' => $LHEcI ? '1' : '', '_tabSectionName' => $TUKOS)); goto T4FKL; pavF3: Session::flash('_adminUser', $OZBy5); goto dqA5G; I36QY: $bpf5d = Route::currentRouteAction(); goto cvhUT; T4FKL: foreach (self::$gates as $DUr2V) { goto C52pn; C52pn: $E3pBM = app($DUr2V); goto j8kIv; j8kIv: $nMi2c = $E3pBM->check($mHrWb); goto HmClg; HmClg: if (Response::isError($nMi2c)) { return $nMi2c; } goto Q75Nh; Q75Nh: } goto ucBbK; mcgVN: if (isset($brqCS[0])) { $Cr0v_ = $brqCS[0]; } else { $Cr0v_ = null; } goto rGjEg; f2QSA: $TUKOS = 'bodyContent'; goto KyjXj; cvhUT: $brqCS = explode('@', $bpf5d); goto mcgVN; dqA5G: $LHEcI = @boolval(Input::get('_is_tab', false)); goto f2QSA; rGjEg: if (isset($brqCS[1])) { $t5CM6 = $brqCS[1]; } else { $t5CM6 = null; } goto Jx_jH; MLCxG: $w7oK5 = $Cr0v_ . '@' . $t5CM6; goto eHD0_; XvkcG: Session::put('_adminUserId', $vO92J); goto pavF3; OPNND: if ($vO92J) { if (empty($OZBy5)) { $OZBy5 = Admin::get($vO92J); } } goto MLCxG; KyjXj: if ($LHEcI) { $TUKOS = 'body'; } goto JwmwO; ucBbK: return $g0nKp($mHrWb); goto AMTFe; Jx_jH: if (!Str::startsWith($Cr0v_, '\\')) { $Cr0v_ = '\\' . $Cr0v_; } goto mIXzZ; eHD0_: if (!$this->isAuthIgnore($Cr0v_, $t5CM6)) { goto JjMOF; bt_pQ: $UgWZQ = array_build(AdminPermission::rules(), function ($dKmL2, $yFWLi) { $yFWLi['auth'] = false; return array($dKmL2, $yFWLi); }); goto rv0pn; rv0pn: if (AdminPermission::isFounder($vO92J)) { foreach ($UgWZQ as $dKmL2 => $yFWLi) { $UgWZQ[$dKmL2]['auth'] = true; } } else { goto w3hb9; EIZbY: if (true || empty($b02vP) && $OZBy5['id'] > 0 || $OZBy5['ruleChanged']) { goto C5fBp; T03wq: Session::put('_adminHasRules', $b02vP); goto iFW75; C5fBp: if ($OZBy5['ruleChanged']) { Admin::ruleChanged($OZBy5['id'], false); } goto DfuoR; NGULW: $nMi2c = Admin::listRolesByUserId($OZBy5['id']); goto Xr6To; Xr6To: foreach ($nMi2c['data'] as $uzIt1) { foreach ($uzIt1['rules'] as $nmYJC) { $b02vP[$nmYJC['rule']] = true; } } goto T03wq; DfuoR: $b02vP = array(); goto NGULW; iFW75: } goto Gdpic; Gdpic: foreach ($b02vP as $nmYJC => $yFWLi) { if (isset($UgWZQ[$nmYJC])) { $UgWZQ[$nmYJC]['auth'] = true; } } goto kFqlb; w3hb9: $b02vP = Session::get('_adminHasRules', array()); goto EIZbY; kFqlb: } goto h5i5F; OzQAY: if (empty($OZBy5)) { return Response::redirect(modstart_admin_url('login', array('redirect' => Request::currentPageUrl()))); } goto bt_pQ; JjMOF: if ($vO92J && !$OZBy5) { Session::forget('_adminUserId'); return Response::redirect(modstart_admin_url('login', array('redirect' => Request::currentPageUrl()))); } goto OzQAY; h5i5F: Session::put('_adminRules', $UgWZQ); goto Inyth; Inyth: if (isset($UgWZQ[$w7oK5])) { if (empty($UgWZQ[$w7oK5]['auth'])) { return Response::send(-1, L('No Permission')); } } else { $Vsm1q = array_filter(array_build($UgWZQ, function ($dKmL2, $nmYJC) { if (!AdminPermission::isUrlAction($nmYJC['url'])) { return null; } return array($nmYJC['url'], $nmYJC['rule']); })); if (isset($Vsm1q[$w7oK5])) { if (empty($UgWZQ[$Vsm1q[$w7oK5]]['auth'])) { return Response::send(-1, L('No Permission')); } } else { goto qmlkY; YKLMY: if (property_exists($Cr0v_, 'PermitMethodMap')) { $bx4aO = $Cr0v_::$PermitMethodMap; if (!empty($bx4aO[$t5CM6])) { $xC3Cq = $bx4aO[$t5CM6]; } else { if (!empty($bx4aO['*'])) { $xC3Cq = $bx4aO['*']; } } } goto X4voI; qmlkY: $xC3Cq = 'index'; goto YKLMY; X4voI: if ('*' != $xC3Cq) { if (starts_with($xC3Cq, '@')) { $o8rci = substr($xC3Cq, 1); } else { if (str_contains($xC3Cq, '@')) { $o8rci = $xC3Cq; } else { $o8rci = $Cr0v_ . '@' . $xC3Cq; } } if (isset($UgWZQ[$o8rci])) { if (empty($UgWZQ[$o8rci]['auth'])) { return Response::send(-1, L('No Permission')); } } else { if (isset($Vsm1q[$o8rci])) { if (empty($UgWZQ[$Vsm1q[$o8rci]]['auth'])) { return Response::send(-1, L('No Permission')); } } else { return Response::send(-1, L('No Permission')); } } } goto zCJPZ; zCJPZ: } } goto VQfN_; VQfN_: } goto XvkcG; mIXzZ: $vO92J = intval(Session::get('_adminUserId', null)); goto W_XSh; d8UWo: if (empty($vO92J)) { goto Xzi3f; Rslt2: $PxVEr = trim(Request::headerGet('auth-admin-request-id')); goto Ww9ue; WZ_kb: $sqwzC = intval(Request::headerGet('auth-admin-timestamp')); goto Rslt2; AOpUX: if ($kjR1J > 0) { goto j22a4; sLL5E: if ($PORiU != $x3PgV) { return Response::json(-1, 'admin user sign error'); } goto II5Ix; Ln2d2: $PORiU = md5($kiaV8); goto sLL5E; j22a4: if ($sqwzC < time() - 1800 || $sqwzC > time() + 1800) { return Response::json(-1, 'auth-admin-timestamp error, server time ' . time()); } goto ylL4O; y2j4Y: if (empty($TUNPx['password']) || empty($TUNPx['passwordSalt'])) { return Response::json(-1, 'admin user forbidden'); } goto qznoX; eOH1h: $TUNPx = Admin::get($kjR1J); goto JpwJC; ScD3o: $OZBy5 = $TUNPx; goto UMIJa; JpwJC: if (empty($TUNPx)) { return Response::json(-1, 'admin user not exists'); } goto y2j4Y; II5Ix: $vO92J = $TUNPx['id']; goto ScD3o; qznoX: $kiaV8 = "{$sqwzC}:{$PxVEr}:{$kjR1J}:{$TUNPx['username']}:{$TUNPx['password']}:{$TUNPx['passwordSalt']}"; goto Ln2d2; ylL4O: if (empty($PxVEr)) { return Response::json(-1, 'request id empty'); } goto eOH1h; UMIJa: } goto Ufk64; Ww9ue: $x3PgV = trim(Request::headerGet('auth-admin-sign')); goto AOpUX; Xzi3f: $kjR1J = intval(Request::headerGet('auth-admin-user-id')); goto WZ_kb; Ufk64: } goto OPNND; W_XSh: $OZBy5 = null; goto d8UWo; AMTFe: } private function isAuthIgnore($PTT52, $CDUjL) { goto TqdP_; k1IUp: return false; goto vJgBZ; nA9gd: foreach ($cBBEO as $DUr2V) { if (Str::contains($DUr2V, '@')) { if ($PTT52 . '@' . $CDUjL == $DUr2V) { return true; } } else { if ($PTT52 == $DUr2V) { return true; } } } goto k1IUp; tnzEp: $cBBEO = array_merge($this->authIgnores, $RqmSm); goto nA9gd; TqdP_: $RqmSm = config('modstart.admin.authIgnores', array()); goto tnzEp; vJgBZ: } }