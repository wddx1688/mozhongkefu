<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Chumper\Zipper; use Chumper\Zipper\Repositories\RepositoryInterface; use Exception; use Illuminate\Filesystem\Filesystem; class Zipper { const WHITELIST = 1; const BLACKLIST = 2; const EXACT_MATCH = 4; private $currentFolder = ''; private $file; private $repository; private $filePath; public function __construct(Filesystem $Mzpvr = null) { $this->file = $Mzpvr ? $Mzpvr : new Filesystem(); } public function make($tqD5O, $EY7Cx = 'zip') { goto Sv3L8; j5VyH: return $this; goto h2nO1; IoYjj: if (!is_subclass_of($Mz37a, 'Chumper\\Zipper\\Repositories\\RepositoryInterface')) { throw new \InvalidArgumentException("Class for '{$Mz37a}' must implement RepositoryInterface interface"); } goto CGgvf; Sv3L8: $Ok3Cz = $this->createArchiveFile($tqD5O); goto hacAv; CGgvf: try { if (is_string($Mz37a)) { $this->repository = new $Mz37a($tqD5O, $Ok3Cz); } else { $this->repository = $EY7Cx; } } catch (Exception $l8i0J) { throw $l8i0J; } goto sRi2T; sRi2T: $this->filePath = $tqD5O; goto j5VyH; HB3jB: if (is_string($EY7Cx)) { $Mz37a = 'Chumper\\Zipper\\Repositories\\' . ucwords($EY7Cx) . 'Repository'; } goto IoYjj; hacAv: $Mz37a = $EY7Cx; goto HB3jB; h2nO1: } public function zip($tqD5O) { $this->make($tqD5O); return $this; } public function phar($tqD5O) { $this->make($tqD5O, 'phar'); return $this; } public function rar($tqD5O) { $this->make($tqD5O, 'rar'); return $this; } public function extractTo($hCl98, array $a3n3M = array(), $ofvYZ = self::BLACKLIST) { goto e8uCh; TIV32: if ($ofvYZ & self::EXACT_MATCH) { $M7KM2 = function ($ptXnr) use($a3n3M) { return in_array($ptXnr, $a3n3M, true); }; } else { $M7KM2 = function ($ptXnr) use($a3n3M) { return starts_with($ptXnr, $a3n3M); }; } goto U9ui1; e8uCh: if (!$this->file->exists($hCl98) && !$this->file->makeDirectory($hCl98, 493, true)) { throw new \RuntimeException('Failed to create folder'); } goto TIV32; U9ui1: if ($ofvYZ & self::WHITELIST) { $this->extractFilesInternal($hCl98, $M7KM2); } else { $this->extractFilesInternal($hCl98, function ($owyBa) use($M7KM2) { return !$M7KM2($owyBa); }); } goto dx0Vd; dx0Vd: } public function extractMatchingRegex($o94bD, $PjL1d) { if (empty($PjL1d)) { throw new \InvalidArgumentException('Missing pass valid regex parameter'); } $this->extractFilesInternal($o94bD, function ($owyBa) use($PjL1d) { $TB77c = preg_match($PjL1d, $owyBa); if ($TB77c === 1) { return true; } elseif ($TB77c === false) { throw new \RuntimeException("regular expression match on '{$owyBa}' failed with error. Please check if pattern is valid regular expression."); } return false; }); } public function getFileContent($DtpDz) { if ($this->repository->fileExists($DtpDz) === false) { throw new Exception(sprintf('The file "%s" cannot be found', $DtpDz)); } return $this->repository->getFileContent($DtpDz); } public function add($Ja3aB, $uuq_W = null) { if (is_array($Ja3aB)) { foreach ($Ja3aB as $cANPj => $l4725) { if (!is_int($cANPj)) { $this->add($l4725, $cANPj); } else { $this->add($l4725); } } } elseif ($this->file->isFile($Ja3aB)) { if ($uuq_W) { $this->addFile($Ja3aB, $uuq_W); } else { $this->addFile($Ja3aB); } } else { $this->addDir($Ja3aB); } return $this; } public function addEmptyDir($fC631) { $this->repository->addEmptyDir($fC631); return $this; } public function addString($owyBa, $N19iJ) { $this->addFromString($owyBa, $N19iJ); return $this; } public function getStatus() { return $this->repository->getStatus(); } public function remove($ttX7J) { if (is_array($ttX7J)) { $Depg_ = $this; $this->repository->each(function ($Z3orD) use($ttX7J, $Depg_) { if (starts_with($Z3orD, $ttX7J)) { $Depg_->getRepository()->removeFile($Z3orD); } }); } else { $this->repository->removeFile($ttX7J); } return $this; } public function getFilePath() { return $this->filePath; } public function usePassword($mDyAE) { return $this->repository->usePassword($mDyAE); } public function close() { if (null !== $this->repository) { $this->repository->close(); } $this->filePath = ''; } public function folder($hCl98) { $this->currentFolder = $hCl98; return $this; } public function home() { $this->currentFolder = ''; return $this; } public function delete() { goto L0bP1; Y7Wvl: $this->file->delete($this->filePath); goto N1JW3; L0bP1: if (null !== $this->repository) { $this->repository->close(); } goto Y7Wvl; N1JW3: $this->filePath = ''; goto c7XO9; c7XO9: } public function getArchiveType() { return get_class($this->repository); } public function getCurrentFolderPath() { return $this->currentFolder; } public function contains($D9Isv) { return $this->repository->fileExists($D9Isv); } public function getRepository() { return $this->repository; } public function getFileHandler() { return $this->file; } public function getInternalPath() { return empty($this->currentFolder) ? '' : $this->currentFolder . '/'; } public function listFiles($Zg_3W = null) { goto P3x18; P3x18: $leA2d = array(); goto NUhTx; NUhTx: if ($Zg_3W) { $AKg7l = function ($Z3orD) use(&$leA2d, $Zg_3W) { set_error_handler(function () { }); $TB77c = preg_match($Zg_3W, $Z3orD); restore_error_handler(); if ($TB77c === 1) { $leA2d[] = $Z3orD; } elseif ($TB77c === false) { throw new \RuntimeException("regular expression match on '{$Z3orD}' failed with error. Please check if pattern is valid regular expression."); } }; } else { $AKg7l = function ($Z3orD) use(&$leA2d) { $leA2d[] = $Z3orD; }; } goto kO1nT; Pxmzk: return $leA2d; goto PMxCH; kO1nT: $this->repository->each($AKg7l); goto Pxmzk; PMxCH: } private function getCurrentFolderWithTrailingSlash() { goto nISoy; naUXo: return $this->currentFolder; goto lN_ar; nISoy: if (empty($this->currentFolder)) { return ''; } goto gVzTJ; gVzTJ: $PssSx = mb_substr($this->currentFolder, -1); goto eV2dQ; eV2dQ: if ($PssSx !== '/' || $PssSx !== '\\') { return $this->currentFolder . '/'; } goto naUXo; lN_ar: } private function createArchiveFile($RKGv1) { if (!$this->file->exists($RKGv1)) { goto N2qKO; Dk4lx: return true; goto pBDiD; N2qKO: $ECMX8 = dirname($RKGv1); goto OcHIt; OcHIt: if (!$this->file->exists($ECMX8) && !$this->file->makeDirectory($ECMX8, 493, true)) { throw new \RuntimeException('Failed to create folder'); } elseif (!$this->file->isWritable($ECMX8)) { throw new Exception(sprintf('The path "%s" is not writeable', $RKGv1)); } goto Dk4lx; pBDiD: } return false; } private function addDir($zRB8k) { foreach ($this->file->files($zRB8k) as $Z3orD) { $this->addFile($zRB8k . '/' . basename($Z3orD)); } foreach ($this->file->directories($zRB8k) as $l4725) { goto NwvZI; m7Gy9: $this->currentFolder = empty($this->currentFolder) ? basename($l4725) : $this->currentFolder . '/' . basename($l4725); goto XMGu3; XMGu3: $this->addDir($zRB8k . '/' . basename($l4725)); goto Cu_GR; Cu_GR: $this->currentFolder = $ITxER; goto rck01; NwvZI: $ITxER = $this->currentFolder; goto m7Gy9; rck01: } } private function addFile($Ja3aB, $uuq_W = null) { if (!$uuq_W) { $nyHgK = pathinfo($Ja3aB); $uuq_W = isset($nyHgK['extension']) ? $nyHgK['filename'] . '.' . $nyHgK['extension'] : $nyHgK['filename']; } $this->repository->addFile($Ja3aB, $this->getInternalPath() . $uuq_W); } private function addFromString($owyBa, $N19iJ) { $this->repository->addFromString($this->getInternalPath() . $owyBa, $N19iJ); } private function extractFilesInternal($hCl98, callable $M7KM2) { $Depg_ = $this; $this->repository->each(function ($uuq_W) use($hCl98, $M7KM2, $Depg_) { $CMrpw = $Depg_->getCurrentFolderWithTrailingSlash(); if (!empty($CMrpw) && !starts_with($uuq_W, $CMrpw)) { return; } $owyBa = str_replace($Depg_->getInternalPath(), '', $uuq_W); if ($M7KM2($owyBa)) { $Depg_->extractOneFileInternal($uuq_W, $hCl98); } }); } private function extractOneFileInternal($uuq_W, $hCl98) { goto cQ_K5; E1mXI: $this->getFileHandler()->put($CMq3g, $aVY4q); goto muPLU; nUQnB: $CMq3g = $hCl98 . DIRECTORY_SEPARATOR . $U6L__; goto KYQ5v; KYQ5v: $aVY4q = $this->getRepository()->getFileStream($uuq_W); goto E1mXI; cQ_K5: $U6L__ = str_replace($this->getInternalPath(), '', $uuq_W); goto mZKeu; zYxEl: $l4725 = pathinfo($hCl98 . DIRECTORY_SEPARATOR . $U6L__, PATHINFO_DIRNAME); goto vPKlC; vPKlC: if (!$this->file->exists($l4725) && !$this->file->makeDirectory($l4725, 493, true, true)) { throw new \RuntimeException('Failed to create folders'); } goto nUQnB; mZKeu: if (strpos($uuq_W, '../') !== false || strpos($uuq_W, '..\\') !== false) { throw new \RuntimeException('Special characters found within filenames'); } goto zYxEl; muPLU: } }