<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Misc\Captcha; use Exception; use Illuminate\Config\Repository; use Illuminate\Filesystem\Filesystem; use Illuminate\Hashing\BcryptHasher as Hasher; use Illuminate\Session\Store as Session; use Illuminate\Support\Str; use Intervention\Image\ImageManager; class Captcha { protected $files; protected $config; protected $imageManager; protected $session; protected $hasher; protected $str; protected $canvas; protected $image; protected $backgrounds = array(); protected $fonts = array(); protected $fontColors = array(); protected $length = 5; protected $width = 120; protected $height = 36; protected $angle = 15; protected $lines = 3; protected $characters; protected $text; protected $contrast = 0; protected $quality = 90; protected $sharpen = 0; protected $blur = 0; protected $bgImage = true; protected $bgColor = '#ffffff'; protected $invert = false; protected $sensitive = false; protected $textLeftPadding = 4; public function __construct(Filesystem $a3n3M, Repository $LyfCI, ImageManager $sZ1JN, Session $V3Z6x, Hasher $skWnF, Str $ylUv7) { goto OS59J; OS59J: $this->files = $a3n3M; goto IWqWV; IWqWV: $this->config = $LyfCI; goto dCoo1; dCoo1: $this->imageManager = $sZ1JN; goto gFptn; phrtk: $this->characters = config('captcha.characters', '2346789abcdefghjmnpqrtuxyzABCDEFGHJMNPQRTUXYZ'); goto ujxTh; gFptn: $this->session = $V3Z6x; goto zlVDH; UTIhu: $this->str = $ylUv7; goto phrtk; zlVDH: $this->hasher = $skWnF; goto UTIhu; ujxTh: } protected function configure($LyfCI) { if ($this->config->has('captcha.' . $LyfCI)) { foreach ($this->config->get('captcha.' . $LyfCI) as $cANPj => $rZarw) { $this->{$cANPj} = $rZarw; } } } public function create($LyfCI = 'default', $vETjU = false) { goto q_94o; m9l9u: $this->fonts = array_values($this->fonts); goto aq5rM; MStTj: $this->text = $UNM_v['value']; goto MtPTr; OJbeT: $this->fonts = $this->files->files(__DIR__ . '/../../../resources/misc/captcha/fonts'); goto d3ZWD; sALs3: $this->lines(); goto gq0fH; MtPTr: $this->canvas = $this->imageManager->canvas($this->width, $this->height, $this->bgColor); goto lLeKx; aq5rM: $this->configure($LyfCI); goto aEUaQ; dTw05: if ($this->blur) { $this->image->blur($this->blur); } goto hdwcb; gq0fH: if ($this->sharpen) { $this->image->sharpen($this->sharpen); } goto RU5Es; aEUaQ: $UNM_v = $this->generate($LyfCI); goto MStTj; rjX0J: $this->text(); goto sALs3; hdwcb: return $vETjU ? array('sensitive' => $UNM_v['sensitive'], 'key' => $UNM_v['key'], 'img' => $this->image->encode('data-url')->encoded) : $this->image->response('png', $this->quality); goto zo3Ir; RU5Es: if ($this->invert) { $this->image->invert($this->invert); } goto dTw05; q_94o: $this->backgrounds = $this->files->files(__DIR__ . '/../../../resources/misc/captcha/backgrounds'); goto OJbeT; d3ZWD: if (app()->version() >= 5.5) { $this->fonts = array_map(function ($Z3orD) { return $Z3orD->getPathName(); }, $this->fonts); } goto m9l9u; nVV7F: if ($this->contrast != 0) { $this->image->contrast($this->contrast); } goto rjX0J; lLeKx: if ($this->bgImage) { $this->image = $this->imageManager->make($this->background())->resize($this->width, $this->height); $this->canvas->insert($this->image); } else { $this->image = $this->canvas; } goto nVV7F; zo3Ir: } protected function background() { return $this->backgrounds[rand(0, count($this->backgrounds) - 1)]; } protected function generate($LyfCI) { goto RHJ9Q; rkKHq: $this->session->put('captcha', $FfiIG); goto v6XPw; GsIBI: $FfiIG = $this->sensitive ? $FfiIG : $this->str->lower($FfiIG); goto KXYxo; KXYxo: $mSCVj = $this->hasher->make($FfiIG); goto rkKHq; v6XPw: return array('value' => $Y6n0r, 'key' => $FfiIG); goto p5chV; RHJ9Q: switch ($LyfCI) { case 'formula': goto I8AcY; WlZCu: switch ($ArFD3) { case '+': $FfiIG = $XXr5P + $MYfMa; break; case '-': $FfiIG = $XXr5P - $MYfMa; break; } goto CKBjY; nIySj: break; goto ubAA6; SsCRf: $ArFD3 = rand(0, 99) > 50 ? '+' : '-'; goto WlZCu; CKBjY: $Y6n0r = $XXr5P . $ArFD3 . $MYfMa . '=?'; goto RmYQ1; RmYQ1: $this->length = strlen($Y6n0r); goto nIySj; I8AcY: $XXr5P = rand(20, 80); goto OYIpR; OYIpR: $MYfMa = rand(0, 10); goto SsCRf; ubAA6: default: goto w_hmm; aLJoJ: for ($qsK6T = 0; $qsK6T < $this->length; $qsK6T++) { $FfiIG .= $ipIbJ[rand(0, count($ipIbJ) - 1)]; } goto bHSc4; bHSc4: $Y6n0r = $FfiIG; goto MLdpn; fxgtD: $FfiIG = ''; goto aLJoJ; w_hmm: $ipIbJ = str_split($this->characters); goto fxgtD; MLdpn: break; goto VLVjl; VLVjl: } goto GsIBI; p5chV: } protected function text() { goto eDWj3; hFM5N: foreach (str_split($this->text) as $wVNLx) { goto cD9Ce; KAQS1: $this->image->text($wVNLx, $fLdHb, $EqhN2, function ($A_ecX) { $A_ecX->file($this->font()); $A_ecX->size($this->fontSize()); $A_ecX->color($this->fontColor()); $A_ecX->align('left'); $A_ecX->valign('top'); $A_ecX->angle($this->angle()); }); goto IsI__; nVt2K: $EqhN2 = $EUYBB; goto BqD8z; BqD8z: if ($wVNLx == '-' || $wVNLx == '+' || $wVNLx == '=') { $EqhN2 *= 2; } goto KAQS1; cD9Ce: $fLdHb = $this->textLeftPadding + $qsK6T * ($this->image->width() - $this->textLeftPadding) / $this->length; goto nVt2K; IsI__: $qsK6T++; goto JqB5N; JqB5N: } goto bnRH9; v93K3: $qsK6T = 0; goto hFM5N; eDWj3: $EUYBB = $this->image->height() / $this->length; goto v93K3; bnRH9: } protected function font() { return $this->fonts[rand(0, count($this->fonts) - 1)]; } protected function fontSize() { return rand($this->image->height() - 10, $this->image->height()); } protected function fontColor() { if (!empty($this->fontColors)) { $u9AuJ = $this->fontColors[rand(0, count($this->fontColors) - 1)]; } else { $u9AuJ = array(rand(0, 255), rand(0, 255), rand(0, 255)); } return $u9AuJ; } protected function angle() { return rand(-1 * $this->angle, $this->angle); } protected function lines() { for ($qsK6T = 0; $qsK6T <= $this->lines; $qsK6T++) { $this->image->line(rand(0, $this->image->width()) + $qsK6T * rand(0, $this->image->height()), rand(0, $this->image->height()), rand(0, $this->image->width()), rand(0, $this->image->height()), function ($vg3aJ) { $vg3aJ->color($this->fontColor()); }); } return $this->image; } public function check($VuXfH) { goto A5kNi; A5kNi: if (!$this->session->has('captcha')) { return false; } goto vZ1nM; SjfVe: return strtolower($VuXfH) == strtolower($cANPj); goto FGqlf; IdIYy: $this->session->remove('captcha'); goto SjfVe; D1qe9: $zmwD1 = $this->session->get('captcha.sensitive'); goto bageE; vZ1nM: $cANPj = $this->session->get('captcha'); goto D1qe9; bageE: if (!$zmwD1) { $VuXfH = $this->str->lower($VuXfH); } goto IdIYy; FGqlf: } public function check_api($VuXfH, $cANPj) { return $this->hasher->check($VuXfH, $cANPj); } public function src($LyfCI = null) { return url('captcha' . ($LyfCI ? '/' . $LyfCI : '/default')) . '?' . $this->str->random(8); } public function img($LyfCI = null, $yjbtp = array()) { goto mia6z; as2Ot: return '<img src="' . $this->src($LyfCI) . '" ' . trim($GLlRo) . '>'; goto S8ju_; E0ZfF: foreach ($yjbtp as $kJNHc => $VuXfH) { if ($kJNHc == 'src') { continue; } $GLlRo .= $kJNHc . '="' . $VuXfH . '" '; } goto as2Ot; mia6z: $GLlRo = ''; goto E0ZfF; S8ju_: } }