<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\App\OpenApi\Middleware; use Illuminate\Support\Facades\Input; use Illuminate\Support\Facades\Log; use Illuminate\Support\Facades\Route; use Illuminate\Support\Facades\Session; use Illuminate\Support\Str; use ModStart\Core\Input\Response; use ModStart\Core\Util\SignUtil; abstract class AbstractKeySecretSimpleSignCheckMiddleware { protected abstract function getSecretByKey($cANPj); public function handle($mHrWb, \Closure $g0nKp) { goto RUOC1; IWUMi: if (!Str::startsWith($PTT52, '\\')) { $PTT52 = '\\' . $PTT52; } goto QXcIx; Hu6AK: if ($UC0zA != $PORiU) { goto xTWsv; xTWsv: Log::info('MS.SignNotMatch : ' . $PORiU); goto wlFrR; wlFrR: $nMi2c = $this->signNotMatch(); goto MaHbH; MaHbH: if ($nMi2c['code']) { return $nMi2c['data']; } goto P01ar; P01ar: } goto HzT_y; QXcIx: Session::flash('_openApiKey', $cANPj); goto Bbt2J; DKP3B: if (($UomWP < time() - 1800 || $UomWP > time() + 1800) && empty($XP3cL['isDemo'])) { return Response::json(-1, 'timestamp not valid (' . time() . ')'); } goto EzfMj; SM6qb: $cANPj = Input::get('key'); goto lrqjP; vD3jv: if (isset($brqCS[1])) { $CDUjL = $brqCS[1]; } else { $CDUjL = null; } goto IWUMi; JsVms: $eBWrF = array('timestamp' => $UomWP, 'key' => $cANPj); goto E9cg9; E9cg9: $PORiU = SignUtil::common($eBWrF, $FNyzN); goto Hu6AK; tDB81: $UomWP = Input::get('timestamp'); goto SM6qb; Bbt2J: Session::flash('_openApiSecret', $FNyzN); goto MOPLQ; RUOC1: $UC0zA = Input::get('sign'); goto tDB81; sI2d9: if (empty($FNyzN)) { return Response::json(-1, 'invalid key'); } goto tU2pY; MOPLQ: return $g0nKp($mHrWb); goto GranS; lrqjP: if (empty($cANPj)) { return Response::json(-1, 'key empty'); } goto m1V4g; tU2pY: if (empty($UomWP)) { return Response::json(-1, 'timestamp empty'); } goto DKP3B; BJ00p: if (isset($brqCS[0])) { $PTT52 = $brqCS[0]; } else { $PTT52 = null; } goto vD3jv; m1V4g: $FNyzN = $this->getSecretByKey($cANPj); goto sI2d9; hztFr: $brqCS = explode('@', $bpf5d); goto BJ00p; EzfMj: if (empty($UC0zA)) { return Response::json(-1, 'sign empty'); } goto JsVms; HzT_y: $bpf5d = Route::currentRouteAction(); goto hztFr; GranS: } protected function signNotMatch() { return Response::generate(-1, 'sign error', Response::json(-1, 'sign error')); } }