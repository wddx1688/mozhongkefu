<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Data; use Illuminate\Support\Facades\Storage; use Illuminate\Support\Str; use League\Flysystem\FilesystemInterface; use ModStart\Core\Util\EnvUtil; use ModStart\Core\Util\FileUtil; use ModStart\Core\Util\PathUtil; use ModStart\Data\Repository\DatabaseDataRepository; abstract class AbstractDataStorage { const DATA_TEMP = 'data_temp'; const DATA = 'data'; const DATA_CHUNK = 'data_chunk'; const PATTERN_DATA_TEMP = '/^data_temp\\/([a-z_]+)\\/([a-zA-Z0-9]{32}\\.[a-z0-9]*)$/'; const PATTERN_DATA = '/^data\\/([a-z_]+)\\/(\\d+\\/\\d+\\/\\d+\\/\\d+_[a-zA-Z0-9]{4}_\\d+\\.[a-z0-9]+)$/'; const PATTERN_DATA_STRING = '/data\\/([a-z_]+)\\/(\\d+\\/\\d+\\/\\d+\\/\\d+_[a-zA-Z0-9]{4}_\\d+\\.[a-z0-9]+)/'; protected $localStorage; protected $repository; protected $option = array(); public function __construct($mH3Yd) { goto nF46G; IhptH: config(array('filesystems.disks.data' => array('driver' => 'local', 'root' => base_path('public/')))); goto KerFA; KerFA: $this->localStorage = Storage::disk('data'); goto MH9WH; nF46G: $this->option = $mH3Yd; goto IhptH; MH9WH: $this->repository = new DatabaseDataRepository(); goto Adk7h; Adk7h: } public function driverName() { return null; } public abstract function init(); public abstract function has($Z3orD); public abstract function move($XfNw_, $oTyWU); public abstract function delete($Z3orD); public function softDelete($Z3orD) { return $this->move($Z3orD, self::DATA . '/_trash/' . date('Ymd_H') . '/' . $Z3orD); } public abstract function put($Z3orD, $N19iJ); public abstract function get($Z3orD); public abstract function size($Z3orD); public abstract function multiPartInit($kKcR8); public abstract function multiPartUpload($kKcR8); public function updateDriverDomain($nx179) { return $nx179; } public function domain() { return ''; } public function domainInternal() { return ''; } public function getDriverFullPath($hCl98) { goto w_A1F; WnKyp: if (PathUtil::isPublicNetPath($hCl98)) { return $hCl98; } goto xfimq; xfimq: return config('data.baseUrl', '/') . $hCl98; goto sSJY2; w_A1F: if (empty($hCl98)) { return $hCl98; } goto xdFJ9; xdFJ9: if (Str::startsWith($hCl98, '//')) { $hCl98 = 'http:' . $hCl98; } else { $hCl98 = ltrim($hCl98, '/'); } goto WnKyp; sSJY2: } public function getDriverFullPathInternal($hCl98) { goto yPWx2; fShFL: return config('data.baseUrl', '/') . $hCl98; goto sepL1; yPWx2: if (Str::startsWith($hCl98, '//')) { $hCl98 = 'http:' . $hCl98; } else { $hCl98 = ltrim($hCl98, '/'); } goto dzHXl; dzHXl: if (PathUtil::isPublicNetPath($hCl98)) { return $hCl98; } goto fShFL; sepL1: } public function repository() { return $this->repository; } protected function multiPartInitToken(array $kKcR8) { goto U1EOk; AmijJ: $YVcIf['uploadMaxSize'] = EnvUtil::env('uploadMaxSize'); goto Bku1g; u4y3w: $Z3orD = $kKcR8['file']; goto OWYgT; OWYgT: ksort($Z3orD, SORT_STRING); goto stFaQ; qK3CN: $DX8tH = self::DATA_CHUNK . '/token/' . $mSCVj . '.php'; goto ge23m; Dhngk: return $Z3orD; goto cuazF; U1EOk: $gAXRi = $kKcR8['category']; goto u4y3w; stFaQ: $YVcIf = array(); goto AmijJ; ge23m: if (file_exists($DX8tH)) { $Z3orD = (include $DX8tH); } else { goto JOXNe; CHqBw: $Z3orD['path'] = strtolower(Str::random(32)) . '.' . $tvaX_; goto Fbn5V; jP7Lz: $Z3orD['hash'] = $mSCVj; goto Xhzuq; JOXNe: $Z3orD['chunkUploaded'] = 0; goto jP7Lz; Xhzuq: $tvaX_ = FileUtil::extension($Z3orD['name']); goto CHqBw; Fbn5V: $Z3orD['fullPath'] = self::DATA_TEMP . '/' . $gAXRi . '/' . $Z3orD['path']; goto RTKzF; RTKzF: } goto Dhngk; Bku1g: $mSCVj = md5(serialize($Z3orD) . ':' . serialize($YVcIf)); goto qK3CN; cuazF: } protected function uploadChunkTokenAndDeleteToken($VzL_6) { goto c9VAr; csM7P: $this->localStorage->delete($DX8tH); goto GrUvu; C3pQY: $DX8tH = self::DATA_CHUNK . '/token/' . $mSCVj . '.php'; goto csM7P; c9VAr: $mSCVj = $VzL_6['hash']; goto C3pQY; GrUvu: } protected function uploadChunkTokenAndUpdateToken($VzL_6) { goto POuP0; jCREg: $this->localStorage->put($DX8tH, '<' . '?php return ' . var_export($VzL_6, true) . ';'); goto mHJUK; POuP0: $mSCVj = $VzL_6['hash']; goto yvTuI; yvTuI: $DX8tH = self::DATA_CHUNK . '/token/' . $mSCVj . '.php'; goto jCREg; mHJUK: } }