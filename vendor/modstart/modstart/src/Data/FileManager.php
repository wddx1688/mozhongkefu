<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Data; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Input; use Illuminate\Support\Str; use ModStart\Admin\Type\UploadType; use ModStart\Core\Assets\AssetsUtil; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Core\Util\ArrayUtil; use ModStart\Core\Util\FileUtil; use ModStart\Core\Util\ImageUtil; use ModStart\Core\Util\PathUtil; use ModStart\Core\Util\TreeUtil; use ModStart\Data\Event\DataUploadedEvent; use ModStart\Data\Event\DataUploadingEvent; use ModStart\Data\Support\FileManagerProvider; use Symfony\Component\HttpFoundation\File\UploadedFile; class FileManager { public static $slowDebug = false; public static function handleUpload($gAXRi, $mH3Yd = null, $uh7wa = null) { goto dcN3A; jVMUf: $gY_Ck = InputPackage::buildFromInput(); goto vBWhC; vBWhC: $CDUjL = $gY_Ck->getTrimString('action', 'upload'); goto z706Q; dcN3A: if (self::$slowDebug) { sleep(10); } goto jVMUf; G09d3: return Response::jsonError('Unknown action'); goto Bbb0A; z706Q: if ($uh7wa) { call_user_func($uh7wa, $CDUjL); } goto F5eB0; F5eB0: switch ($CDUjL) { case 'init': case 'upload': $JJyMj = "{$CDUjL}Execute"; return self::$JJyMj($gY_Ck, $gAXRi, null, null, 0, $mH3Yd); } goto G09d3; Bbb0A: } public static function handle($gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd = null, $uh7wa = null) { goto eA9Wz; P_8pJ: if ($uh7wa) { call_user_func($uh7wa, $CDUjL); } goto ts61c; zHe9s: $gY_Ck = InputPackage::buildFromInput(); goto KLfVc; mf9fo: return Response::jsonError('Unknown action'); goto DXZ4Y; ts61c: switch ($CDUjL) { case 'config': case 'uploadDirect': case 'uploadDirectRaw': case 'categoryEdit': case 'categoryDelete': case 'init': case 'upload': case 'save': case 'saveRaw': case 'fileEdit': case 'fileDelete': case 'uploadAndSaveBase64': case 'list': case 'category': $JJyMj = "{$CDUjL}Execute"; return self::$JJyMj($gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd); } goto mf9fo; eA9Wz: if (self::$slowDebug) { sleep(10); } goto zHe9s; KLfVc: $CDUjL = $gY_Ck->getTrimString('action', 'upload'); goto P_8pJ; DXZ4Y: } private static function configExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { $nx179 = DataManager::uploadConfig($gAXRi); return Response::generateSuccessData($nx179); } private static function fileDeleteExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { goto hULuv; CqYFD: DB::transaction(function () use($iUHLt, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { foreach ($iUHLt as $CeOJi) { goto X1ISG; X1ISG: $bsPnm = ModelUtil::get($mNNZK, array('id' => $CeOJi, 'userId' => $OLPDZ)); goto GXh0Z; nRk_0: ModelUtil::delete($mNNZK, array('id' => $CeOJi, 'userId' => $OLPDZ)); goto JDb3u; GXh0Z: if (empty($bsPnm)) { continue; } goto M2rxY; M2rxY: DataManager::deleteById($bsPnm['dataId'], $mH3Yd); goto nRk_0; JDb3u: } }); goto F4Z4Q; fLnQ6: BizException::throwsIfEmpty('id empty', $iUHLt); goto CqYFD; F4Z4Q: return Response::jsonSuccess(); goto zfh1w; hULuv: $iUHLt = $gY_Ck->getStringSeparatedArray('id'); goto fLnQ6; zfh1w: } private static function fileEditExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { goto aofvM; mb8ZB: $SG_zj = $gY_Ck->getInteger('categoryId'); goto uq4DP; aofvM: $iUHLt = $gY_Ck->getStringSeparatedArray('id'); goto mb8ZB; hJcx2: ModelUtil::model($mNNZK)->whereIn('id', $iUHLt)->where(array('userId' => $OLPDZ))->update(array('uploadCategoryId' => $SG_zj)); goto Zd72S; uq4DP: BizException::throwsIfEmpty('id empty', $iUHLt); goto hJcx2; Zd72S: return Response::jsonSuccess(); goto Y9nN7; Y9nN7: } private static function saveToUser($nx179, $gAXRi, $SG_zj, $mNNZK, $OLPDZ, $EY7Cx = null) { goto EfU15; o1R9m: ModelUtil::insert($mNNZK, $KJMw4); goto Te84N; t08ht: $KJMw4 = array('userId' => $OLPDZ, 'category' => $nx179['category'], 'dataId' => $nx179['id'], 'uploadCategoryId' => $SG_zj); goto XjSpE; Te84N: return Response::generateSuccessData(ArrayUtil::keepKeys($nx179, array('path', 'category', 'size', 'filename'))); goto QChOM; EfU15: if ($gAXRi === 'image') { if (empty($nx179['driver'])) { ImageUtil::limitSizeAndDetectOrientation(AbstractDataStorage::DATA . "/{$gAXRi}/{$nx179['path']}", config('data.upload.image.maxWidth', 9999), config('data.upload.image.maxHeight', 9999)); } } goto t08ht; XjSpE: if (null !== $EY7Cx) { $KJMw4['type'] = $EY7Cx; } goto o1R9m; QChOM: } private static function uploadDirectExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { goto KJK9u; e3kyF: DataUploadedEvent::fire($mNNZK, $OLPDZ, $gAXRi, $nx179['id']); goto H5PHH; H5PHH: return Response::jsonSuccessData($nx179); goto Gd4JA; Rr3ky: if ($nMi2c['code']) { return Response::jsonError($nMi2c['msg']); } goto hPneG; EiHkM: $Z3orD = Input::file('file'); goto AXvvf; E6N3C: $nMi2c = DataManager::upload($gAXRi, $owyBa, $N19iJ, $mH3Yd); goto Rr3ky; KJK9u: DataUploadingEvent::fire($mNNZK, $OLPDZ, $gAXRi); goto EiHkM; Nuj8y: $hiQMu = self::saveToUser($nMi2c['data']['data'], $gAXRi, -1, $mNNZK, $OLPDZ, $EY7Cx); goto nHnRo; nHnRo: if ($hiQMu['code']) { return Response::jsonError($nMi2c['msg']); } goto LCoy0; Y4lFA: $owyBa = $Z3orD->getClientOriginalName(); goto TBGaI; LCoy0: $nx179 = array('id' => $nMi2c['data']['data']['id'], 'path' => $nMi2c['data']['path'], 'fullPath' => $nMi2c['data']['fullPath'], 'filename' => $hiQMu['data']['filename'], 'data' => $hiQMu['data']); goto EWnPO; TBGaI: $N19iJ = file_get_contents($Z3orD->getRealPath()); goto E6N3C; hPneG: $EY7Cx = null; goto n3ip6; n3ip6: if (in_array($mNNZK, array('member_upload'))) { $EY7Cx = UploadType::USER; } goto Nuj8y; AXvvf: if (empty($Z3orD)) { return Response::jsonError('file empty'); } goto Y4lFA; EWnPO: if (Input::get('fullPath', false)) { $nx179['fullPath'] = PathUtil::fixFull($nx179['fullPath']); } goto e3kyF; Gd4JA: } private static function uploadDirectRawExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { goto U5Ebu; L44xb: $hiQMu = self::saveToUser($nMi2c['data']['data'], $gAXRi, -1, $mNNZK, $OLPDZ, $EY7Cx); goto RpIyp; w4wAQ: $owyBa = $Z3orD->getClientOriginalName(); goto UoNzD; RpIyp: if ($hiQMu['code']) { return Response::jsonError($nMi2c['msg']); } goto OUg4D; V4Abg: return Response::jsonSuccessData(array('path' => $nMi2c['data']['path'], 'fullPath' => $nMi2c['data']['fullPath'], 'filename' => $nMi2c['data']['data']['filename'], 'data' => $nMi2c['data']['data'])); goto dWaXJ; i88BE: if (in_array($mNNZK, array('member_upload'))) { $EY7Cx = UploadType::SYSTEM; } goto L44xb; o0MIk: if (empty($Z3orD)) { return Response::jsonError('file empty'); } goto w4wAQ; UoNzD: $N19iJ = file_get_contents($Z3orD->getRealPath()); goto MiCst; xOQQ_: $Z3orD = Input::file('file'); goto o0MIk; J3_eX: $EY7Cx = null; goto i88BE; MiCst: $nMi2c = DataManager::upload($gAXRi, $owyBa, $N19iJ, $mH3Yd); goto Mopko; U5Ebu: DataUploadingEvent::fire($mNNZK, $OLPDZ, $gAXRi); goto xOQQ_; OUg4D: DataUploadedEvent::fire($mNNZK, $OLPDZ, $gAXRi, $nMi2c['data']['data']['id']); goto V4Abg; Mopko: if ($nMi2c['code']) { return Response::jsonError($nMi2c['msg']); } goto J3_eX; dWaXJ: } private static function uploadAndSaveBase64Execute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { goto NRCcf; NRCcf: DataUploadingEvent::fire($mNNZK, $OLPDZ, $gAXRi); goto c0FLv; XBQjT: $N19iJ = $gY_Ck->getBase64Image('data'); goto s2ESI; AWUa6: return Response::jsonSuccessData(array('path' => $nMi2c['data']['path'], 'fullPath' => $nMi2c['data']['fullPath'], 'filename' => $hiQMu['data']['filename'], 'data' => $hiQMu['data'])); goto qLKvo; VVoOD: DataUploadedEvent::fire($mNNZK, $OLPDZ, $gAXRi, $nMi2c['data']['data']['id']); goto AWUa6; Y1JqV: if (in_array($mNNZK, array('member_upload'))) { $EY7Cx = UploadType::USER; } goto S1PD0; aqiFZ: $owyBa = $gY_Ck->getTrimString('filename'); goto XBQjT; Pf4WF: if ($hiQMu['code']) { return Response::jsonError($nMi2c['msg']); } goto VVoOD; s2ESI: $nMi2c = DataManager::upload($gAXRi, $owyBa, $N19iJ, $mH3Yd); goto yF98b; Y1NV4: $EY7Cx = null; goto Y1JqV; c0FLv: $gY_Ck = InputPackage::buildFromInput(); goto aqiFZ; S1PD0: $hiQMu = self::saveToUser($nMi2c['data']['data'], $gAXRi, -1, $mNNZK, $OLPDZ, $EY7Cx); goto Pf4WF; yF98b: if ($nMi2c['code']) { return Response::jsonError($nMi2c['msg']); } goto Y1NV4; qLKvo: } private static function saveExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { goto Ixh_t; kTXiL: $nx179 = $nMi2c['data']['data']; goto VtCOE; zZYDZ: $SG_zj = $gY_Ck->getInteger('categoryId', -1); goto P5un6; ZtqTt: $hCl98 = $gY_Ck->getTrimString('path'); goto zZYDZ; NOTlK: return Response::jsonSuccessData(array('data' => ArrayUtil::keepKeys($nx179, array('path', 'category', 'size', 'filename')), 'fullPath' => $nMi2c['data']['fullPath'])); goto m63Zf; X6Y5E: $hiQMu = self::saveToUser($nx179, $gAXRi, $SG_zj, $mNNZK, $OLPDZ, $EY7Cx); goto paAWC; P5un6: BizException::throwsIfEmpty('path empty', $hCl98); goto A8fbD; Ixh_t: DataUploadingEvent::fire($mNNZK, $OLPDZ, $gAXRi); goto ZtqTt; paAWC: if ($hiQMu['code']) { return Response::jsonError($nMi2c['msg']); } goto RmvRq; VtCOE: $EY7Cx = null; goto s4VFO; fFJBq: if ($nMi2c['code']) { return Response::jsonError($nMi2c['msg']); } goto kTXiL; s4VFO: if (in_array($mNNZK, array('member_upload'))) { $EY7Cx = UploadType::USER; } goto X6Y5E; A8fbD: $nMi2c = DataManager::storeTempDataByPath($hCl98, $mH3Yd); goto fFJBq; RmvRq: DataUploadedEvent::fire($mNNZK, $OLPDZ, $gAXRi, $nMi2c['data']['data']['id']); goto NOTlK; m63Zf: } private static function saveRawExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { goto rWYHQ; RJInK: $nx179 = $nMi2c['data']['data']; goto rAXRd; PAfLs: $SG_zj = max($gY_Ck->getInteger('categoryId'), 0); goto t12CA; vNM6E: $hCl98 = $gY_Ck->getTrimString('path'); goto PAfLs; sW0OF: if ($nMi2c['code']) { return Response::jsonError($nMi2c['msg']); } goto RJInK; uu0Za: if ($hiQMu['code']) { return Response::jsonError($nMi2c['msg']); } goto ZPb71; M1qs8: return Response::jsonSuccessData(array('data' => ArrayUtil::keepKeys($nx179, array('path', 'category', 'size', 'filename')), 'fullPath' => $nMi2c['data']['fullPath'])); goto BUQke; Lr8ax: if (in_array($mNNZK, array('member_upload'))) { $EY7Cx = UploadType::SYSTEM; } goto YOHnV; ZPb71: DataUploadedEvent::fire($mNNZK, $OLPDZ, $gAXRi, $nMi2c['data']['data']['id']); goto M1qs8; rWYHQ: DataUploadingEvent::fire($mNNZK, $OLPDZ, $gAXRi); goto vNM6E; YOHnV: $hiQMu = self::saveToUser($nx179, $gAXRi, $SG_zj, $mNNZK, $OLPDZ, $EY7Cx); goto uu0Za; t12CA: BizException::throwsIfEmpty('path empty', $hCl98); goto rGsc1; rGsc1: $nMi2c = DataManager::storeTempDataByPath($hCl98, $mH3Yd); goto sW0OF; rAXRd: $EY7Cx = null; goto Lr8ax; BUQke: } private static function initExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { DataUploadingEvent::fire($mNNZK, $OLPDZ, $gAXRi); return DataManager::uploadHandle($gAXRi, Input::all(), array('userId' => $OLPDZ), $mH3Yd); } private static function uploadExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { DataUploadingEvent::fire($mNNZK, $OLPDZ, $gAXRi); return DataManager::uploadHandle($gAXRi, Input::all(), array('userId' => $OLPDZ), $mH3Yd); } private static function listExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { goto psooe; WXTwV: $SG_zj = $gY_Ck->getTrimString('categoryId'); goto rNuAW; rNuAW: if (Str::startsWith($SG_zj, ':')) { goto LDJtq; QpEyK: $xqqfG = FileManagerProvider::getByName($YkA9c[1]); goto TeizE; LDJtq: $YkA9c = explode(':', $SG_zj); goto NFjq_; NFjq_: BizException::throwsIf('Unsupported category id', count($YkA9c) < 2); goto QpEyK; XrELh: $SG_zj = isset($YkA9c[2]) ? trim($YkA9c[2]) : null; goto zUjCB; TeizE: BizException::throwsIfEmpty('provider not found', $xqqfG); goto XrELh; zUjCB: return $xqqfG->listExecute($gAXRi, $SG_zj, array('uploadTable' => $mNNZK, 'uploadCategoryTable' => $gJcm5, 'userId' => $OLPDZ, 'option' => $mH3Yd)); goto BBr5y; BBr5y: } goto ekHxM; XoiG8: ModelUtil::join($LHFyR['records'], 'dataId', '_data', 'data', 'id'); goto jYtMF; zN7RP: $mH3Yd = array(); goto Q91k6; v5G_A: $LHFyR = ModelUtil::paginate($mNNZK, $mZ5xK, $qp8x7, $mH3Yd); goto XoiG8; cK4qB: foreach ($LHFyR['records'] as $jdXuk) { goto bTTkw; XN3qs: $nQYo_[] = $DUr2V; goto IcYAd; a5hY5: $DUr2V['filename'] = htmlspecialchars($jdXuk['_data']['filename']); goto u4iCP; u4iCP: $DUr2V['type'] = FileUtil::extension($jdXuk['_data']['path']); goto W04C2; qmPuv: if (!empty($jdXuk['_data']['domain'])) { $DUr2V['path'] = $jdXuk['_data']['domain'] . $DUr2V['path']; } goto AHhWj; W04C2: $DUr2V['category'] = $gAXRi; goto XN3qs; AHhWj: $DUr2V['fullPath'] = AssetsUtil::fixFull($DUr2V['path'], false); goto a5hY5; Ru048: $DUr2V['path'] = config('data.baseUrl', '/') . AbstractDataStorage::DATA . '/' . $jdXuk['_data']['category'] . '/' . $jdXuk['_data']['path']; goto qmPuv; icw82: $DUr2V['id'] = $jdXuk['id']; goto Ru048; bTTkw: $DUr2V = array(); goto icw82; IcYAd: } goto yuKWn; WDfMU: if (in_array($mNNZK, array('member_upload'))) { $mH3Yd['where']['type'] = UploadType::USER; } goto ktBeL; ekHxM: $SG_zj = intval($SG_zj); goto zN7RP; yuKWn: return Response::generateSuccessPaginateData($mZ5xK, $qp8x7, $nQYo_, $LHFyR['total']); goto ST9LY; jYtMF: $nQYo_ = array(); goto cK4qB; ktBeL: if ($SG_zj > 0) { goto qd1rw; MFoVO: $ol2fp[] = $SG_zj; goto SIHcZ; SIHcZ: $mH3Yd['whereIn'] = array('uploadCategoryId', $ol2fp); goto mpEj1; MyBYG: $ol2fp = TreeUtil::nodesChildrenIds($y1F6S, $SG_zj); goto MFoVO; qd1rw: $y1F6S = ModelUtil::all($gJcm5, array('userId' => $OLPDZ)); goto MyBYG; mpEj1: } else { if ($SG_zj == 0) { $mH3Yd['whereOperate'] = array('uploadCategoryId', '>=', 0); } else { if ($SG_zj == -1) { $mH3Yd['where']['uploadCategoryId'] = -1; } } } goto v5G_A; psooe: $mZ5xK = $gY_Ck->getPage(); goto xQiB2; t_DHS: $mH3Yd['where'] = array('userId' => $OLPDZ, 'category' => $gAXRi); goto WDfMU; Q91k6: $mH3Yd['order'] = array('id', 'desc'); goto t_DHS; xQiB2: $qp8x7 = $gY_Ck->getPageSize(null, null, null, 24); goto WXTwV; ST9LY: } private static function categoryDeleteExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { goto IsxXZ; NFwgJ: $ol2fp = TreeUtil::nodesChildrenIds($y1F6S, $CeOJi); goto W0t6t; k9KCm: return Response::jsonSuccess(); goto MTTty; tqDc5: BizException::throwsIfEmpty(L('Category not exists'), $gAXRi); goto PIMHi; nuqPE: $gAXRi = ModelUtil::get($gJcm5, array('id' => $CeOJi, 'userId' => $OLPDZ)); goto tqDc5; cXjZK: foreach ($ol2fp as $dgUDr) { ModelUtil::delete($gJcm5, array('userId' => $OLPDZ, 'id' => $dgUDr)); } goto k9KCm; L2xe2: foreach ($ol2fp as $dgUDr) { ModelUtil::update($mNNZK, array('userId' => $OLPDZ, 'uploadCategoryId' => $dgUDr), array('uploadCategoryId' => 0)); } goto cXjZK; IsxXZ: $CeOJi = $gY_Ck->getInteger('id'); goto nuqPE; W0t6t: $ol2fp[] = $CeOJi; goto L2xe2; PIMHi: $y1F6S = ModelUtil::all($gJcm5, array('userId' => $OLPDZ)); goto NFwgJ; MTTty: } private static function categoryEditExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { goto Idynj; MqxkJ: if ($CeOJi) { goto PNBoQ; G8WEB: BizException::throwsIfEmpty(L('Category not exists'), $gAXRi); goto ERI7v; PNBoQ: $gAXRi = ModelUtil::get($gJcm5, array('id' => $CeOJi, 'userId' => $OLPDZ)); goto G8WEB; ERI7v: BizException::throwsIf(L('Category cannot changed'), !TreeUtil::modelNodeChangeAble($gJcm5, $CeOJi, $gAXRi['pid'], $tloGv)); goto YxkE6; YxkE6: ModelUtil::update($gJcm5, array('id' => $CeOJi, 'userId' => $OLPDZ), array('pid' => $tloGv, 'sort' => null, 'title' => $iqgWB)); goto XLdUt; XLdUt: } else { ModelUtil::insert($gJcm5, array('userId' => $OLPDZ, 'category' => $gAXRi, 'pid' => $tloGv, 'sort' => null, 'title' => $iqgWB)); } goto pXOMd; Idynj: $CeOJi = $gY_Ck->getInteger('id'); goto i0569; i0569: $tloGv = $gY_Ck->getInteger('pid'); goto ufqbC; ufqbC: $iqgWB = $gY_Ck->getTrimString('title'); goto dL2cu; pXOMd: return Response::jsonSuccess(); goto W61rw; dL2cu: BizException::throwsIfEmpty(L('Title required'), $iqgWB); goto MqxkJ; W61rw: } private static function categoryExecute(InputPackage $gY_Ck, $gAXRi, $mNNZK, $gJcm5, $OLPDZ, $mH3Yd) { goto gW1MI; e3kFX: foreach ($y1F6S as $WdyB0) { $Cz604[] = array('name' => $WdyB0['title'], 'id' => $WdyB0['id'], 'pid' => $WdyB0['pid'], 'sort' => $WdyB0['sort']); } goto G2DVm; G2DVm: $Y_RQx = TreeUtil::nodesToTree($Cz604); goto x89Dz; GtCkx: return Response::jsonSuccessData(array('categoryTreeParent' => $es11D, 'categoryListParent' => $RpsEh, 'categoryTreeAll' => $QU02s, 'categoryListAll' => $xiXJf, 'categories' => $Cz604)); goto XbvMe; sq2wl: foreach (FileManagerProvider::listAll() as $xqqfG) { $Y_RQx = $xqqfG->getCategoryTree($gAXRi, array('uploadTable' => $mNNZK, 'uploadCategoryTable' => $gJcm5, 'userId' => $OLPDZ, 'option' => $mH3Yd)); if (!empty($Y_RQx)) { $QU02s[] = $Y_RQx; } } goto tnKGb; gW1MI: $y1F6S = ModelUtil::all($gJcm5, array('userId' => $OLPDZ, 'category' => $gAXRi)); goto s2VyA; ntnhd: $xiXJf = TreeUtil::treeToListWithIndent($QU02s, 'id', 'name'); goto GtCkx; s2VyA: $Cz604 = array(); goto e3kFX; tnKGb: $RpsEh = TreeUtil::treeToListWithIndent($es11D, 'id', 'name'); goto ntnhd; x89Dz: $es11D = array(array('name' => L(ucfirst($gAXRi) . ' Gallery'), '_child' => $Y_RQx, 'id' => 0)); goto d3K3A; d3K3A: $QU02s = array(array('name' => L(ucfirst($gAXRi) . ' Gallery'), '_child' => $Y_RQx, 'id' => 0), array('name' => L('Unclassified'), '_child' => array(), 'id' => -1)); goto sq2wl; XbvMe: } }