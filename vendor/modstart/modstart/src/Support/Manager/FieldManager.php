<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace ModStart\Support\Manager; use ModStart\Core\Util\SerializeUtil; use ModStart\Field\AbstractField; use ModStart\Support\Concern\HasFields; class FieldManager { private static $availableFields = array(); private static $collectedAssets = array(); private static $uses = array(); public static function uses($iCXib) { if (is_array($iCXib)) { foreach ($iCXib as $br4ul) { self::$uses[$br4ul] = true; } } else { self::$uses[$iCXib] = true; } } public static function registerBuiltinFields() { $bx4aO = array('adminUser' => \ModStart\Field\AdminUser::class, 'areaChina' => \ModStart\Field\AreaChina::class, 'audio' => \ModStart\Field\Audio::class, 'button' => \ModStart\Field\Button::class, 'captcha' => \ModStart\Field\Captcha::class, 'cascadeGroup' => \ModStart\Field\CascadeGroup::class, 'checkbox' => \ModStart\Field\Checkbox::class, 'code' => \ModStart\Field\Code::class, 'color' => \ModStart\Field\Color::class, 'complexFields' => \ModStart\Field\ComplexFields::class, 'complexFieldsList' => \ModStart\Field\ComplexFieldsList::class, 'currency' => \ModStart\Field\Currency::class, 'custom' => \ModStart\Field\Custom::class, 'customField' => \ModStart\Field\CustomField::class, 'date' => \ModStart\Field\Date::class, 'datetime' => \ModStart\Field\Datetime::class, 'decimal' => \ModStart\Field\Decimal::class, 'display' => \ModStart\Field\Display::class, 'dynamicFields' => \ModStart\Field\DynamicFields::class, 'file' => \ModStart\Field\File::class, 'fileTemp' => \ModStart\Field\FileTemp::class, 'files' => \ModStart\Field\Files::class, 'hidden' => \ModStart\Field\Hidden::class, 'html' => \ModStart\Field\Html::class, 'icon' => \ModStart\Field\Icon::class, 'id' => \ModStart\Field\Id::class, 'image' => \ModStart\Field\Image::class, 'images' => \ModStart\Field\Images::class, 'imagesTemp' => \ModStart\Field\ImagesTemp::class, 'json' => \ModStart\Field\Json::class, 'jsonIdItems' => \ModStart\Field\JsonIdItems::class, 'jsonKeyValue' => \ModStart\Field\JsonKeyValue::class, 'keyValueList' => \ModStart\Field\KeyValueList::class, 'link' => \ModStart\Field\Link::class, 'manyRelation' => \ModStart\Field\ManyRelation::class, 'markdown' => \ModStart\Field\Markdown::class, 'number' => \ModStart\Field\Number::class, 'password' => \ModStart\Field\Password::class, 'percent' => \ModStart\Field\Percent::class, 'period' => \ModStart\Field\Period::class, 'radio' => \ModStart\Field\Radio::class, 'rate' => \ModStart\Field\Rate::class, 'raw' => \ModStart\Field\Raw::class, 'richHtml' => \ModStart\Field\RichHtml::class, 'select' => \ModStart\Field\Select::class, 'selectRemote' => \ModStart\Field\SelectRemote::class, 'switch' => \ModStart\Field\SwitchField::class, 'tags' => \ModStart\Field\Tags::class, 'text' => \ModStart\Field\Text::class, 'textarea' => \ModStart\Field\Textarea::class, 'time' => \ModStart\Field\Time::class, 'tree' => \ModStart\Field\Tree::class, 'type' => \ModStart\Field\Type::class, 'values' => \ModStart\Field\Values::class, 'video' => \ModStart\Field\Video::class, 'layoutGrid' => \ModStart\Layout\LayoutGrid::class, 'layoutTable' => \ModStart\Layout\LayoutTable::class, 'layoutTab' => \ModStart\Layout\LayoutTab::class, 'layoutPanel' => \ModStart\Layout\LayoutPanel::class, 'layoutLine' => \ModStart\Layout\LayoutLine::class, 'layoutSeparator' => \ModStart\Layout\LayoutSeparator::class, 'layoutHtml' => \ModStart\Layout\LayoutHtml::class); foreach ($bx4aO as $jMNuB => $cVwn0) { FieldManager::extend($jMNuB, $cVwn0); } } public static function collectFieldAssets($EY7Cx = 'js|css|script|style') { goto ciSQ2; U15YW: $n95LX = collect(); goto aE_Hg; K3GU_: if (isset(static::$collectedAssets[$EY7Cx])) { return static::$collectedAssets[$EY7Cx]; } goto U15YW; ciSQ2: if (!in_array($EY7Cx, array('js', 'css', 'script', 'style'))) { return array(); } goto K3GU_; aE_Hg: foreach (static::$availableFields as $HQ4FM => $dBa7F) { goto umfzX; tO9pN: $n95LX->push(array_get(call_user_func(array($dBa7F, 'getAssets')), $EY7Cx)); goto D3wt0; kp4Nd: if (!method_exists($dBa7F, 'getAssets')) { continue; } goto tO9pN; umfzX: if (!isset(self::$uses[$dBa7F])) { continue; } goto kp4Nd; D3wt0: } goto xjmSA; oO_03: return static::$collectedAssets[$EY7Cx]; goto fYqwc; xjmSA: static::$collectedAssets[$EY7Cx] = $n95LX->flatten()->unique()->filter()->toArray(); goto oO_03; fYqwc: } public static function extend($dBa7F, $cVwn0) { static::$availableFields[$dBa7F] = $cVwn0; } public static function findFieldClass($lrQvV) { goto CW0oJ; L1Bz1: return false; goto FrRYw; lUcJO: if (class_exists($cVwn0)) { return $cVwn0; } goto L1Bz1; CW0oJ: $cVwn0 = array_get(static::$availableFields, $lrQvV); goto lUcJO; FrRYw: } public static function make($bzZJF, $BC2Wv, $NS5_3, ...$wnXyT) { goto LiIQz; BMFAK: $MwNmy = new $bQxSo($NS5_3, $wnXyT); goto EEq8j; EEq8j: $MwNmy->renderMode($bzZJF->fieldDefaultRenderMode()); goto wmdA5; Iu3rZ: return $MwNmy; goto Afnme; LiIQz: $bQxSo = static::findFieldClass($BC2Wv); goto BMFAK; wmdA5: $MwNmy->context($bzZJF); goto Iu3rZ; Afnme: } public static function call($bzZJF, $lrQvV, $wnXyT) { if ($bQxSo = static::findFieldClass($lrQvV)) { goto oMJ7T; RWNZo: $bzZJF->pushField($MwNmy); goto H6xBL; oMJ7T: $NS5_3 = array_get($wnXyT, 0, ''); goto TKxHZ; ejguF: $MwNmy->renderMode($bzZJF->fieldDefaultRenderMode()); goto ZIQBx; TKxHZ: $MwNmy = new $bQxSo($NS5_3, array_slice($wnXyT, 1)); goto ejguF; u72Ok: return $MwNmy; goto XaJMZ; H6xBL: $MwNmy->postSetup(); goto u72Ok; ZIQBx: $MwNmy->context($bzZJF); goto RWNZo; XaJMZ: } throw new \Exception('Field [' . ucfirst($lrQvV) . '] not exists or registered, available: ' . SerializeUtil::jsonEncode(array_keys(static::$availableFields))); } }