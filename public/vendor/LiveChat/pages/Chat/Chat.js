import{ImServer,ImServerConstant}from"../../../../../../ImServer/resources/asset/src/lib/im-server";import{FingerPrint}from"@ModStartAsset/svue/lib/fingerprint";import{EventBus}from"@ModStartAsset/svue/lib/event-bus";import{ImChatType,ImRequestType,ImServiceRequestStatus,ImTalkType}from"../../../../../../ImServer/resources/asset/src/lib/constant";import{ChatUtil}from"../../lib/chat-util";const $=require("jquery"),Chat=function(t,i){this.setting=$.extend({client:null,uid:null,channel:null,param:null},t),this.setSetting=(t,e)=>(this.setting[t]=e,this),this.imServer=new ImServer,this.imServer.addTalkListener(function(t){t.chatType===ImChatType.SERVICE.value&&t.toId===i.$store.state.chat.setting.serviceId&&(i.$store.commit("CHAT_APPEND_MESSAGE_RECORD",t),ChatUtil.scrollChatMessagesToBottom())}),this.imServer.onConnectChange(t=>{i.$store.commit("CHAT_SET_SETTING",{connectionStatus:t})}),this.sendTalk=(t,e)=>{this.imServer.sendTalk({toId:i.$store.state.chat.setting.serviceId,...t},e)},this.init=e=>{FingerPrint.get("__live_chat_chat_uid__",t=>{this.setSetting("uid",t),i.$api.post("init",{channel:this.setting.channel,param:this.setting.param,uid:this.setting.uid},t=>{EventBus.$emit("UpdateApp"),i.$store.commit("CHAT_SET_SETTING",t.data),this.imServer.connect({token:t.data.token,onSuccess:()=>{this.imServer.request(ImRequestType.ServiceRequest,{serviceId:i.$store.state.chat.setting.serviceId},t=>{i.$store.commit("CHAT_SET_MESSAGE_STATUS",t.status),e&&e()})},onError:t=>{i.$dialog.tipError(t)}})})})}};export{Chat};