<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Tecmz\Admin\Controller; use App\Constant\AppConstant; use Chumper\Zipper\Zipper; use Illuminate\Routing\Controller; use Illuminate\Support\Facades\Artisan; use ModStart\Admin\Auth\AdminPermission; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Request; use ModStart\Core\Input\Response; use ModStart\Core\Util\FileUtil; use ModStart\Data\DataManager; use Module\Tecmz\Util\UpgradeUtil; class UpgradeController extends Controller { public static $PermitMethodMap = array('index' => '@SystemUpgrade', 'info' => '@SystemUpgrade', 'manual' => '@SystemUpgrade'); private function doFinish($WjX62, $KB0mn = null) { return Response::generateSuccessData(array('msg' => array_map(function ($AVLNU) { return '<i class="iconfont icon-hr"></i> ' . $AVLNU; }, $WjX62), 'logs' => $KB0mn, 'finish' => true)); } private function doNext($W9SYw, $WjX62 = array(), $XWlC_ = array()) { goto KsWx1; ivRz2: $XWlC_ = array_merge($ErQts->getJsonAsInput('data')->all(), $XWlC_); goto wAC7t; wAC7t: return Response::generateSuccessData(array('msg' => array_map(function ($AVLNU) { if (!starts_with($AVLNU, '<')) { $AVLNU = "<span class='ub-text-white'>{$AVLNU}</span>"; } return '<i class="iconfont icon-hr"></i> ' . $AVLNU; }, $WjX62), 'step' => $W9SYw, 'data' => $XWlC_, 'finish' => false)); goto RbGfY; KsWx1: $ErQts = InputPackage::buildFromInput(); goto ivRz2; RbGfY: } public function index() { goto UNeNq; OGmtF: return view('module::Tecmz.View.admin.upgrade'); goto MDDiq; UNeNq: if (config('modstart.admin.upgradeDisable', false)) { return Response::sendError('系统升级功能已关闭'); } goto izZ4r; izZ4r: if (Request::isPost()) { goto UBLYj; Dg94j: BizException::throwsIfEmpty('toVersion为空', $n0I6W); goto lLaU_; UBLYj: AdminPermission::demoCheck(); goto HMstm; HMstm: $ErQts = InputPackage::buildFromInput(); goto wjcNV; Fabha: $dvCKi = $ErQts->getJsonAsInput('data'); goto Gxa9K; Gxa9K: $n0I6W = $dvCKi->getTrimString('toVersion'); goto Dg94j; wjcNV: $W9SYw = $ErQts->getTrimString('step'); goto sD6mn; sD6mn: $qtbsi = $ErQts->getTrimString('token'); goto Fabha; lLaU_: switch ($W9SYw) { case 'upgradePackage': goto kMXXx; vZrW6: $FZUh3 = UpgradeUtil::upgradePackage($WJlDi, $svc7f); goto aH83x; f1wkX: BizException::throwsIfEmpty('diffContentFile为空', $svc7f); goto vZrW6; lOYpy: BizException::throwsIfEmpty('package为空', $WJlDi); goto f1wkX; kMXXx: $WJlDi = $dvCKi->getTrimString('package'); goto qCQ25; DQVhr: return $this->doFinish(array('<span class="ub-text-success">升级完成，请 <a href="javascript:;" onclick="window.location.reload()">刷新后台</a> 查看最新系统</span>'), $FZUh3['data']['logs']); goto XS2cT; qCQ25: $svc7f = $dvCKi->getTrimString('diffContentFile'); goto lOYpy; aH83x: BizException::throwsIfResponseError($FZUh3); goto DQVhr; XS2cT: case 'downloadPackage': goto gqZvK; la6lC: BizException::throwsIfResponseError($FZUh3); goto jmr2z; gqZvK: $FZUh3 = UpgradeUtil::downloadPackage($qtbsi, AppConstant::APP, AppConstant::VERSION, $n0I6W); goto la6lC; jmr2z: return $this->doNext('upgradePackage', array('<span class="ub-text-success">获取安装包完成，大小 ' . FileUtil::formatByte($FZUh3['data']['packageSize']) . '</span>', '<span class="ub-text-white">开始解压升级装包...</span>'), array('package' => $FZUh3['data']['package'], 'diffContentFile' => $FZUh3['data']['diffContentFile'])); goto We8v4; We8v4: case 'checkPackage': goto TQESK; ndqhS: BizException::throwsIf('调用 php artisan migrate 命令失败，不能自动升级', 0 != $sZrkl); goto UebyZ; YzSzf: break; goto k1EEf; UebyZ: return $this->doNext('downloadPackage', array('PHP版本: v' . PHP_VERSION, '<span class="ub-text-success">预检通过</span>', '<span class="ub-text-white">开始下载升级包...</span>')); goto YzSzf; TQESK: try { $sZrkl = Artisan::call('migrate'); } catch (\Exception $VPhVw) { $sZrkl = -1; } goto ndqhS; k1EEf: default: return $this->doNext('checkPackage', array('<span class="ub-text-success">开始升级系统，从 V' . AppConstant::VERSION . ' 到 V' . $n0I6W . '</span>', '<span class="ub-text-white">开始预检系统...</span>')); } goto i2Ewu; i2Ewu: } goto OGmtF; MDDiq: } public function info() { $Do0xr = UpgradeUtil::latest(); return Response::generateSuccessData(array('version' => AppConstant::VERSION, 'latestVersion' => $Do0xr['latestVersion'], 'autoUpgrade' => $Do0xr['autoUpgrade'])); } public function manual() { goto vwv5I; MrJej: if (Request::isPost()) { goto ZwkUS; SGr_l: $bIk32 = FileUtil::generateLocalTempPath('zip'); goto h3LVb; UmYWF: return Response::generate(0, '操作完成', null, '[reload]'); goto hl7rU; S8ZHr: BizException::throwsIfResponseError($FZUh3); goto H1nnE; ZwkUS: try { $sZrkl = Artisan::call('migrate'); } catch (\Exception $VPhVw) { $sZrkl = -1; } goto LZayL; HWIGA: $svc7f = FileUtil::generateLocalTempPath('json'); goto SGr_l; dxA0O: FileUtil::safeCleanLocalTemp($zYhfx); goto MhUrD; cY0A5: BizException::throwsIf('升级包格式错误', !$c8yQj->contains('package.zip')); goto NWN2c; MhUrD: FileUtil::safeCleanLocalTemp($bIk32); goto ht3Oi; ht3Oi: FileUtil::safeCleanLocalTemp($svc7f); goto UmYWF; KYBaz: file_put_contents($bIk32, $YRnDK); goto yBzE1; H1nnE: $zYhfx = $FZUh3['data']['path']; goto HWIGA; Zwy7I: BizException::throwsIfEmpty('请上传差量升级包', $eXxSs); goto SKlqG; zrruI: $eXxSs = $ErQts->getDataTempPath('upgradeZip'); goto Zwy7I; h3LVb: $c8yQj = new Zipper(); goto sn9Zp; LZayL: BizException::throwsIf('调用 php artisan migrate 命令失败，不能自动升级', 0 != $sZrkl); goto jx2Bk; ePgKv: BizException::throwsIf('升级包格式错误', !$c8yQj->contains('config.json')); goto fFZke; yBzE1: $FZUh3 = UpgradeUtil::upgradePackage($bIk32, $svc7f); goto E92GT; SKlqG: $FZUh3 = DataManager::preparePathForLocal($eXxSs); goto S8ZHr; sn9Zp: $c8yQj->make($zYhfx); goto ePgKv; jx2Bk: $ErQts = InputPackage::buildFromInput(); goto zrruI; NWN2c: $YRnDK = $c8yQj->getFileContent('package.zip'); goto KYBaz; E_Ndd: file_put_contents($svc7f, $I9lb3); goto cY0A5; fFZke: $I9lb3 = $c8yQj->getFileContent('config.json'); goto E_Ndd; E92GT: BizException::throwsIfResponseError($FZUh3); goto dxA0O; hl7rU: } goto bGLzh; bGLzh: return view('module::Tecmz.View.admin.upgradeManual'); goto TyEy0; vwv5I: if (config('modstart.admin.upgradeDisable', false)) { return Response::sendError('系统升级功能已关闭'); } goto MrJej; TyEy0: } }