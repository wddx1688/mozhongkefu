<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\ImServer\Core\Model; use Carbon\Carbon; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Util\ArrayUtil; use Module\ImServer\Core\Repository\UnreadMsgRepository; use Module\ImServer\Type\ImChatType; use Module\ImServer\Type\ImServiceStatus; class ServiceModel { public static function get($FWfay) { return ModelUtil::get('im_service', $FWfay); } public static function getUser($FWfay, $qzstR) { return ModelUtil::get('im_service_user', array('serviceId' => $FWfay, 'userId' => $qzstR)); } public static function listUsers($FWfay) { return ModelUtil::all('im_service_user', array('serviceId' => $FWfay)); } public static function getMine($FWfay, $qzstR) { return ModelUtil::get('im_service', array('id' => $FWfay, 'creatorUserId' => $qzstR)); } public static function listServiceIds($qzstR) { return ModelUtil::values('im_service_user', 'serviceId', array('userId' => $qzstR)); } public static function create($qzstR, $rfBQu, $Zq_fa = array()) { goto lT5av; DZFHU: $FhRrv = ModelUtil::get('im_service', $VSP7l); goto LmJRH; Tv9VX: if ($FhRrv['status'] == ImServiceStatus::PROCESSED) { ModelUtil::update('im_service', $FhRrv['id'], array('status' => ImServiceStatus::CREATED)); $FhRrv['status'] = ImServiceStatus::CREATED; } goto DPgJV; LmJRH: if (empty($FhRrv)) { $FhRrv = ModelUtil::insert('im_service', array_merge($Zq_fa, $VSP7l, array('status' => ImServiceStatus::CREATED, 'serviceUserId' => 0, 'updateTime' => Carbon::now()))); ModelUtil::insert('im_service_user', array('serviceId' => $FhRrv['id'], 'userId' => $qzstR)); } goto Tv9VX; lT5av: $VSP7l = array('creatorUserId' => $qzstR, 'name' => $rfBQu); goto DZFHU; DPgJV: return $FhRrv; goto vD528; vD528: } public static function addUserIfMissing($FWfay, $qzstR) { $t9mtn = self::getUser($FWfay, $qzstR); if (empty($t9mtn)) { ModelUtil::insert('im_service_user', array('serviceId' => $FWfay, 'userId' => $qzstR)); } } public static function removeUser($FWfay, $qzstR) { ModelUtil::delete('im_service_user', array('serviceId' => $FWfay, 'userId' => $qzstR)); } public static function paginate($VSP7l, $ZkvUG, $PP9UF, $qzstR = 0) { goto Rra2M; GnCnE: $iZNF2 = ArrayUtil::flatItemsByKey($EnI2D, 'id'); goto GMj1s; JHJ1O: $EnI2D = $NmpUA['records']; goto GnCnE; NKKWj: return array('page' => $ZkvUG, 'pageSize' => $PP9UF, 'total' => $NmpUA['total'], 'records' => $EnI2D); goto ssIYa; Rj2Lm: $cD48i['order'] = array('updateTime', 'desc'); goto cTdBI; dYPLR: $NmpUA = ModelUtil::paginate('im_service', $ZkvUG, $PP9UF, $cD48i); goto JHJ1O; Rra2M: $cD48i = array(); goto Rj2Lm; cTdBI: $cD48i['where'] = $VSP7l; goto dYPLR; GMj1s: if (!empty($iZNF2)) { goto bGCUe; bGCUe: $W2oYF = ModelUtil::allIn('im_service_user', 'serviceId', $iZNF2); goto PqDuR; HQV5y: $swc4I = ArrayUtil::flatItemsByKey($W2oYF, 'userId'); goto n6buN; PqDuR: $ppqYw = array(); goto Rv3x8; n6buN: if (!empty($swc4I)) { goto yeyge; FpvNj: foreach ($EnI2D as $U8G_W => $gghxW) { goto luqnn; luqnn: if ($qzstR > 0) { $EnI2D[$U8G_W]['_unreadTalkCount'] = UnreadMsgRepository::get(ImChatType::SERVICE, $gghxW['id'], $qzstR); } else { $EnI2D[$U8G_W]['_unreadTalkCount'] = 0; } goto DvLAP; DvLAP: $EnI2D[$U8G_W]['_creatorUser'] = isset($EvmEZ[$gghxW['creatorUserId']]) ? $EvmEZ[$gghxW['creatorUserId']] : null; goto jvpUO; jvpUO: $EnI2D[$U8G_W]['_users'] = array(); goto VRleI; VRleI: if (isset($ppqYw[$gghxW['id']])) { foreach ($ppqYw[$gghxW['id']] as $qzstR) { if ($qzstR == $gghxW['creatorUserId'] || !isset($EvmEZ[$qzstR])) { continue; } $EnI2D[$U8G_W]['_users'][] = $EvmEZ[$qzstR]; } } goto Iya62; Iya62: } goto uagHs; Meit9: $EvmEZ = array_build($jo_Nl, function ($U8G_W, $gghxW) { return array($gghxW['id'], $gghxW); }); goto FpvNj; yeyge: $jo_Nl = ModelUtil::allIn('im_user', 'id', $swc4I); goto Meit9; uagHs: } goto stmoc; Rv3x8: foreach ($W2oYF as $zcWCd) { $ppqYw[$zcWCd['serviceId']][] = $zcWCd['userId']; } goto HQV5y; stmoc: } goto NKKWj; ssIYa: } public static function paginateQueue($rfBQu, $ZkvUG, $PP9UF) { return self::paginate(array('name' => $rfBQu, 'status' => ImServiceStatus::QUEUE), $ZkvUG, $PP9UF); } public static function paginateProcessing($rfBQu, $qzstR, $ZkvUG, $PP9UF) { return self::paginate(array('name' => $rfBQu, 'serviceUserId' => $qzstR, 'status' => ImServiceStatus::PROCESSING), $ZkvUG, $PP9UF, $qzstR); } public static function paginateProcessed($rfBQu, $qzstR, $ZkvUG, $PP9UF) { return self::paginate(array('name' => $rfBQu, 'serviceUserId' => $qzstR, 'status' => ImServiceStatus::PROCESSED), $ZkvUG, $PP9UF, $qzstR); } public static function updateStatus($FWfay, $jpbC0) { ModelUtil::update('im_service', $FWfay, array('status' => $jpbC0)); } public static function update($FWfay, $XWlC_) { ModelUtil::update('im_service', $FWfay, $XWlC_); } }