<?php
 namespace GatewayWorker\Lib; use Exception; class Context { public static $local_ip; public static $local_port; public static $client_ip; public static $client_port; public static $client_id; public static $connection_id; public static $old_session; public static function sessionEncode($session_data = '') { if ($session_data !== '') { return serialize($session_data); } return ''; } public static function sessionDecode($session_buffer) { return unserialize($session_buffer); } public static function clear() { self::$local_ip = self::$local_port = self::$client_ip = self::$client_port = self::$client_id = self::$connection_id = self::$old_session = null; } public static function addressToClientId($local_ip, $local_port, $connection_id) { return bin2hex(pack('NnN', $local_ip, $local_port, $connection_id)); } public static function clientIdToAddress($client_id) { if (strlen($client_id) !== 20) { echo new Exception("client_id $client_id is invalid"); return false; } return unpack('Nlocal_ip/nlocal_port/Nconnection_id', pack('H*', $client_id)); } } 