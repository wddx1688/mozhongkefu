<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Member\Api\Controller; use Illuminate\Support\Facades\Input; use Illuminate\Support\Facades\Session; use Illuminate\Support\Str; use ModStart\Core\Exception\BizException; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Core\Util\EventUtil; use ModStart\Core\Util\FileUtil; use ModStart\Core\Util\FormatUtil; use ModStart\Core\Util\TimeUtil; use ModStart\Misc\Captcha\CaptchaFacade; use ModStart\Module\ModuleBaseController; use Module\Member\Auth\MemberUser; use Module\Member\Config\MemberOauth; use Module\Member\Events\MemberUserUpdatedEvent; use Module\Member\Support\MemberLoginCheck; use Module\Member\Util\MemberUtil; use Module\Vendor\Job\MailSendJob; use Module\Vendor\Job\SmsSendJob; use Module\Vendor\Sms\SmsUtil; use Module\Vendor\Support\ResponseCodes; class MemberProfileController extends ModuleBaseController implements MemberLoginCheck { public function nickname() { goto wwd60; wwd60: $ErQts = InputPackage::buildFromInput(); goto tTGot; EPNaF: $FZUh3 = MemberUtil::changeNickname(MemberUser::id(), $qWNT8); goto RY_0N; RY_0N: BizException::throwsIfResponseError($FZUh3); goto tNJmL; tNJmL: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'nickname')); goto fYj_y; OvKyZ: if (!CaptchaFacade::check($ErQts->getTrimString('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '验证码错误'); } goto EPNaF; wxn02: BizException::throwsIfEmpty('昵称为空', $qWNT8); goto OvKyZ; tTGot: $qWNT8 = $ErQts->getTrimString('nickname'); goto wxn02; fYj_y: return Response::generate(0, '修改成功', null, '[reload]'); goto Mv3JB; Mv3JB: } public function password() { goto ZHdeo; MmtQD: return Response::generate(0, '修改成功', null, '[reload]'); goto HjSCD; pqMSu: $N8YJI = $ErQts->getTrimString('passwordOld'); goto Bp75c; Bp75c: $jL14z = $ErQts->getTrimString('passwordNew'); goto M2RrK; ZHdeo: $ErQts = InputPackage::buildFromInput(); goto pqMSu; GWlPc: if (empty($CRCLA['password'])) { $FZUh3 = MemberUtil::changePassword(MemberUser::id(), $jL14z, null, true); } else { $FZUh3 = MemberUtil::changePassword(MemberUser::id(), $jL14z, $N8YJI); } goto c3SDn; M2RrK: $QKE3_ = $ErQts->getTrimString('passwordRepeat'); goto SspRg; AV0WX: $CRCLA = MemberUser::get(); goto GWlPc; SspRg: if ($jL14z != $QKE3_) { return Response::generate(-1, '两次新密码输入不一致'); } goto AV0WX; c3SDn: if ($FZUh3['code']) { return Response::generate(-1, $FZUh3['msg']); } goto OFfge; OFfge: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'password')); goto MmtQD; HjSCD: } public function avatar() { goto Re2y6; Re2y6: $ErQts = InputPackage::buildFromInput(); goto D_Xdb; ReL9D: switch ($ErQts->getTrimString('type')) { case 'cropper': goto Rq80f; s9ihX: $cM3gB = @base64_decode($cM3gB); goto Bro1H; CiP11: if ($FZUh3['code']) { return $FZUh3; } goto eawCX; UFis3: if (Str::startsWith($cM3gB, 'data:image/jpeg;base64,')) { $maL5L = 'jpg'; $cM3gB = substr($cM3gB, strlen('data:image/jpeg;base64,')); } else { if (Str::startsWith($cM3gB, 'data:image/png;base64,')) { $maL5L = 'png'; $cM3gB = substr($cM3gB, strlen('data:image/png;base64,')); } } goto aI306; Rq80f: $maL5L = null; goto UFis3; aI306: if (empty($maL5L)) { return Response::generate(-1, '头像数据为空'); } goto s9ihX; ccUBq: $FZUh3 = MemberUtil::setAvatar(MemberUser::id(), $cM3gB, $maL5L); goto CiP11; Khd66: return Response::generate(0, '保存成功', null, '[reload]'); goto mla6o; Bro1H: if (empty($cM3gB)) { return Response::generate(-1, '头像内容为空'); } goto ccUBq; eawCX: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'avatar')); goto Khd66; mla6o: default: goto TtsFl; stK5M: if ($FZUh3['code']) { return $FZUh3; } goto TGA0Q; O7qjz: if (!in_array($Q80sf, config('data.upload.image.extensions'))) { return Response::generate(-1, '头像格式不合法'); } goto Yxj7n; TGA0Q: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'avatar')); goto PRMbL; NnS4V: if (empty($cM3gB)) { return Response::generate(-1, '读取头像文件失败:-1'); } goto v3u6w; Yxj7n: $cM3gB = FileUtil::safeGetContent($cM3gB); goto gHrzN; v3u6w: $Q80sf = FileUtil::extension($cM3gB); goto O7qjz; gHrzN: if (empty($cM3gB)) { return Response::generate(-1, '读取头像文件失败:-2'); } goto Mzg6t; TtsFl: $cM3gB = FileUtil::savePathToLocalTemp($cM3gB); goto NnS4V; PRMbL: return Response::generate(0, '保存成功', null, '[reload]'); goto C1Aph; Mzg6t: $FZUh3 = MemberUtil::setAvatar(MemberUser::id(), $cM3gB, $Q80sf); goto stK5M; C1Aph: } goto hts1c; D_Xdb: $cM3gB = $ErQts->getTrimString('avatar'); goto YLyBI; YLyBI: if (empty($cM3gB)) { return Response::generate(-1, '头像内容为空'); } goto ReL9D; hts1c: } public function captchaRaw() { return CaptchaFacade::create('default'); } public function captcha() { $iXslQ = $this->captchaRaw(); return Response::generate(0, 'ok', array('image' => 'data:image/png;base64,' . base64_encode($iXslQ->getOriginalContent()))); } public function email() { goto xqFEX; Y10nP: $a1J4s = MemberUtil::getByEmail($PcW1B); goto DIBKc; EtUgU: $PcW1B = $ErQts->getEmail('email'); goto SFS2Z; msZ2w: if (!FormatUtil::isEmail($PcW1B)) { return Response::generate(-1, '邮箱格式不正确'); } goto RRasO; xqFEX: $ErQts = InputPackage::buildFromInput(); goto EtUgU; o3EvG: if ($PcW1B != Session::get('memberProfileEmail')) { return Response::generate(-1, '两次邮箱不一致'); } goto Y10nP; kI0k1: Session::forget('memberProfileEmailVerifyTime'); goto TCAKa; SFS2Z: $yoPP3 = $ErQts->getTrimString('verify'); goto aJ0bu; tX0Sr: Session::forget('memberProfileEmailVerify'); goto kI0k1; RRasO: if (empty($yoPP3)) { return Response::generate(-1, '验证码不能为空'); } goto SoZdA; zvuMn: if (Session::get('memberProfileEmailVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '验证码已过期'); } goto o3EvG; aJ0bu: if (empty($PcW1B)) { return Response::generate(-1, '邮箱不能为空'); } goto msZ2w; DIBKc: if (!empty($a1J4s)) { if ($a1J4s['id'] != MemberUser::id()) { return Response::generate(-1, '该邮箱已被其他账户绑定'); } if ($a1J4s['id'] == MemberUser::id() && $a1J4s['email'] == $PcW1B) { if (!empty($a1J4s['emailVerified'])) { return Response::generate(-1, '邮箱未修改，无需重新绑定。'); } } } goto YLMgf; SoZdA: if ($yoPP3 != Session::get('memberProfileEmailVerify')) { return Response::generate(-1, '验证码不正确'); } goto zvuMn; WUjTX: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'email')); goto tX0Sr; TCAKa: Session::forget('memberProfileEmail'); goto UMGV4; YLMgf: MemberUtil::update(MemberUser::id(), array('emailVerified' => true, 'email' => $PcW1B)); goto WUjTX; UMGV4: return Response::generate(0, '修改成功', null, '[reload]'); goto ajgh3; ajgh3: } public function emailVerify() { goto uOT0_; IJZP2: $a1J4s = MemberUtil::getByEmail($PcW1B); goto mbV2l; DiTdq: if (!FormatUtil::isEmail($PcW1B)) { return Response::generate(-1, '邮箱格式不正确'); } goto d6wiZ; uOT0_: $PcW1B = Input::get('target'); goto Tclmx; O5qlo: MailSendJob::create($PcW1B, '验证码', 'verify', array('code' => $yoPP3)); goto koCIU; Tclmx: if (empty($PcW1B)) { return Response::generate(-1, '邮箱不能为空'); } goto DiTdq; d6wiZ: if (!CaptchaFacade::check(Input::get('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '验证码错误'); } goto IJZP2; YKW_y: Session::put('memberProfileEmail', $PcW1B); goto O5qlo; ostNa: $yoPP3 = rand(100000, 999999); goto YNxCp; mbV2l: if (!empty($a1J4s)) { if ($a1J4s['id'] != MemberUser::id()) { return Response::generate(-1, '该邮箱已被其他账户绑定'); } if ($a1J4s['id'] == MemberUser::id() && $a1J4s['email'] == $PcW1B) { if (!empty($a1J4s['emailVerified'])) { return Response::generate(-1, '邮箱未修改，无需重新绑定。'); } } } goto FfVMx; YNxCp: Session::put('memberProfileEmailVerify', $yoPP3); goto GUwXh; koCIU: return Response::generate(0, '验证码发送成功'); goto UO_TY; FfVMx: if (Session::get('memberProfileEmailVerifyTime') && $PcW1B == Session::get('memberProfileEmail')) { if (Session::get('memberProfileEmailVerifyTime') + 60 * 10 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto ostNa; GUwXh: Session::put('memberProfileEmailVerifyTime', time()); goto YKW_y; UO_TY: } public function phone() { goto AR1N2; RXS56: $a1J4s = MemberUtil::getByPhone($jU6y9); goto xgyK4; hGokP: if ($yoPP3 != Session::get('memberProfilePhoneVerify')) { return Response::generate(-1, '验证码不正确'); } goto Njck2; zmEwE: EventUtil::fire(new MemberUserUpdatedEvent(MemberUser::id(), 'phone')); goto pyWcQ; ObIuB: if (!FormatUtil::isPhone($jU6y9)) { return Response::generate(-1, '手机格式不正确'); } goto z5IYg; pyWcQ: Session::forget('memberProfilePhoneVerify'); goto qDQuB; AR1N2: $ErQts = InputPackage::buildFromInput(); goto Dd1Nu; xgyK4: if (!empty($a1J4s)) { if ($a1J4s['id'] != MemberUser::id()) { return Response::generate(-1, '该手机已被其他账户绑定'); } if ($a1J4s['id'] == MemberUser::id() && $a1J4s['phone'] == $jU6y9) { if (!empty($a1J4s['phoneVerified'])) { return Response::generate(-1, '手机号未修改，无需重新绑定。'); } } } goto mpUwT; Dd1Nu: $jU6y9 = $ErQts->getPhone('phone'); goto xcz_c; r5_zW: if (empty($jU6y9)) { return Response::generate(-1, '手机不能为空'); } goto ObIuB; kE9NZ: if ($jU6y9 != Session::get('memberProfilePhone')) { return Response::generate(-1, '两次手机不一致'); } goto RXS56; sKH93: Session::forget('memberProfilePhone'); goto FSF1G; mpUwT: MemberUtil::update(MemberUser::id(), array('phoneVerified' => true, 'phone' => $jU6y9)); goto zmEwE; FSF1G: return Response::generate(0, '修改成功', null, '[reload]'); goto RsqVz; xcz_c: $yoPP3 = $ErQts->getTrimString('verify'); goto r5_zW; z5IYg: if (empty($yoPP3)) { return Response::generate(-1, '验证码不能为空'); } goto hGokP; Njck2: if (Session::get('memberProfilePhoneVerifyTime') + 60 * 60 < time()) { return Response::generate(0, '验证码已过期'); } goto kE9NZ; qDQuB: Session::forget('memberProfilePhoneVerifyTime'); goto sKH93; RsqVz: } public function phoneVerify() { goto I77ji; fVMAq: if (!empty($a1J4s)) { if ($a1J4s['id'] != MemberUser::id()) { return Response::generate(-1, '该手机已被其他账户绑定'); } if ($a1J4s['id'] == MemberUser::id() && $a1J4s['phone'] == $jU6y9) { if (!empty($a1J4s['phoneVerified'])) { return Response::generate(-1, '手机号未修改，无需重新绑定。'); } } } goto bB36x; NFLCy: if (!FormatUtil::isPhone($jU6y9)) { return Response::generate(-1, '手机格式不正确'); } goto ncEOE; I77ji: $jU6y9 = Input::get('target'); goto cJtUb; NNF8g: $yoPP3 = rand(100000, 999999); goto nsktQ; YjGzu: Session::put('memberProfilePhoneVerifyTime', time()); goto O_JQ7; oUmi0: $a1J4s = MemberUtil::getByPhone($jU6y9); goto fVMAq; cJtUb: if (empty($jU6y9)) { return Response::generate(-1, '手机不能为空'); } goto NFLCy; nsktQ: Session::put('memberProfilePhoneVerify', $yoPP3); goto YjGzu; ncEOE: if (!CaptchaFacade::check(Input::get('captcha'))) { return Response::generate(ResponseCodes::CAPTCHA_ERROR, '图片验证码错误'); } goto oUmi0; fdqIp: return Response::generate(0, '验证码发送成功'); goto J36hh; XOC0j: SmsSendJob::create($jU6y9, 'verify', array('code' => $yoPP3)); goto fdqIp; O_JQ7: Session::put('memberProfilePhone', $jU6y9); goto XOC0j; bB36x: if (Session::get('memberProfilePhoneVerifyTime') && $jU6y9 == Session::get('memberProfilePhone')) { if (Session::get('memberProfilePhoneVerifyTime') + 60 * 2 > time()) { return Response::generate(0, '验证码发送成功!'); } } goto NNF8g; J36hh: } public function oauthUnbind() { goto wUHDW; NmmcI: $mhShF = $ErQts->getTrimString('type'); goto MV3Ap; wUHDW: $ErQts = InputPackage::buildFromInput(); goto NmmcI; JWfm8: $CVjjl = MemberUtil::getOauthOpenId(MemberUser::id(), $TZ7L5->oauthKey()); goto auZdg; MV3Ap: $TZ7L5 = MemberOauth::getOrFail($mhShF); goto MvWvD; ytv1H: return Response::generate(0, '解绑成功', null, '[reload]'); goto a6gTg; MvWvD: BizException::throwsIfEmpty('授权方式不存在', $TZ7L5); goto JWfm8; auZdg: if ($CVjjl) { MemberUtil::forgetOauth($TZ7L5->oauthKey(), $CVjjl); } goto ytv1H; a6gTg: } public function delete() { goto hiQSA; hiQSA: if (!modstart_config('Member_DeleteEnable', false)) { return Response::generateError('注销账号功能未开启'); } goto uHnft; BycaU: if ($CRCLA['deleteAtTime'] > 0) { return Response::generateError('账号正在注销中'); } goto AEwof; RuPKo: return Response::generate(0, '申请注销成功', null, '[reload]'); goto hfCCI; JrHKt: $iJczG = $ErQts->getTrimString('agree'); goto q7UMs; AEwof: $ErQts = InputPackage::buildFromInput(); goto JrHKt; A5e02: MemberUtil::update(MemberUser::id(), array('deleteAtTime' => time() + TimeUtil::PERIOD_MONTH)); goto RuPKo; uHnft: $CRCLA = MemberUser::get(); goto BycaU; q7UMs: BizException::throwsIf('请勾选同意选项', $iJczG != 'yes'); goto A5e02; hfCCI: } public function deleteRevert() { goto kBr20; kBr20: if (!modstart_config('Member_DeleteEnable', false)) { return Response::generateError('注销账号功能未开启'); } goto nowHN; nowHN: $CRCLA = MemberUser::get(); goto MnL3c; MnL3c: if (empty($CRCLA['deleteAtTime'])) { return Response::generateError('账号没有注销操作'); } goto Cwta4; Cwta4: MemberUtil::update(MemberUser::id(), array('deleteAtTime' => 0)); goto DTZ1E; DTZ1E: return Response::generate(0, '撤销操作成功', null, '[reload]'); goto GVWIG; GVWIG: } }