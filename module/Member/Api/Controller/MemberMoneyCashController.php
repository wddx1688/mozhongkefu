<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Member\Api\Controller; use Illuminate\Routing\Controller; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Core\Type\TypeUtil; use Module\Member\Auth\MemberUser; use Module\Member\Support\MemberLoginCheck; use Module\Member\Type\MemberMoneyCashType; use Module\Member\Util\MemberMoneyUtil; class MemberMoneyCashController extends Controller implements MemberLoginCheck { public function get() { goto MwUSx; MwUSx: $yOLWI = MemberMoneyUtil::getTotal(MemberUser::id()); goto DtTw6; xSlE3: return Response::generateSuccessData(array('total' => $yOLWI, 'desc' => modstart_config('Member_MoneyCashDescription'), 'min' => sprintf('%0.2f', $YeY3K), 'rate' => modstart_config('Member_MoneyCashTaxRate', 0), 'types' => TypeUtil::dump(MemberMoneyCashType::class), 'canCash' => $yOLWI >= $YeY3K, 'defaultType' => MemberMoneyCashType::ALIPAY)); goto GzIcj; DtTw6: $YeY3K = modstart_config('Member_MoneyCashMin', 100); goto xSlE3; GzIcj: } public function calc() { goto PsSno; aO1Gv: if ($ECp_x > $yOLWI) { return Response::generateError('余额不足'); } goto lA_NP; S_YCc: $ECp_x = $ErQts->getDecimal('money'); goto Ft_7w; ECSAg: $qTz8C = bcdiv(bcmul($ECp_x, $Qvsfl, 2), 100, 2); goto SRVpJ; PsSno: $ErQts = InputPackage::buildFromInput(); goto S_YCc; AT68x: $Qvsfl = 100 - min(max($Qvsfl, 0), 99); goto ECSAg; lA_NP: $Qvsfl = modstart_config('Member_MoneyCashTaxRate', 0); goto AT68x; SRVpJ: return Response::generateSuccessData(array('value' => $qTz8C)); goto kBuVD; sCr5t: $yOLWI = MemberMoneyUtil::getTotal(MemberUser::id()); goto aO1Gv; Ft_7w: if ($ECp_x < modstart_config('Member_MoneyCashMin', 100)) { return Response::generateError('最小提现金额为' . modstart_config('Member_MoneyCashMin', 100)); } goto sCr5t; kBuVD: } public function submit() { goto QsfRb; eA0ki: $Qvsfl = modstart_config('Member_MoneyCashTaxRate', 0); goto c5ky4; N3WBO: return Response::generate(0, '提交成功', null, modstart_web_url('member_money/cash/log')); goto pe7Iu; QsfRb: if (!modstart_config('Member_MoneyCashEnable', false)) { return Response::generateError('功能未开启'); } goto Epeg2; Epeg2: $ErQts = InputPackage::buildFromInput(); goto TLpi0; X2Sjf: $yOLWI = MemberMoneyUtil::getTotal(MemberUser::id()); goto buO1p; BYsQK: $mhShF = $ErQts->getType('type', MemberMoneyCashType::class); goto Jje5G; n_zsz: try { goto oDGk_; vgQYV: ModelUtil::transactionCommit(); goto YTX9U; zfNTP: MemberMoneyUtil::cash(MemberUser::id(), $ECp_x, $OB9E8, MemberMoneyCashType::ALIPAY, $bnfzD, $UsXnk); goto vgQYV; oDGk_: ModelUtil::transactionBegin(); goto zfNTP; YTX9U: } catch (\Exception $VPhVw) { ModelUtil::transactionRollback(); throw $VPhVw; } goto N3WBO; U36Qd: $OB9E8 = bcdiv(bcmul($ECp_x, $Qvsfl, 2), 100, 2); goto n_zsz; Jje5G: switch ($mhShF) { case MemberMoneyCashType::ALIPAY: goto nmNGP; W59HO: if (empty($bnfzD)) { return Response::generate(-1, '支付宝姓名不能为空'); } goto lsk6Z; BnOOz: $UsXnk = $ErQts->getTrimString('alipayAccount'); goto W59HO; nmNGP: $bnfzD = $ErQts->getTrimString('alipayRealname'); goto BnOOz; muWP1: break; goto pbPuf; lsk6Z: if (empty($UsXnk)) { return Response::generate(-1, '支付宝账号不能为空'); } goto muWP1; pbPuf: default: return Response::generateError('支付类型错误'); } goto X2Sjf; TLpi0: $ECp_x = $ErQts->getDecimal('money'); goto rwXD5; rwXD5: if ($ECp_x < 0.01) { return Response::generate(-1, '提现金额不能为空'); } goto X9YVR; c5ky4: $Qvsfl = 100 - min(max($Qvsfl, 0), 99); goto U36Qd; X9YVR: if ($ECp_x < modstart_config('Member_MoneyCashMin', 100)) { return Response::generate(-1, '提现金额至少为' . modstart_config('Member_MoneyCashMin', 100)); } goto BYsQK; buO1p: if ($yOLWI < modstart_config('Member_MoneyCashMin', 100)) { return Response::generate(-1, '当前账户余额不满' . modstart_config('Member_MoneyCashMin', 100) . ',不能提现'); } goto eA0ki; pe7Iu: } public function log() { goto Zg0R1; dCurX: $cD48i = array(); goto AQLGh; AQLGh: $NmpUA = MemberMoneyUtil::paginateCash(MemberUser::id(), $ErQts->getPage(), $ErQts->getPageSize(), $cD48i); goto detpa; detpa: return Response::generateSuccessPaginate($ErQts->getPage(), $ErQts->getPageSize(), $NmpUA); goto cCnTp; Zg0R1: $ErQts = InputPackage::buildFromInput(); goto dCurX; cCnTp: } }