<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Member\Util; use Illuminate\Database\Eloquent\Model; use ModStart\Core\Exception\BizException; use ModStart\Core\Util\FileUtil; use ModStart\Module\ModuleManager; use Module\Member\Model\MemberDataStatistic; use Module\Member\Model\MemberUpload; class MemberDataStatisticUtil { public static function checkQuota($tJ6XI) { goto tmip4; lW4wM: $H1Czp = $He0J8['sizeLimit'] * 1024 * 1024; goto XmW8Q; tmip4: if (!$tJ6XI) { BizException::throws('请先登录'); } goto hOGQp; oIyaR: $He0J8 = MemberDataStatistic::getCreateMemberUser($tJ6XI); goto odiOm; hOGQp: if (!ModuleManager::getModuleConfig('Member', 'dataStatisticEnable', false) || !modstart_config('Member_DataStatisticEnable', false)) { return; } goto oIyaR; XmW8Q: if ($He0J8['sizeUsed'] >= $H1Czp) { BizException::throws('您的上传空间已满，最多可以上传' . FileUtil::formatByte($H1Czp)); } goto KeYd0; odiOm: BizException::throwsIfEmpty('获取用户数据统计失败', $He0J8); goto lW4wM; KeYd0: } public static function getCreateMemberUser($vWdBd) { goto oHKx0; KAprq: return $wvU9w->toArray(); goto L5iDc; oHKx0: $wvU9w = MemberDataStatistic::where('id', $vWdBd)->first(); goto B6dAu; B6dAu: if (empty($wvU9w)) { goto iOLfo; iOLfo: $E1j2M = new MemberDataStatistic(); goto imxZn; fhnd9: $E1j2M->sizeLimit = modstart_config('Member_DataStatisticDefaultLimit', 1024); goto hXvpW; hXvpW: $E1j2M->save(); goto cP11n; imxZn: $E1j2M->id = $vWdBd; goto fhnd9; uyn_f: return self::getCreateMemberUser($vWdBd); goto ueOK3; cP11n: self::updateMemberUserUsedSize($vWdBd); goto uyn_f; ueOK3: } goto KAprq; L5iDc: } public static function updateMemberUser($vWdBd, $XWlC_) { goto Umhuu; hu1FM: $zA3QK = false; goto TOrgk; Umhuu: $E1j2M = MemberDataStatistic::where('id', $vWdBd)->first(); goto hu1FM; ytAPE: foreach ($XWlC_ as $U8G_W => $gghxW) { $E1j2M->{$U8G_W} = $gghxW; } goto crAHi; RbeNP: if ($zA3QK) { self::updateMemberUserUsedSize($vWdBd); } goto qjRrx; crAHi: $E1j2M->save(); goto RbeNP; TOrgk: if (empty($E1j2M)) { goto FeaxE; FeaxE: $E1j2M = new MemberDataStatistic(); goto a68Ae; a68Ae: $E1j2M->id = $vWdBd; goto sRSR3; sRSR3: $zA3QK = true; goto vksrS; vksrS: } goto ytAPE; qjRrx: } public static function calcMemberUserUsedSize($vWdBd) { $yOLWI = MemberUpload::where(array('userId' => $vWdBd))->leftJoin('data', 'data.id', '=', 'member_upload.dataId')->sum('data.size'); return intval($yOLWI); } public static function updateMemberUserUsedSize($vWdBd) { $Bj5vh = array('sizeUsed' => self::calcMemberUserUsedSize($vWdBd)); MemberDataStatistic::where('id', $vWdBd)->update($Bj5vh); } }