<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Vendor\QuickRun\Export; use ModStart\Admin\Auth\AdminPermission; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Input\ArrayPackage; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Request; use ModStart\Core\Input\Response; use ModStart\Core\Util\HtmlUtil; class ImportHandle { private $data = array('frameView' => 'modstart::admin.dialogFrame', 'pageTitle' => '导入数据', 'pageDescription' => '', 'templateName' => 'Template', 'templateData' => array(), 'headTitles' => array()); private $importCallback; public function example(ImportHandle $SvWKk) { return $SvWKk->withPageTitle('导入/更新商品信息')->withPageDescription('商品编码唯一，根据商品编码更新或新建商品')->withTemplateName('商品信息')->withTemplateData(array(array('XXXX', '测试名称')))->withHeadTitles(array('编码', '标题'))->handleImport(function ($XWlC_, $uZEpM) { $WJlDi = ArrayPackage::build($XWlC_); $VSP7l = array(); $VSP7l['sn'] = $WJlDi->nextTrimString(); $Bj5vh = array(); $Bj5vh['title'] = $WJlDi->nextTrimString(); ModelUtil::update('xxxx', $VSP7l, $Bj5vh); return Response::generateSuccess(); })->performExcel(); } public function withDialog($qbjRx = true) { if ($qbjRx) { $this->data['frameView'] = 'modstart::admin.dialogFrame'; } else { $this->data['frameView'] = 'modstart::admin.frame'; } return $this; } public function withPageTitle($pqelM) { $this->data['pageTitle'] = $pqelM; return $this; } public function withPageDescription($oXv25, $n2x9O = false) { goto RqD1a; klgFd: return $this; goto P98dB; rImzE: $this->data['pageDescription'] = $oXv25; goto klgFd; RqD1a: if (!$n2x9O) { $oXv25 = HtmlUtil::text2html($oXv25); } goto rImzE; P98dB: } public function withTemplateName($nOIyg) { $this->data['templateName'] = $nOIyg; return $this; } public function withTemplateData($NALde) { $this->data['templateData'] = $NALde; return $this; } public function withHeadTitles($tExQ8) { $this->data['headTitles'] = $tExQ8; return $this; } public function handleImport($oZLCv) { $this->importCallback = $oZLCv; return $this; } public function performExcel() { return $this->perform('xlsx', 'common', array('formats' => array('xlsx'))); } public function performCsv() { return $this->perform('csv', 'common', array('formats' => array('csv'))); } public function performCommon($uZEpM = array()) { return $this->perform(null, 'common', $uZEpM); } private function perform($CYQvS, $tURZC, $uZEpM = array()) { goto qNm6L; qNm6L: if (null === $CYQvS) { $CYQvS = 'xlsx'; } goto WAG6W; WAG6W: if (!isset($uZEpM['formats'])) { $uZEpM['formats'] = array('xlsx', 'csv'); } goto s_Ydb; s_Ydb: $ErQts = InputPackage::buildFromInput(); goto DYOVf; DYOVf: if (Request::isPost()) { goto GUiww; eBPDv: return call_user_func_array($this->importCallback, array($XWlC_, array())); goto fYPPt; GUiww: $XWlC_ = $ErQts->getJson('data'); goto FnILH; FnILH: AdminPermission::demoCheck(); goto eBPDv; fYPPt: } goto LilBb; LilBb: return view('module::Vendor.View.quickRun.import.' . $tURZC, array_merge($this->data, array('ext' => $CYQvS, 'formats' => $uZEpM['formats']))); goto J4L_o; J4L_o: } }