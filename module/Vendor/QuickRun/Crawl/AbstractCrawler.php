<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Vendor\QuickRun\Crawl; use ModStart\Core\Util\SerializeUtil; abstract class AbstractCrawler { protected $queue = null; protected $handlers = array(); protected $delay = array('min' => 0, 'max' => 0); public function setDelay($P4kfD, $nlQbQ = null) { goto C42UG; eNW5Z: $this->delay['min'] = $P4kfD; goto i1BrH; i1BrH: $this->delay['max'] = $nlQbQ; goto YwR5K; C42UG: if (null === $nlQbQ) { $nlQbQ = $P4kfD; } goto eNW5Z; YwR5K: } public function init() { if (null == $this->queue) { $this->queue = new ArrayQueue(); } } public function register($I6NQU, $NCwPm, $EcMfG = null) { $this->handlers[$I6NQU] = array($NCwPm, $EcMfG); } public function dispatch($I6NQU, $uZEpM = array(), $vWdBd = null) { $this->queue->append($I6NQU, $uZEpM, $vWdBd); } public function onFinish() { } public function name() { return class_basename(static::class); } public function logInfo($miOiF, $XWlC_ = null) { goto Pruw4; Pruw4: $fvKJb = array(); goto jRlmq; SS9Yv: $fvKJb[] = $miOiF; goto vI5VG; GfNZu: echo join(' - ', $fvKJb) . '
'; goto rM4uo; jRlmq: $fvKJb[] = date('Y-m-d H:i:s'); goto GXvN_; vI5VG: if (null != $XWlC_) { if (is_string($XWlC_)) { $fvKJb[] = $XWlC_; } else { $fvKJb[] = SerializeUtil::jsonEncode($XWlC_, JSON_UNESCAPED_UNICODE); } } goto GfNZu; GXvN_: $fvKJb[] = '[' . $this->name() . ']'; goto SS9Yv; rM4uo: } public function logError($miOiF, $XWlC_ = null) { goto S5kXp; G4617: echo join(' - ', $fvKJb) . '
'; goto kOhk7; oCObi: $fvKJb[] = '[' . $this->name() . ']'; goto VA5rX; atbzk: $fvKJb[] = date('Y-m-d H:i:s'); goto oCObi; S5kXp: $fvKJb = array(); goto atbzk; uqJg1: if (null != $XWlC_) { $fvKJb[] = SerializeUtil::jsonEncode($XWlC_, JSON_UNESCAPED_UNICODE); } goto G4617; VA5rX: $fvKJb[] = $miOiF; goto uqJg1; kOhk7: } public function run() { while (true) { $Q10Sr = $this->queue->poll(); if (empty($Q10Sr)) { goto kFq0M; KNYEw: break; goto F9p_n; dQplw: $this->logInfo('End'); goto KNYEw; kFq0M: $this->onFinish(); goto dQplw; F9p_n: } if (!isset($this->handlers[$Q10Sr['handler']])) { $this->logError("Handler {$Q10Sr['handler']} not registered", $Q10Sr['param']); continue; } $NCwPm = $this->handlers[$Q10Sr['handler']][0]; $EcMfG = $this->handlers[$Q10Sr['handler']][1]; $vWdBd = $Q10Sr['id']; if ($vWdBd === null) { if (is_string($Q10Sr['param']) || is_numeric($Q10Sr['param'])) { $vWdBd = $Q10Sr['param']; } else { if (is_array($Q10Sr['param'])) { goto WRZ5F; cNIs_: $vWdBd = join(',', $Yb10b); goto ElOv5; rURqo: foreach ($Q10Sr['param'] as $U8G_W => $gghxW) { if (is_string($gghxW) || is_numeric($gghxW)) { } else { $gghxW = SerializeUtil::jsonEncode($gghxW, JSON_UNESCAPED_UNICODE); } $Yb10b[] = "{$U8G_W}:{$gghxW}"; } goto cNIs_; WRZ5F: $Yb10b = array(); goto rURqo; ElOv5: } else { $vWdBd = SerializeUtil::jsonEncode($Q10Sr['param'], JSON_UNESCAPED_UNICODE); } } } try { call_user_func_array($NCwPm, array($this, $Q10Sr['param'], $Q10Sr['id'])); $this->logInfo("Execute {$Q10Sr['handler']} {$vWdBd}"); } catch (\Exception $VPhVw) { goto G2rq2; vyaga: if (null !== $EcMfG) { try { $EcMfG($this, $Q10Sr['param'], $Q10Sr['id']); } catch (\Exception $VPhVw) { $this->logInfo("Execute Fail for Error Handler {$Q10Sr['handler']} {$vWdBd}", $VPhVw->getMessage()); } } goto RQjiE; G2rq2: var_dump($Q10Sr); goto W60CO; W60CO: $this->logInfo("Execute {$Q10Sr['handler']} {$vWdBd}", $VPhVw->getMessage()); goto vyaga; RQjiE: } if ($this->delay['max'] > 0) { usleep(rand($this->delay['min'], $this->delay['max']) * 1000); } } } public abstract function setup(); }