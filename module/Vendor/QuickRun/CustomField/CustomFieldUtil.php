<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Vendor\QuickRun\CustomField; use Illuminate\Support\Facades\Cache; use ModStart\Core\Dao\ModelManageUtil; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Exception\BizException; use ModStart\Core\Util\SerializeUtil; use ModStart\Detail\Detail; use ModStart\Form\Form; use ModStart\Grid\Grid; use ModStart\Grid\GridFilter; class CustomFieldUtil { public static function clearCache($dfKjN) { Cache::forget('QuickRunCustomField:' . $dfKjN . ':fields'); } public static function deleteField($S_2ik, $E9h4W) { ModelManageUtil::ddlFieldDrop($S_2ik, $E9h4W['name']); } public static function addField($S_2ik, $E9h4W) { $TE78d = self::convertField($E9h4W); ModelManageUtil::ddlFieldAdd($S_2ik, $E9h4W['name'], $TE78d); } public static function editField($S_2ik, $G6TYk, $EIBCS) { goto VtLA6; uCd7V: if ($riMG1 != $qitDB || $G6TYk['name'] != $EIBCS['name']) { if ($G6TYk['name'] == $EIBCS['name']) { ModelManageUtil::ddlFieldModify($S_2ik, $EIBCS['name'], $qitDB); } else { ModelManageUtil::ddlFieldChange($S_2ik, $G6TYk['name'], $EIBCS['name'], $qitDB); } } goto hJK8F; V89a1: $qitDB = self::convertField($EIBCS); goto uCd7V; VtLA6: $riMG1 = self::convertField($G6TYk); goto V89a1; hJK8F: } private static function convertField($E9h4W) { switch ($E9h4W['fieldType']) { case CustomFieldType::TEXT: case CustomFieldType::TEXTAREA: case CustomFieldType::RADIO: case CustomFieldType::SELECT: case CustomFieldType::CHECKBOX: case CustomFieldType::IMAGE: case CustomFieldType::IMAGES: case CustomFieldType::FILE: return "VARCHAR({$E9h4W['maxLength']})"; case CustomFieldType::DATE: return 'DATE'; case CustomFieldType::DATETIME: return 'DATETIME'; case CustomFieldType::RICH_TEXT: return 'TEXT'; } return null; } private static function fields($ts2Yv) { return Cache::rememberForever('QuickRunCustomField:' . $ts2Yv['tableField'] . ':fields', function () use($ts2Yv) { $EyMD5 = ModelUtil::all($ts2Yv['tableField'], array(), array('name', 'title', 'fieldType', 'fieldData', 'maxLength', 'enable', 'isRequired', 'isSearch', 'isList', 'placeholder'), array('sort', 'asc')); ModelUtil::decodeRecordsJson($EyMD5, 'fieldData'); return $EyMD5; }); } public static function fieldsEnabled($ts2Yv) { return array_values(array_filter(self::fields($ts2Yv), function ($ZOvGj) { return $ZOvGj['enable']; })); } public static function buildCRUDField($ts2Yv, $rB0ah) { if ($rB0ah instanceof Grid) { self::buildGridField($ts2Yv, $rB0ah); } else { if ($rB0ah instanceof Form) { self::buildFormField($ts2Yv, $rB0ah); } else { if ($rB0ah instanceof Detail) { self::buildDetailField($ts2Yv, $rB0ah); } } } } public static function buildGridField($ts2Yv, Grid $qCqqU) { $EyMD5 = self::fieldsEnabled($ts2Yv); foreach ($EyMD5 as $E9h4W) { if ($E9h4W['isList']) { goto Yyssl; HVb21: if (!empty($E9h4W['fieldData']['options'])) { $r4yVi = array_build($E9h4W['fieldData']['options'], function ($U8G_W, $gghxW) { return array($gghxW, $gghxW); }); } goto jvRkd; Yyssl: $r4yVi = array(); goto HVb21; jvRkd: switch ($E9h4W['fieldType']) { case CustomFieldType::TEXT: $DHPQB = $qCqqU->text($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::TEXTAREA: $DHPQB = $qCqqU->textarea($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::RADIO: $DHPQB = $qCqqU->radio($E9h4W['name'], $E9h4W['title'])->options($r4yVi); break; case CustomFieldType::SELECT: $DHPQB = $qCqqU->select($E9h4W['name'], $E9h4W['title'])->options($r4yVi); break; case CustomFieldType::CHECKBOX: $DHPQB = $qCqqU->checkbox($E9h4W['name'], $E9h4W['title'])->options($r4yVi); break; case CustomFieldType::IMAGE: $DHPQB = $qCqqU->image($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::IMAGES: $DHPQB = $qCqqU->images($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::FILE: $DHPQB = $qCqqU->file($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::DATE: $DHPQB = $qCqqU->date($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::DATETIME: $DHPQB = $qCqqU->datetime($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::RICH_TEXT: $DHPQB = $qCqqU->richHtml($E9h4W['name'], $E9h4W['title']); break; default: BizException::throws('未知字段类型' . SerializeUtil::jsonEncode($E9h4W, JSON_UNESCAPED_UNICODE)); } goto Bx_42; Bx_42: $DHPQB->placeholder($E9h4W['placeholder']); goto lh1eu; lh1eu: if ($E9h4W['isRequired']) { $DHPQB->required(); } goto VBLEJ; VBLEJ: } } } public static function buildGridFilter($ts2Yv, GridFilter $RryBq) { $EyMD5 = self::fieldsEnabled($ts2Yv); foreach ($EyMD5 as $E9h4W) { if ($E9h4W['isSearch']) { goto onQR1; onQR1: $r4yVi = array(); goto qg3zy; qg3zy: if (!empty($E9h4W['fieldData']['options'])) { $r4yVi = array_build($E9h4W['fieldData']['options'], function ($U8G_W, $gghxW) { return array($gghxW, $gghxW); }); } goto I2n2u; I2n2u: switch ($E9h4W['fieldType']) { case CustomFieldType::TEXT: case CustomFieldType::TEXTAREA: $RryBq->like($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::RADIO: case CustomFieldType::SELECT: $RryBq->eq($E9h4W['name'], $E9h4W['title'])->select($r4yVi); break; case CustomFieldType::DATE: $RryBq->range($E9h4W['name'], $E9h4W['title'])->date(); break; case CustomFieldType::DATETIME: $RryBq->range($E9h4W['name'], $E9h4W['title'])->datetime(); break; } goto PbqQR; PbqQR: } } } public static function buildFormField($ts2Yv, Form $yAhCR) { $EyMD5 = self::fieldsEnabled($ts2Yv); foreach ($EyMD5 as $E9h4W) { goto bPbL0; hfZ7K: $DHPQB->placeholder($E9h4W['placeholder']); goto n33Ov; qF2rH: if (!empty($E9h4W['fieldData']['options'])) { $r4yVi = array_build($E9h4W['fieldData']['options'], function ($U8G_W, $gghxW) { return array($gghxW, $gghxW); }); } goto uKq1w; uKq1w: switch ($E9h4W['fieldType']) { case CustomFieldType::TEXT: $DHPQB = $yAhCR->text($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::TEXTAREA: $DHPQB = $yAhCR->textarea($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::RADIO: $DHPQB = $yAhCR->radio($E9h4W['name'], $E9h4W['title'])->options($r4yVi); break; case CustomFieldType::SELECT: $DHPQB = $yAhCR->select($E9h4W['name'], $E9h4W['title'])->options($r4yVi); break; case CustomFieldType::CHECKBOX: $DHPQB = $yAhCR->checkbox($E9h4W['name'], $E9h4W['title'])->options($r4yVi); break; case CustomFieldType::IMAGE: $DHPQB = $yAhCR->image($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::IMAGES: $DHPQB = $yAhCR->images($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::FILE: $DHPQB = $yAhCR->file($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::DATE: $DHPQB = $yAhCR->date($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::DATETIME: $DHPQB = $yAhCR->datetime($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::RICH_TEXT: $DHPQB = $yAhCR->richHtml($E9h4W['name'], $E9h4W['title']); break; default: BizException::throws('未知字段类型' . SerializeUtil::jsonEncode($E9h4W, JSON_UNESCAPED_UNICODE)); } goto hfZ7K; n33Ov: if ($E9h4W['isRequired']) { $DHPQB->required(); } goto SPDo_; bPbL0: $r4yVi = array(); goto qF2rH; SPDo_: } } public static function buildDetailField($ts2Yv, Detail $zNk4h) { $EyMD5 = self::fieldsEnabled($ts2Yv); foreach ($EyMD5 as $E9h4W) { goto mQr4W; mQr4W: $r4yVi = array(); goto cuOvM; ztcnI: if ($E9h4W['isRequired']) { $DHPQB->required(); } goto egBzx; cuOvM: if (!empty($E9h4W['fieldData']['options'])) { $r4yVi = array_build($E9h4W['fieldData']['options'], function ($U8G_W, $gghxW) { return array($gghxW, $gghxW); }); } goto aHfAQ; aHfAQ: switch ($E9h4W['fieldType']) { case CustomFieldType::TEXT: $DHPQB = $zNk4h->text($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::TEXTAREA: $DHPQB = $zNk4h->textarea($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::RADIO: $DHPQB = $zNk4h->radio($E9h4W['name'], $E9h4W['title'])->options($r4yVi); break; case CustomFieldType::SELECT: $DHPQB = $zNk4h->select($E9h4W['name'], $E9h4W['title'])->options($r4yVi); break; case CustomFieldType::CHECKBOX: $DHPQB = $zNk4h->checkbox($E9h4W['name'], $E9h4W['title'])->options($r4yVi); break; case CustomFieldType::IMAGE: $DHPQB = $zNk4h->image($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::IMAGES: $DHPQB = $zNk4h->images($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::FILE: $DHPQB = $zNk4h->file($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::DATE: $DHPQB = $zNk4h->date($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::DATETIME: $DHPQB = $zNk4h->datetime($E9h4W['name'], $E9h4W['title']); break; case CustomFieldType::RICH_TEXT: $DHPQB = $zNk4h->richHtml($E9h4W['name'], $E9h4W['title']); break; default: BizException::throws('未知字段类型' . SerializeUtil::jsonEncode($E9h4W, JSON_UNESCAPED_UNICODE)); } goto bo3my; bo3my: $DHPQB->placeholder($E9h4W['placeholder']); goto ztcnI; egBzx: } } private static function processRecord($EyMD5, $He0J8) { goto YZsAB; zazuJ: return $He0J8; goto V2FI0; YZsAB: if (empty($He0J8)) { return $He0J8; } goto oH5dY; oH5dY: foreach ($EyMD5 as $E9h4W) { if (!isset($He0J8[$E9h4W['name']])) { continue; } switch ($E9h4W['fieldType']) { case CustomFieldType::CHECKBOX: case CustomFieldType::IMAGES: goto Y_xdF; Ns6AL: if (empty($He0J8[$E9h4W['name']])) { $He0J8[$E9h4W['name']] = array(); } goto sC4ky; Y_xdF: $He0J8[$E9h4W['name']] = @json_decode($He0J8[$E9h4W['name']], true); goto Ns6AL; sC4ky: break; goto qS4SQ; qS4SQ: } } goto zazuJ; V2FI0: } public static function buildRecord($ts2Yv, $He0J8) { $EyMD5 = self::fields($ts2Yv); return self::processRecord($EyMD5, $He0J8); } public static function buildRecords($ts2Yv, $EnI2D) { goto zUQ9u; zUQ9u: $EyMD5 = self::fields($ts2Yv); goto NBo5_; NEH7w: return $EnI2D; goto wxrvD; NBo5_: foreach ($EnI2D as $U8G_W => $He0J8) { $EnI2D[$U8G_W] = self::processRecord($EyMD5, $He0J8); } goto NEH7w; wxrvD: } public static function renderValue($E9h4W, $He0J8) { goto XrXT8; KKSln: switch ($E9h4W['fieldType']) { case CustomFieldType::TEXT: case CustomFieldType::TEXTAREA: case CustomFieldType::RADIO: case CustomFieldType::SELECT: case CustomFieldType::DATE: case CustomFieldType::DATETIME: return htmlspecialchars($qTz8C); case CustomFieldType::CHECKBOX: return htmlspecialchars(join(',', $qTz8C)); case CustomFieldType::IMAGE: return '<div><img src="' . htmlspecialchars($qTz8C) . '" style="max-width:100%;" /></div>'; case CustomFieldType::IMAGES: goto Ozn1N; Ozn1N: $ZpNyF = array(); goto XZ3O7; XZ3O7: foreach ($qTz8C as $gghxW) { $ZpNyF[] = '<div><img src="' . htmlspecialchars($gghxW) . '" style="max-width:100%;" /></div>'; } goto SrC_C; SrC_C: return join('', $ZpNyF); goto M6Ntm; M6Ntm: case CustomFieldType::FILE: return '<a href=\'' . htmlspecialchars($qTz8C) . '\' target=\'_blank\'>' . htmlspecialchars($qTz8C) . '</a>'; case CustomFieldType::RICH_TEXT: return '<div class=\'ub-html\'>' . $qTz8C . '</div>'; } goto bbxeu; XrXT8: if (!isset($He0J8[$E9h4W['name']])) { return ''; } goto T2ztJ; T2ztJ: $qTz8C = $He0J8[$E9h4W['name']]; goto KKSln; bbxeu: } }