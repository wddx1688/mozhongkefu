<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Vendor\Web\Controller; use Illuminate\Routing\Controller; use Illuminate\Support\Facades\Artisan; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; use Illuminate\Support\Str; use ModStart\Admin\Auth\Admin; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Input\InputPackage; use ModStart\Core\Input\Response; use ModStart\Core\Util\RandomUtil; use ModStart\Module\ModuleManager; use PDO; class InstallController extends Controller { public function lock() { goto CtOKC; CtOKC: $mo17W = storage_path('install.lock'); goto ghsAy; Ce2AL: file_put_contents($mo17W, 'lock'); goto F9exM; F9exM: return Response::send(0, 'install lock ok ^_^'); goto P2zi5; ghsAy: if (file_exists($mo17W)) { return Response::send(0, 'install lock error -_-'); } goto Ce2AL; P2zi5: } public function ping() { try { goto OG_fm; OG_fm: $sZrkl = Artisan::call('env'); goto Od2Kx; Od2Kx: $pkbsE = trim(Artisan::output()); goto TK9Qu; aZPnY: return 'ERROR: code=' . $sZrkl . ', msg:' . $pkbsE; goto nqZaR; TK9Qu: if (0 == $sZrkl) { if (Str::contains($pkbsE, 'Current application environment')) { return 'ok'; } if (Str::contains($pkbsE, 'The application environment is')) { return 'ok'; } } goto aZPnY; nqZaR: } catch (\Exception $VPhVw) { return 'ERROR:' . $VPhVw->getMessage(); } } public function prepare() { goto TozqL; QOxgp: if (file_exists(base_path('license_url.txt')) && !$fNj8j) { return Response::jsonError('请先同意《软件安装许可协议》'); } goto U7XG4; vlmt9: $RnTXq = $ErQts->getTrimString('db_host'); goto DinA4; LNf33: $WvYnL = preg_replace('/DB_PASSWORD=(.*?)\\n/', 'DB_PASSWORD=' . $C8yhn . '
', $WvYnL); goto MSJVg; UwiYk: $oGlLC = $ErQts->getBoolean('installDemo'); goto bMI4c; MqTjU: if (empty($LO03A)) { return Response::jsonError('数据库端口不能为空'); } goto Lhwz2; MA7K1: $WvYnL = preg_replace('/APP_KEY=(.*?)\\n/', 'APP_KEY=' . RandomUtil::string(32) . '
', $WvYnL); goto Fgojc; OcSky: $C8yhn = $ErQts->getTrimString('db_password', ''); goto dIaAp; urGAb: return Response::jsonSuccess(); goto WyfJi; Fgojc: $WvYnL = preg_replace('/ENCRYPT_KEY=(.*?)\\n/', 'ENCRYPT_KEY=' . RandomUtil::string(32) . '
', $WvYnL); goto CJG9J; rin2o: $ErQts = InputPackage::buildFromInput(); goto vlmt9; vIqPZ: if (empty($ka1fy)) { return Response::jsonError('数据库用户名不能为空'); } goto QbW2c; DinA4: $LO03A = $ErQts->getTrimString('db_port'); goto pYh0N; liQWq: if (empty($RnTXq)) { return Response::jsonError('数据库主机名不能为空'); } goto MqTjU; QbW2c: if (empty($c_Qdc)) { return Response::jsonError('管理用户不能为空'); } goto JtiBR; cw5UQ: $ka1fy = $ErQts->getTrimString('db_username'); goto OcSky; t9aOD: $UQCmF = $ErQts->getJson('INSTALL_CONFIG'); goto liQWq; tOSeL: file_put_contents(base_path('.env'), $WvYnL); goto urGAb; pYh0N: $q63WA = $ErQts->getTrimString('db_database'); goto cw5UQ; PlXaE: $WvYnL = preg_replace('/DB_DATABASE=(.*?)\\n/', 'DB_DATABASE=' . $q63WA . '
', $WvYnL); goto xNTAQ; U7XG4: try { new PDO("mysql:host={$RnTXq};port={$LO03A};dbname={$q63WA}", $ka1fy, $C8yhn); } catch (\Exception $VPhVw) { goto gDHC7; vnECP: return Response::jsonError('连接数据信息 ' . $RnTXq . ':' . $LO03A . '.' . $q63WA . ' 失败!'); goto MJRY9; IBayX: Log::error('InstallError -> ' . $VPhVw->getMessage() . ' -> ' . $VPhVw->getTraceAsString()); goto vnECP; gDHC7: $miOiF = $VPhVw->getMessage(); goto cJfbr; cJfbr: if (str_contains($miOiF, 'Server sent charset unknown to the client')) { return Response::generateError('数据库编码不支持：' . $miOiF); } else { if (str_contains($miOiF, 'Access denied for user')) { return Response::generateError('用户密码不匹配：' . $miOiF); } } goto IBayX; MJRY9: } goto ECqgt; xNTAQ: $WvYnL = preg_replace('/DB_USERNAME=(.*?)\\n/', 'DB_USERNAME=' . $ka1fy . '
', $WvYnL); goto LNf33; ECqgt: $WvYnL = file_get_contents(base_path('env.example')); goto n_66O; TozqL: if (file_exists(storage_path('install.lock'))) { return Response::jsonError('系统不能重复安装（请删除install.lock文件后重试）'); } goto jL6mX; JtiBR: if (empty($ESrAL)) { return Response::jsonError('管理用户密码不能为空'); } goto QOxgp; MSJVg: $WvYnL = preg_replace('/DB_PREFIX=(.*?)\\n/', 'DB_PREFIX=' . $w_KOY . '
', $WvYnL); goto MA7K1; CJG9J: if (!empty($UQCmF['envs'])) { foreach ($UQCmF['envs'] as $colPr) { $WvYnL = preg_replace('/' . $colPr['name'] . '=(.*?)\\n/', $colPr['name'] . '=' . $ErQts->getTrimString($colPr['name']) . '
', $WvYnL); } } goto tOSeL; U1ZRF: $WvYnL = preg_replace('/DB_HOST=(.*?)\\n/', 'DB_HOST=' . $RnTXq . '
', $WvYnL); goto UYXqT; n_66O: $WvYnL = preg_replace('/APP_DEBUG=(.*?)\\n/', 'APP_DEBUG=false
', $WvYnL); goto U1ZRF; LgKVH: $ESrAL = $ErQts->getTrimString('password'); goto UwiYk; jL6mX: if (file_exists($njUmW = base_path('.env'))) { $n3GvS = file_get_contents($njUmW); if (str_contains($n3GvS, 'DB_HOST')) { return Response::jsonError('请先清空.env文件'); } } goto rin2o; UYXqT: $WvYnL = preg_replace('/DB_PORT=(.*?)\\n/', 'DB_PORT=' . $LO03A . '
', $WvYnL); goto PlXaE; bMI4c: $fNj8j = $ErQts->getBoolean('installLicense'); goto t9aOD; he2Xm: $c_Qdc = $ErQts->getTrimString('username'); goto LgKVH; dIaAp: $w_KOY = $ErQts->getTrimString('db_prefix', ''); goto he2Xm; Lhwz2: if (empty($q63WA)) { return Response::jsonError('数据库数据库不能为空'); } goto vIqPZ; WyfJi: } public function execute() { goto InuOp; cS52M: $c_Qdc = $ErQts->getTrimString('username'); goto MAhMS; kU5Os: if ($KFoIU === 0) { Admin::add($c_Qdc, $ESrAL); } goto djtrV; djtrV: foreach (ModuleManager::listAllInstalledModulesInRequiredOrder() as $NS22k) { goto OSRNq; OSRNq: if (!ModuleManager::isExists($NS22k)) { continue; } goto ODQrT; ODQrT: try { $FZUh3 = ModuleManager::install($NS22k); } catch (\Exception $VPhVw) { return $this->handleException($VPhVw); } goto yP9eC; yP9eC: if (Response::isError($FZUh3)) { return Response::generateError($FZUh3['msg']); } goto ifK6d; ifK6d: } goto EKF6m; zfdNX: $sZrkl = 0; goto vreg4; EKF6m: if ($oGlLC && file_exists($n8fWJ = public_path('data_demo/data.php'))) { goto zKUPl; bJYHD: if (!empty($XWlC_['updates'])) { foreach ($XWlC_['updates'] as $He0J8) { DB::table($He0J8['table'])->where($He0J8['where'])->update($He0J8['update']); } } goto iVpNI; zKUPl: $XWlC_ = (include $n8fWJ); goto V9rrd; V9rrd: if (!empty($XWlC_['inserts'])) { foreach ($XWlC_['inserts'] as $S_2ik => $EnI2D) { ModelUtil::insertAll($S_2ik, $EnI2D); } } goto bJYHD; iVpNI: } goto D5PDg; s8TBc: if (empty($ESrAL)) { return Response::jsonError('管理用户密码为空'); } goto S_UM4; lkpO3: return Response::json(0, '安装成功，点击即将跳转到管理后台', null, '/admin'); goto GUSVw; NX4gH: $oGlLC = $ErQts->getBoolean('installDemo'); goto UeBuO; D5PDg: file_put_contents(storage_path('install.lock'), 'lock'); goto lkpO3; InuOp: if (file_exists(storage_path('install.lock'))) { return Response::jsonError('系统不能重复安装（请删除install.lock文件后重试）'); } goto tpCzf; MAhMS: $ESrAL = $ErQts->getTrimString('password'); goto NX4gH; tpCzf: $ErQts = InputPackage::buildFromInput(); goto cS52M; iypOE: if (0 != $sZrkl) { return Response::jsonError("安装错误 exitCode({$sZrkl})"); } goto XgLLK; XgLLK: $KFoIU = ModelUtil::count('admin_user'); goto kU5Os; vreg4: try { $sZrkl = Artisan::call('migrate'); } catch (\Exception $VPhVw) { return $this->handleException($VPhVw); } goto iypOE; S_UM4: set_time_limit(0); goto zfdNX; UeBuO: if (empty($c_Qdc)) { return Response::jsonError('管理用户名为空'); } goto s8TBc; GUSVw: } private function handleException(\Exception $VPhVw) { goto XwMEN; yXvLx: throw $VPhVw; goto XlP8Y; G_cRo: $obcwz = $VPhVw->getTraceAsString(); goto Mvslt; XwMEN: $miOiF = $VPhVw->getMessage(); goto G_cRo; AJrR8: if (preg_match('/Duplicate column name \'(.*?)\'/', $miOiF, $rGUSQ)) { goto NnSwg; NnSwg: $E9h4W = $rGUSQ[1]; goto qHa8j; Sb34k: return Response::jsonError('数据表字段 ' . $E9h4W . ' 已经存在（请查看' . $n8fWJ . '迁移文件配置）'); goto Ranzh; qHa8j: $n8fWJ = null; goto fLVaH; fLVaH: if (preg_match('/(module\\/.*?\\/Migrate\\/.*?\\.php)/', $obcwz, $rGUSQ)) { $n8fWJ = $rGUSQ[1]; } goto Sb34k; Ranzh: } goto yXvLx; Mvslt: if (preg_match('/Table \'(.*?)\' already exists/', $miOiF, $rGUSQ)) { return Response::jsonError('数据表 ' . $rGUSQ[1] . ' 已经存在（可能您使用了一个非空的数据库，请删除表或更新数据库）'); } goto AJrR8; XlP8Y: } }