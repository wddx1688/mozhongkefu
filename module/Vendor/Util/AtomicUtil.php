<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Vendor\Util; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Util\RandomUtil; use ModStart\Core\Util\RedisUtil; class AtomicUtil { private static function autoCleanDB() { if (RandomUtil::percent(20)) { ModelUtil::model('atomic')->where('expire', '<', time())->delete(); } } public static function produce($rfBQu, $qTz8C, $u0rBB = 3600) { if (RedisUtil::isEnable()) { goto m1Q4b; wz7c6: RedisUtil::set($tNnqn, $qTz8C); goto OMDwF; OMDwF: RedisUtil::expire($tNnqn, $u0rBB); goto D3li9; m1Q4b: $tNnqn = "Atomic:{$rfBQu}"; goto wz7c6; D3li9: } else { if (ModelUtil::exists('atomic', array('name' => $rfBQu))) { ModelUtil::update('atomic', array('name' => $rfBQu), array('value' => $qTz8C, 'expire' => time() + $u0rBB)); } else { ModelUtil::insert('atomic', array('name' => $rfBQu, 'value' => $qTz8C, 'expire' => time() + $u0rBB)); } self::autoCleanDB(); } } public static function consume($rfBQu) { if (RedisUtil::isEnable()) { goto uk7fB; uk7fB: $tNnqn = "Atomic:{$rfBQu}"; goto JkKDk; JkKDk: if (RedisUtil::decr($tNnqn) >= 0) { return true; } goto OWqHa; OWqHa: return false; goto bHqyr; bHqyr: } else { goto BFzQy; BFzQy: self::autoCleanDB(); goto VOgbj; OYpeu: ModelUtil::update('atomic', array('name' => $rfBQu), array('value' => $TkR5h['value'] - 1)); goto NKsUO; BdtVQ: $TkR5h = ModelUtil::getWithLock('atomic', array('name' => $rfBQu)); goto UNB6T; VOgbj: ModelUtil::transactionBegin(); goto BdtVQ; NKsUO: ModelUtil::transactionCommit(); goto YWNYY; OgGYm: if ($TkR5h['expire'] < time() || $TkR5h['value'] < 0) { goto nuDZJ; k8xkE: return false; goto PzKJI; nuDZJ: ModelUtil::delete('atomic', array('name' => $rfBQu)); goto o5riF; o5riF: ModelUtil::transactionCommit(); goto k8xkE; PzKJI: } goto OYpeu; UNB6T: if (empty($TkR5h)) { ModelUtil::transactionCommit(); return false; } goto OgGYm; YWNYY: return true; goto eTWGM; eTWGM: } } public static function remove($rfBQu) { if (RedisUtil::isEnable()) { $tNnqn = "Atomic:{$rfBQu}"; RedisUtil::delete($tNnqn); } else { ModelUtil::delete('atomic', array('name' => $rfBQu)); } } public static function acquire($rfBQu, $u0rBB = 30) { if (RedisUtil::isEnable()) { goto VzIpY; wGHw7: $B3QPQ = RedisUtil::get($Cc2wA); goto eArrL; VzIpY: $Cc2wA = "Atomic:{$rfBQu}"; goto Joj1I; syggC: return false; goto CRJGW; eArrL: if ($B3QPQ < time()) { RedisUtil::delete($Cc2wA); return self::acquire($rfBQu, $u0rBB); } goto syggC; Joj1I: if (RedisUtil::setnx($Cc2wA, time() + $u0rBB)) { RedisUtil::expire($Cc2wA, $u0rBB); return true; } goto wGHw7; CRJGW: } else { goto hSVDL; o6pkd: $B3QPQ = time() + $u0rBB; goto HRfNg; xnjwD: return false; goto vlYG7; Jm9s_: $TkR5h = ModelUtil::getWithLock('atomic', array('name' => $rfBQu)); goto o6pkd; HRfNg: if (empty($TkR5h)) { goto lVfa8; lVfa8: ModelUtil::insert('atomic', array('name' => $rfBQu, 'value' => 1, 'expire' => $B3QPQ)); goto RPmYF; RPmYF: ModelUtil::transactionCommit(); goto md11E; md11E: return true; goto tuH9i; tuH9i: } goto ZADUz; LHQsn: ModelUtil::transactionBegin(); goto Jm9s_; hSVDL: self::autoCleanDB(); goto LHQsn; ZADUz: if ($TkR5h['expire'] < time()) { goto sh5bc; sh5bc: ModelUtil::update('atomic', array('name' => $rfBQu), array('value' => 1, 'expire' => $B3QPQ)); goto q4dJJ; vDxdL: return true; goto oPCh0; q4dJJ: ModelUtil::transactionCommit(); goto vDxdL; oPCh0: } goto ewM6D; ewM6D: ModelUtil::transactionCommit(); goto xnjwD; vlYG7: } } public static function release($rfBQu) { if (RedisUtil::isEnable()) { $Cc2wA = "Atomic:{$rfBQu}"; RedisUtil::delete($Cc2wA); } else { ModelUtil::delete('atomic', array('name' => $rfBQu)); } } }