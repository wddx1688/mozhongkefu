<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Vendor\Provider\IDManager; use Illuminate\Support\Facades\Cache; abstract class AbstractDbCacheIDManager extends AbstractIDManager { public abstract function dbCacheAll(); private function clearCache() { Cache::forget($this->name() . '_All'); } public function all() { return Cache::rememberForever($this->name() . '_All', function () { return $this->dbCacheAll(); }); } public function add($Yb10b) { $this->clearCache(); } public function remove($Yb10b) { $this->clearCache(); } public function total() { return count($this->all()); } private function idsPaginate(&$Yb10b, $ZkvUG, $PP9UF) { goto C1KaJ; C1KaJ: $ZkvUG = max($ZkvUG, 1); goto syPyN; syPyN: $kxIuL = max($ZkvUG - 1, 0) * $PP9UF; goto ZrVGS; Lt2Q6: for ($k8Rwr = $kxIuL; $k8Rwr < $kxIuL + $PP9UF; $k8Rwr++) { if (!isset($Yb10b[$k8Rwr])) { break; } $PBpnF[] = $Yb10b[$k8Rwr]; } goto xflHn; xflHn: return $PBpnF; goto HLog5; TOioI: $PBpnF = array(); goto Lt2Q6; ZrVGS: if (!isset($Yb10b[$kxIuL])) { return array(); } goto TOioI; HLog5: } public function paginate($ZkvUG, $PP9UF) { $Yb10b = $this->all(); return $this->idsPaginate($Yb10b, $ZkvUG, $PP9UF); } public function paginateRandom($ZkvUG, $PP9UF, $LzFZ1 = 'all', $O0Zfn = 60) { $Yb10b = Cache::remember($this->name() . '_Random_' . $LzFZ1, $O0Zfn, function () { $Yb10b = $this->all(); shuffle($Yb10b); return $Yb10b; }); return $this->idsPaginate($Yb10b, $ZkvUG, $PP9UF); } public function forgetRandom($LzFZ1 = 'all') { Cache::forget($this->name() . '_Random_' . $LzFZ1); } }