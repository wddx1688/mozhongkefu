<?php
/**
 * ------------------------ 
 *  版权所有  www.tecmz.com
 *  商业版本请购买正版授权使用
 * ------------------------
*/ namespace Module\Vendor\Atomic; use ModStart\Core\Dao\ModelUtil; use ModStart\Core\Util\RandomUtil; use ModStart\Core\Util\RedisUtil; class AtomicUtil { private static function autoCleanDB() { if (RandomUtil::percent(20)) { ModelUtil::model('atomic')->where('expire', '<', time())->delete(); } } public static function produce($rfBQu, $qTz8C, $u0rBB = 3600) { if (RedisUtil::isEnable()) { goto USOHL; USOHL: $tNnqn = "Atomic:{$rfBQu}"; goto reyPr; reyPr: RedisUtil::set($tNnqn, $qTz8C); goto ZTxao; ZTxao: RedisUtil::expire($tNnqn, $u0rBB); goto aFybb; aFybb: } else { if (ModelUtil::exists('atomic', array('name' => $rfBQu))) { ModelUtil::update('atomic', array('name' => $rfBQu), array('value' => $qTz8C, 'expire' => time() + $u0rBB)); } else { ModelUtil::insert('atomic', array('name' => $rfBQu, 'value' => $qTz8C, 'expire' => time() + $u0rBB)); } self::autoCleanDB(); } } public static function consume($rfBQu) { if (RedisUtil::isEnable()) { goto pI8ms; pI8ms: $tNnqn = "Atomic:{$rfBQu}"; goto y71bE; y71bE: if (RedisUtil::decr($tNnqn) >= 0) { return true; } goto wUfit; wUfit: return false; goto Yt4z6; Yt4z6: } else { goto XzVmm; XzVmm: self::autoCleanDB(); goto YCOcQ; jAaYC: if (empty($TkR5h)) { ModelUtil::transactionCommit(); return false; } goto elbxy; YCOcQ: ModelUtil::transactionBegin(); goto Nd5dI; Nd5dI: $TkR5h = ModelUtil::getWithLock('atomic', array('name' => $rfBQu)); goto jAaYC; elbxy: if ($TkR5h['expire'] < time() || $TkR5h['value'] < 0) { goto P8xjy; EH1Un: return false; goto zgj4N; OWk2S: ModelUtil::transactionCommit(); goto EH1Un; P8xjy: ModelUtil::delete('atomic', array('name' => $rfBQu)); goto OWk2S; zgj4N: } goto Lkr3x; Lkr3x: ModelUtil::update('atomic', array('name' => $rfBQu), array('value' => $TkR5h['value'] - 1)); goto zY9QP; qatrL: return true; goto K0zc2; zY9QP: ModelUtil::transactionCommit(); goto qatrL; K0zc2: } } public static function remove($rfBQu) { if (RedisUtil::isEnable()) { $tNnqn = "Atomic:{$rfBQu}"; RedisUtil::delete($tNnqn); } else { ModelUtil::delete('atomic', array('name' => $rfBQu)); } } public static function acquire($rfBQu, $u0rBB = 30) { if (RedisUtil::isEnable()) { goto q63P2; dcHmg: if (RedisUtil::setnx($Cc2wA, time() + $u0rBB)) { RedisUtil::expire($Cc2wA, $u0rBB); return true; } goto TBKDX; ppT2v: if ($B3QPQ < time()) { RedisUtil::delete($Cc2wA); return self::acquire($rfBQu, $u0rBB); } goto zaDLi; q63P2: $Cc2wA = "Atomic:{$rfBQu}"; goto dcHmg; zaDLi: return false; goto YR2RA; TBKDX: $B3QPQ = RedisUtil::get($Cc2wA); goto ppT2v; YR2RA: } else { goto rwDpo; ZnA9V: if (empty($TkR5h)) { goto wQhN0; wQhN0: ModelUtil::insert('atomic', array('name' => $rfBQu, 'value' => 1, 'expire' => $B3QPQ)); goto v_7Kz; w09gG: return true; goto yJv02; v_7Kz: ModelUtil::transactionCommit(); goto w09gG; yJv02: } goto ppt6e; ppt6e: if ($TkR5h['expire'] < time()) { goto j2ZSE; a68d0: return true; goto ekxPR; j2ZSE: ModelUtil::update('atomic', array('name' => $rfBQu), array('value' => 1, 'expire' => $B3QPQ)); goto WwV7W; WwV7W: ModelUtil::transactionCommit(); goto a68d0; ekxPR: } goto AbOwW; AbOwW: ModelUtil::transactionCommit(); goto i999s; LaQAx: $TkR5h = ModelUtil::getWithLock('atomic', array('name' => $rfBQu)); goto yeLAR; yeLAR: $B3QPQ = time() + $u0rBB; goto ZnA9V; i999s: return false; goto fL5jF; rwDpo: self::autoCleanDB(); goto I5Hss; I5Hss: ModelUtil::transactionBegin(); goto LaQAx; fL5jF: } } public static function release($rfBQu) { if (RedisUtil::isEnable()) { $Cc2wA = "Atomic:{$rfBQu}"; RedisUtil::delete($Cc2wA); } else { ModelUtil::delete('atomic', array('name' => $rfBQu)); } } }